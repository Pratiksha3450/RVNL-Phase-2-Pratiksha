@model RVNLMIS.Models.ConsActivity
@{
    Layout = null;
}

<div class="card" id="">
    <div class="card-header pb-4">
        <h5>Construction Activity Information</h5>
    </div>
    @using (Ajax.BeginForm("AddConsActivityDetails", "ManageActivities", null, new AjaxOptions { HttpMethod = "Post", OnSuccess = "OnConsActivitySuccess" }, new { @class = "form", @id = "frmConsActivity" }))
    {
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ConsActId)
        <div class="card-body pl-3 pr-3 pb-1 pt-2" id="card1">
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group mb-1">
                        <label class="col-form-label-sm-user text-black-50" for="txtConsActivityCode">Activity Group @Html.ValidationMessageFor(model => model.ActGId, "", new { @class = "text-danger" })</label>
                        @if (ViewBag.ActivityGroupsList != null)
                        {
                            @Html.DropDownListFor(model => model.ActGId, ViewBag.ActivityGroupsList as SelectList, "Select Activity Group", new { @class = "mb-3 form-control form-control-sm" })
                        }
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group mb-1">
                        <label class="col-form-label-sm-user text-black-50" for="txtConsActivityCode">Activity Code @Html.ValidationMessageFor(model => model.ActivityCode, "", new { @class = "text-danger" })</label>

                        @Html.EditorFor(model => model.ActivityCode, new { htmlAttributes = new { @class = "mb-3 form-control", @type = "text", @placeholder = "Enter ConsActivity Code", @readonly = "readonly" } })

                    </div>
                </div>

                <div class="col-md-12">
                    <div class="form-group mb-1">
                        <label class="col-form-label-sm-user text-black-50" for="txtConsActivityName">Activity Name @Html.ValidationMessageFor(model => model.ActivityName, "", new { @class = "text-danger" })</label>
                        @Html.EditorFor(model => model.ActivityName, new { htmlAttributes = new { @class = "mb-3 form-control", @type = "text", @placeholder = "Enter Activity Name" } })
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group mb-1">
                        <label class="col-form-label-sm-user text-black-50" for="txLatitude">Activity  Unit </label>
                        @Html.EditorFor(model => model.ActUnit, new { htmlAttributes = new { @class = "mb-3 form-control", @type = "text", @placeholder = "Enter Activity Unit" } })
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group mb-3">
                        <label class="col-form-label-sm-user text-black-50" for="txtLogitude">Activity  Wtg </label>
                        @Html.EditorFor(model => model.ActWtg, new { htmlAttributes = new { @class = "mb-3 form-control", @type = "text", @placeholder = "Enter Activity Wtg" } })
                    </div>
                </div>
                @* ----------------- *@
                @*<div class="col-md-12">
                    <span>@Html.CheckBoxFor(model => model.isStripChart) <b>Is Strip Chart</b> </span>
                </div>
                <div class="col-md-12">
                    <span>@Html.CheckBoxFor(model => model.IsRFI) <b>Is RFI</b> </span>
                </div>*@
                @* ----------------- *@
                @* ----------------- *@
                <div class="col-md-12 mt-2">
                    <div class="custom-control custom-checkbox">
                        @Html.CheckBoxFor(model => model.isStripChart, new { @class = "custom-control-input" })
                        <label class="custom-control-label" for="isStripChart">Is Strip Chart</label>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="custom-control custom-checkbox">
                        @Html.CheckBoxFor(model => model.IsRFI, new { @class = "custom-control-input" })
                        <label class="custom-control-label" for="IsRFI">Is RFI</label>
                    </div>
                </div>
                @* ----------------- *@

            </div>
        </div>

        <div class="card-footer">
            <div class="row">
                <div class="col-md-12 text-right">
                    @*@if (Model.ConsActivityId != 0)
                        {
                            <button type="submit" class="btn btn-xs btn-primary has-ripple  btnSubmit" value="Update"><i class="m-r-5 feather icon-check"></i>Update</button>
                        }
                        else
                        {*@
                    <button type="submit" class="btn btn-sm btn-theme pull-right  btnSubmit">Save</button>
                    @*}*@
                    @*<button type="button" id="btnReset" class="btn btn-sm btn-danger pull-right btn-xs" onclick="ClearViewAndGrid()"><i class="fa fa-refresh"></i> Reset</button>*@
                </div>
            </div>
        </div>
    }
</div>

<script>
    $(window).resize(function () {
        $('#card1').height($(window).height() - 258);
    });
    $(window).trigger('resize');
</script>