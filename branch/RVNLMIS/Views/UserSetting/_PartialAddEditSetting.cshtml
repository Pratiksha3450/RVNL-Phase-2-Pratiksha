
@model RVNLMIS.Models.SettingModel
@{
    Layout = null;
}

<div class="card" id="">
    <div class="card-header pb-4">
        <h5>Setting Information</h5>
    </div>
    @using (Ajax.BeginForm("AddSettingDetails", "Setting", null, new AjaxOptions { HttpMethod = "Post", OnSuccess = "OnSettingSuccess" }, new { @class = "form", @id = "frmSetting" }))
    {
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.SettingID)
        <div class="card-body pl-3 pr-3 pb-1 pt-2" id="card1">
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group mb-1">
                        <label class="col-form-label-sm-user text-black-50" for="txtSKey">Key @Html.ValidationMessageFor(model => model.SKey, "", new { @class = "text-danger" })</label>
                        @if (Model.SettingID != 0)
                        {
                            @Html.EditorFor(model => model.SKey, new { htmlAttributes = new { @class = "mb-3 form-control alphaonly", @type = "text", @placeholder = "Enter Key", @readonly = "readonly" } })

                        }
                        else
                        {
                            @Html.EditorFor(model => model.SKey, new { htmlAttributes = new { @class = "mb-3 form-control alphaonly", @type = "text", @placeholder = "Enter Key" } })

                        }


                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group mb-1">
                        <label class="col-form-label-sm-user text-black-50" for="txtDataType">Data Type @Html.ValidationMessageFor(model => model.DataType, "", new { @class = "text-danger" })</label>
                        @Html.DropDownListFor(model => model.DataType, ViewBag.EnumList as SelectList, "Select Data Type", new { @class = "mb-3 form-control form-control-sm" })

                    </div>
                </div>

                <div class="col-md-12">
                    <div class="form-group mb-1">
                        <label class="col-form-label-sm-user text-black-50" for="txtConsActivityName">Value @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })</label>
                        @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @class = "mb-3 form-control",onkeypress = "return Validate(event);", @type = "text", @placeholder = "Enter Value" } })
                    </div>
                </div>
            </div>
        </div>

        <div class="card-footer">
            <div class="row">
                <div class="col-md-12 text-right">
                    @*@if (Model.ConsActivityId != 0)
                        {
                            <button type="submit" class="btn btn-xs btn-primary has-ripple  btnSubmit" value="Update"><i class="m-r-5 feather icon-check"></i>Update</button>
                        }
                        else
                        {*@
                    <button type="submit" class="btn btn-sm btn-theme pull-right  btnSubmit">Save</button>
                    @*}*@
                    @*<button type="button" id="btnReset" class="btn btn-sm btn-danger pull-right btn-xs" onclick="ClearViewAndGrid()"><i class="fa fa-refresh"></i> Reset</button>*@
                </div>
            </div>
        </div>
    }
</div>

<script>
    $(window).resize(function () {
        $('#card1').height($(window).height() - 258);
    });
    $(window).trigger('resize');
</script>