

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace RVNLMIS.DAC
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class dbRVNLMISEntities : DbContext
{
    public dbRVNLMISEntities()
        : base("name=dbRVNLMISEntities")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<sysdiagram> sysdiagrams { get; set; }

    public virtual DbSet<tblActivityGroup> tblActivityGroups { get; set; }

    public virtual DbSet<tblAppMenu> tblAppMenus { get; set; }

    public virtual DbSet<tblApprAction> tblApprActions { get; set; }

    public virtual DbSet<tblAttachment> tblAttachments { get; set; }

    public virtual DbSet<tblAudit> tblAudits { get; set; }

    public virtual DbSet<tblCashFlow> tblCashFlows { get; set; }

    public virtual DbSet<tblConsActivity> tblConsActivities { get; set; }

    public virtual DbSet<tblConsEntAct> tblConsEntActs { get; set; }

    public virtual DbSet<tblConsEntActTran> tblConsEntActTrans { get; set; }

    public virtual DbSet<tblDataIssue> tblDataIssues { get; set; }

    public virtual DbSet<tblDataIssueStatu> tblDataIssueStatus { get; set; }

    public virtual DbSet<tblDataIssueStatusLog> tblDataIssueStatusLogs { get; set; }

    public virtual DbSet<tblDeletedRecordLog> tblDeletedRecordLogs { get; set; }

    public virtual DbSet<tblDemo> tblDemoes { get; set; }

    public virtual DbSet<tblDiscipline> tblDisciplines { get; set; }

    public virtual DbSet<tblDocument> tblDocuments { get; set; }

    public virtual DbSet<tblEnggApprGate> tblEnggApprGates { get; set; }

    public virtual DbSet<tblEnggDwgAttachment> tblEnggDwgAttachments { get; set; }

    public virtual DbSet<tblEnggDwgType> tblEnggDwgTypes { get; set; }

    public virtual DbSet<tblEnggEntDwgAppr> tblEnggEntDwgApprs { get; set; }

    public virtual DbSet<tblEntityType> tblEntityTypes { get; set; }

    public virtual DbSet<tblEvent> tblEvents { get; set; }

    public virtual DbSet<tblInvoice> tblInvoices { get; set; }

    public virtual DbSet<tblInvoicePayment> tblInvoicePayments { get; set; }

    public virtual DbSet<tblIssue> tblIssues { get; set; }

    public virtual DbSet<tblKPIPlanActual> tblKPIPlanActuals { get; set; }

    public virtual DbSet<tblMasterED> tblMasterEDs { get; set; }

    public virtual DbSet<tblMasterEntity> tblMasterEntities { get; set; }

    public virtual DbSet<tblMasterGroup> tblMasterGroups { get; set; }

    public virtual DbSet<tblMasterPIU> tblMasterPIUs { get; set; }

    public virtual DbSet<tblMasterProject> tblMasterProjects { get; set; }

    public virtual DbSet<tblMasterRailway> tblMasterRailways { get; set; }

    public virtual DbSet<tblMaterialDistribution> tblMaterialDistributions { get; set; }

    public virtual DbSet<tblMilestone> tblMilestones { get; set; }

    public virtual DbSet<tblMilestoneActual> tblMilestoneActuals { get; set; }

    public virtual DbSet<tblModule> tblModules { get; set; }

    public virtual DbSet<tblNotification> tblNotifications { get; set; }

    public virtual DbSet<tblNotificationMsg> tblNotificationMsgs { get; set; }

    public virtual DbSet<tblNotificationReadStatu> tblNotificationReadStatus { get; set; }

    public virtual DbSet<tblNotificationSetting> tblNotificationSettings { get; set; }

    public virtual DbSet<tblPackage> tblPackages { get; set; }

    public virtual DbSet<tblPackageSCurve> tblPackageSCurves { get; set; }

    public virtual DbSet<tblPackageUserContact> tblPackageUserContacts { get; set; }

    public virtual DbSet<tblPackageValue> tblPackageValues { get; set; }

    public virtual DbSet<tblPkgMatTransaction> tblPkgMatTransactions { get; set; }

    public virtual DbSet<tblPMCReportDetail> tblPMCReportDetails { get; set; }

    public virtual DbSet<tblPMCReportType> tblPMCReportTypes { get; set; }

    public virtual DbSet<tblPowerBIReport> tblPowerBIReports { get; set; }

    public virtual DbSet<tblProcMaterial> tblProcMaterials { get; set; }

    public virtual DbSet<tblProcPkgMaterial> tblProcPkgMaterials { get; set; }

    public virtual DbSet<tblProjectType> tblProjectTypes { get; set; }

    public virtual DbSet<tblReportPeriodM> tblReportPeriodMs { get; set; }

    public virtual DbSet<tblResidentEnggDetail> tblResidentEnggDetails { get; set; }

    public virtual DbSet<tblResource> tblResources { get; set; }

    public virtual DbSet<tblRole> tblRoles { get; set; }

    public virtual DbSet<tblRoleMenuAccess> tblRoleMenuAccesses { get; set; }

    public virtual DbSet<tblScActivityDetail> tblScActivityDetails { get; set; }

    public virtual DbSet<tblScChainageUpdate> tblScChainageUpdates { get; set; }

    public virtual DbSet<tblScCsDetail> tblScCsDetails { get; set; }

    public virtual DbSet<tblSchedule> tblSchedules { get; set; }

    public virtual DbSet<tblSCPkgChngLvl> tblSCPkgChngLvls { get; set; }

    public virtual DbSet<tblSCPkgCrossSection> tblSCPkgCrossSections { get; set; }

    public virtual DbSet<tblSection> tblSections { get; set; }

    public virtual DbSet<tblSetting> tblSettings { get; set; }

    public virtual DbSet<tblSystemResolutionDetail> tblSystemResolutionDetails { get; set; }

    public virtual DbSet<tblTargetSection> tblTargetSections { get; set; }

    public virtual DbSet<tblTicket> tblTickets { get; set; }

    public virtual DbSet<tblTimeslot> tblTimeslots { get; set; }

    public virtual DbSet<tblUserDataAccess> tblUserDataAccesses { get; set; }

    public virtual DbSet<tblUserLog> tblUserLogs { get; set; }

    public virtual DbSet<tblUserMaster> tblUserMasters { get; set; }

    public virtual DbSet<UserLogAudit> UserLogAudits { get; set; }

    public virtual DbSet<tblBOQMaster> tblBOQMasters { get; set; }

    public virtual DbSet<tblEnclosure> tblEnclosures { get; set; }

    public virtual DbSet<tblInspectionStatu> tblInspectionStatus { get; set; }

    public virtual DbSet<tblOrganisation> tblOrganisations { get; set; }

    public virtual DbSet<tblRFI> tblRFIs { get; set; }

    public virtual DbSet<tblRFIActivity> tblRFIActivities { get; set; }

    public virtual DbSet<tblRFIActivityBOQ> tblRFIActivityBOQs { get; set; }

    public virtual DbSet<tblRFIDesignation> tblRFIDesignations { get; set; }

    public virtual DbSet<tblRFIEnclosure> tblRFIEnclosures { get; set; }

    public virtual DbSet<tblRFIMain> tblRFIMains { get; set; }

    public virtual DbSet<tblRFINotification> tblRFINotifications { get; set; }

    public virtual DbSet<tblRFIPicture> tblRFIPictures { get; set; }

    public virtual DbSet<tblRFIRevision> tblRFIRevisions { get; set; }

    public virtual DbSet<tblRFITimelineActivity> tblRFITimelineActivities { get; set; }

    public virtual DbSet<tblRFIUser> tblRFIUsers { get; set; }

    public virtual DbSet<tblWorkGroup> tblWorkGroups { get; set; }

    public virtual DbSet<tblWorkSide> tblWorkSides { get; set; }

    public virtual DbSet<tblStripPkgAct> tblStripPkgActs { get; set; }

    public virtual DbSet<tblStripPkgProgress> tblStripPkgProgresses { get; set; }

    public virtual DbSet<tblPkgChngLvl> tblPkgChngLvls { get; set; }

    public virtual DbSet<C06ConsSummary> C06ConsSummary { get; set; }

    public virtual DbSet<C100ProcForm> C100ProcForm { get; set; }

    public virtual DbSet<ConstructionActivityView> ConstructionActivityViews { get; set; }

    public virtual DbSet<CrossKPIReport> CrossKPIReports { get; set; }

    public virtual DbSet<CrossSectionDetailsView> CrossSectionDetailsViews { get; set; }

    public virtual DbSet<EnggDwgAttachmentView> EnggDwgAttachmentViews { get; set; }

    public virtual DbSet<EntityDrawingApprView> EntityDrawingApprViews { get; set; }

    public virtual DbSet<EntityTypeWithActGroupView> EntityTypeWithActGroupViews { get; set; }

    public virtual DbSet<InvoicePaymentViewDetail> InvoicePaymentViewDetails { get; set; }

    public virtual DbSet<InvoiceSumView> InvoiceSumViews { get; set; }

    public virtual DbSet<InvoiceTotalSumView> InvoiceTotalSumViews { get; set; }

    public virtual DbSet<KPIView> KPIViews { get; set; }

    public virtual DbSet<MaterialWithDisplineView> MaterialWithDisplineViews { get; set; }

    public virtual DbSet<MilestoneSlippage> MilestoneSlippages { get; set; }

    public virtual DbSet<PackageDetailsView> PackageDetailsViews { get; set; }

    public virtual DbSet<PackageInvoice> PackageInvoices { get; set; }

    public virtual DbSet<PackageMaterialDetailsView> PackageMaterialDetailsViews { get; set; }

    public virtual DbSet<PackageUserDetailsView> PackageUserDetailsViews { get; set; }

    public virtual DbSet<PMCReportDetailsView> PMCReportDetailsViews { get; set; }

    public virtual DbSet<ProjectDetailsView> ProjectDetailsViews { get; set; }

    public virtual DbSet<SectionView> SectionViews { get; set; }

    public virtual DbSet<UserDetailsWithRole> UserDetailsWithRoles { get; set; }

    public virtual DbSet<ViewCashFlow> ViewCashFlows { get; set; }

    public virtual DbSet<ViewConsActSummaryForExcel> ViewConsActSummaryForExcels { get; set; }

    public virtual DbSet<ViewDemoCalendar> ViewDemoCalendars { get; set; }

    public virtual DbSet<ViewIssueRegister> ViewIssueRegisters { get; set; }

    public virtual DbSet<viewPackageStatusReport> viewPackageStatusReports { get; set; }

    public virtual DbSet<viewRfiActivity> viewRfiActivities { get; set; }

    public virtual DbSet<viewScChainageUpdateChart> viewScChainageUpdateCharts { get; set; }

    public virtual DbSet<ViewSCurve> ViewSCurves { get; set; }

    public virtual DbSet<viewStripChartEntity> viewStripChartEntities { get; set; }

    public virtual DbSet<viewStripChartSection> viewStripChartSections { get; set; }

    public virtual DbSet<viewStripProgress1> viewStripProgress1 { get; set; }

    public virtual DbSet<ViewTimeslot> ViewTimeslots { get; set; }

    public virtual DbSet<viewUserNotificationMsg> viewUserNotificationMsgs { get; set; }

    public virtual DbSet<viewUserNotify> viewUserNotifies { get; set; }

    public virtual DbSet<ViewRFIMainDetail> ViewRFIMainDetails { get; set; }

    public virtual DbSet<ViewRFIPDFDetail> ViewRFIPDFDetails { get; set; }

    public virtual DbSet<ViewRFIUsersDetail> ViewRFIUsersDetails { get; set; }

    public virtual DbSet<viewStripActivityTwo> viewStripActivityTwoes { get; set; }

    public virtual DbSet<viewStripProgress> viewStripProgresses { get; set; }

    public virtual DbSet<tblPushNotifyLog> tblPushNotifyLogs { get; set; }

    public virtual DbSet<tblUserPushNotifyId> tblUserPushNotifyIds { get; set; }

    public virtual DbSet<actAction> actActions { get; set; }

    public virtual DbSet<prjInvDueDate> prjInvDueDates { get; set; }

    public virtual DbSet<rskAction> rskActions { get; set; }

    public virtual DbSet<rskAssignee> rskAssignees { get; set; }

    public virtual DbSet<rskAttachment> rskAttachments { get; set; }

    public virtual DbSet<rskCategory> rskCategories { get; set; }

    public virtual DbSet<rskComment> rskComments { get; set; }

    public virtual DbSet<rskHeatMap> rskHeatMaps { get; set; }

    public virtual DbSet<rskRegister> rskRegisters { get; set; }

    public virtual DbSet<rskResponse> rskResponses { get; set; }

    public virtual DbSet<rskReview> rskReviews { get; set; }

    public virtual DbSet<rskStatu> rskStatus { get; set; }

    public virtual DbSet<rskValue> rskValues { get; set; }

    public virtual DbSet<tblAchievement> tblAchievements { get; set; }

    public virtual DbSet<tblAreaOfConcern> tblAreaOfConcerns { get; set; }

    public virtual DbSet<tblBaseline> tblBaselines { get; set; }

    public virtual DbSet<tblcashParamenter> tblcashParamenters { get; set; }

    public virtual DbSet<tblDroneImageVideo> tblDroneImageVideos { get; set; }

    public virtual DbSet<tblDroneSurveyDetail> tblDroneSurveyDetails { get; set; }

    public virtual DbSet<tblEOT> tblEOTs { get; set; }

    public virtual DbSet<tblHscParamenter> tblHscParamenters { get; set; }

    public virtual DbSet<tblkpiParamenter> tblkpiParamenters { get; set; }

    public virtual DbSet<tblLevel> tblLevels { get; set; }

    public virtual DbSet<tblphyParamenter> tblphyParamenters { get; set; }

    public virtual DbSet<tblpost> tblposts { get; set; }

    public virtual DbSet<tblPotreeFile> tblPotreeFiles { get; set; }

    public virtual DbSet<tblQaqcParamenter> tblQaqcParamenters { get; set; }

    public virtual DbSet<tblSampleUser> tblSampleUsers { get; set; }

    public virtual DbSet<tblRFIDummy> tblRFIDummies { get; set; }

    public virtual DbSet<ViewAchievement> ViewAchievements { get; set; }

    public virtual DbSet<viewAllRisk> viewAllRisks { get; set; }

    public virtual DbSet<ViewAreaOfConcern> ViewAreaOfConcerns { get; set; }

    public virtual DbSet<ViewEOT> ViewEOTs { get; set; }

    public virtual DbSet<InvoiceView> InvoiceViews { get; set; }

    public virtual DbSet<MilestoneView> MilestoneViews { get; set; }

    public virtual DbSet<CasParameterView> CasParameterViews { get; set; }

    public virtual DbSet<HscParamenterView> HscParamenterViews { get; set; }

    public virtual DbSet<KpiParameterView> KpiParameterViews { get; set; }

    public virtual DbSet<PhysicalProgressView> PhysicalProgressViews { get; set; }

    public virtual DbSet<prjBaselineView> prjBaselineViews { get; set; }

    public virtual DbSet<prjInvDueDateView> prjInvDueDateViews { get; set; }

    public virtual DbSet<QaqcParameterView> QaqcParameterViews { get; set; }


    public virtual int AddCompletedAmount(Nullable<int> projectId, Nullable<int> packageId, Nullable<decimal> completedValue, string invoiceNo)
    {

        var projectIdParameter = projectId.HasValue ?
            new ObjectParameter("ProjectId", projectId) :
            new ObjectParameter("ProjectId", typeof(int));


        var packageIdParameter = packageId.HasValue ?
            new ObjectParameter("PackageId", packageId) :
            new ObjectParameter("PackageId", typeof(int));


        var completedValueParameter = completedValue.HasValue ?
            new ObjectParameter("CompletedValue", completedValue) :
            new ObjectParameter("CompletedValue", typeof(decimal));


        var invoiceNoParameter = invoiceNo != null ?
            new ObjectParameter("InvoiceNo", invoiceNo) :
            new ObjectParameter("InvoiceNo", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddCompletedAmount", projectIdParameter, packageIdParameter, completedValueParameter, invoiceNoParameter);
    }


    public virtual int AssignPackageToUser(Nullable<int> userID, Nullable<int> packageID, Nullable<int> addedBy)
    {

        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        var packageIDParameter = packageID.HasValue ?
            new ObjectParameter("PackageID", packageID) :
            new ObjectParameter("PackageID", typeof(int));


        var addedByParameter = addedBy.HasValue ?
            new ObjectParameter("AddedBy", addedBy) :
            new ObjectParameter("AddedBy", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AssignPackageToUser", userIDParameter, packageIDParameter, addedByParameter);
    }


    public virtual int CREATEMODEL(string tableName, string cLASSNAME)
    {

        var tableNameParameter = tableName != null ?
            new ObjectParameter("TableName", tableName) :
            new ObjectParameter("TableName", typeof(string));


        var cLASSNAMEParameter = cLASSNAME != null ?
            new ObjectParameter("CLASSNAME", cLASSNAME) :
            new ObjectParameter("CLASSNAME", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CREATEMODEL", tableNameParameter, cLASSNAMEParameter);
    }


    public virtual ObjectResult<Get_DicsiplineWithCode_Result> Get_DicsiplineWithCode()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_DicsiplineWithCode_Result>("Get_DicsiplineWithCode");
    }


    public virtual ObjectResult<Get_EDNameWithCode_Result> Get_EDNameWithCode()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_EDNameWithCode_Result>("Get_EDNameWithCode");
    }


    public virtual ObjectResult<GetActivityDetailsByChainage_Result> GetActivityDetailsByChainage(Nullable<int> packageId, Nullable<int> crossSectionId)
    {

        var packageIdParameter = packageId.HasValue ?
            new ObjectParameter("PackageId", packageId) :
            new ObjectParameter("PackageId", typeof(int));


        var crossSectionIdParameter = crossSectionId.HasValue ?
            new ObjectParameter("CrossSectionId", crossSectionId) :
            new ObjectParameter("CrossSectionId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetActivityDetailsByChainage_Result>("GetActivityDetailsByChainage", packageIdParameter, crossSectionIdParameter);
    }


    public virtual ObjectResult<GetAllIssueDetailsById_Result> GetAllIssueDetailsById(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllIssueDetailsById_Result>("GetAllIssueDetailsById", idParameter);
    }


    public virtual ObjectResult<GetAllIssueListUserwise_Result> GetAllIssueListUserwise()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllIssueListUserwise_Result>("GetAllIssueListUserwise");
    }


    public virtual ObjectResult<GetAllMasterPIU_Result> GetAllMasterPIU()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllMasterPIU_Result>("GetAllMasterPIU");
    }


    public virtual ObjectResult<GetAllUserList_Result> GetAllUserList(Nullable<int> packageId)
    {

        var packageIdParameter = packageId.HasValue ?
            new ObjectParameter("PackageId", packageId) :
            new ObjectParameter("PackageId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllUserList_Result>("GetAllUserList", packageIdParameter);
    }


    public virtual ObjectResult<GetAttachementDetails_Result> GetAttachementDetails(Nullable<int> userID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
    {

        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(System.DateTime));


        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("ToDate", toDate) :
            new ObjectParameter("ToDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAttachementDetails_Result>("GetAttachementDetails", userIDParameter, fromDateParameter, toDateParameter);
    }


    public virtual ObjectResult<GetAttachementDetailsZip_Result> GetAttachementDetailsZip(Nullable<int> userID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
    {

        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(System.DateTime));


        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("ToDate", toDate) :
            new ObjectParameter("ToDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAttachementDetailsZip_Result>("GetAttachementDetailsZip", userIDParameter, fromDateParameter, toDateParameter);
    }


    public virtual ObjectResult<GetConsActivity_Result> GetConsActivity()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetConsActivity_Result>("GetConsActivity");
    }


    public virtual int GetDocumentDetails(string whereCondition)
    {

        var whereConditionParameter = whereCondition != null ?
            new ObjectParameter("WhereCondition", whereCondition) :
            new ObjectParameter("WhereCondition", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetDocumentDetails", whereConditionParameter);
    }


    public virtual ObjectResult<GetEntitiesBetweenChainage_Result> GetEntitiesBetweenChainage(Nullable<int> packageId, Nullable<int> startChainage, Nullable<int> endChainage)
    {

        var packageIdParameter = packageId.HasValue ?
            new ObjectParameter("PackageId", packageId) :
            new ObjectParameter("PackageId", typeof(int));


        var startChainageParameter = startChainage.HasValue ?
            new ObjectParameter("StartChainage", startChainage) :
            new ObjectParameter("StartChainage", typeof(int));


        var endChainageParameter = endChainage.HasValue ?
            new ObjectParameter("EndChainage", endChainage) :
            new ObjectParameter("EndChainage", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEntitiesBetweenChainage_Result>("GetEntitiesBetweenChainage", packageIdParameter, startChainageParameter, endChainageParameter);
    }


    public virtual ObjectResult<GetEntityActivityIds_Result> GetEntityActivityIds(Nullable<int> entityId, Nullable<int> activityGroupId)
    {

        var entityIdParameter = entityId.HasValue ?
            new ObjectParameter("EntityId", entityId) :
            new ObjectParameter("EntityId", typeof(int));


        var activityGroupIdParameter = activityGroupId.HasValue ?
            new ObjectParameter("ActivityGroupId", activityGroupId) :
            new ObjectParameter("ActivityGroupId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEntityActivityIds_Result>("GetEntityActivityIds", entityIdParameter, activityGroupIdParameter);
    }


    public virtual ObjectResult<GetEntityByEId_Result> GetEntityByEId(Nullable<int> eid)
    {

        var eidParameter = eid.HasValue ?
            new ObjectParameter("eid", eid) :
            new ObjectParameter("eid", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEntityByEId_Result>("GetEntityByEId", eidParameter);
    }


    public virtual ObjectResult<GetExistActivityListByEntity_Result> GetExistActivityListByEntity(Nullable<int> entityId, Nullable<int> activityGroupId)
    {

        var entityIdParameter = entityId.HasValue ?
            new ObjectParameter("EntityId", entityId) :
            new ObjectParameter("EntityId", typeof(int));


        var activityGroupIdParameter = activityGroupId.HasValue ?
            new ObjectParameter("ActivityGroupId", activityGroupId) :
            new ObjectParameter("ActivityGroupId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExistActivityListByEntity_Result>("GetExistActivityListByEntity", entityIdParameter, activityGroupIdParameter);
    }


    public virtual ObjectResult<GetExistingConstrEntityAct_Result> GetExistingConstrEntityAct(Nullable<int> entActId)
    {

        var entActIdParameter = entActId.HasValue ?
            new ObjectParameter("EntActId", entActId) :
            new ObjectParameter("EntActId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExistingConstrEntityAct_Result>("GetExistingConstrEntityAct", entActIdParameter);
    }


    public virtual ObjectResult<GetExistingProcForPckgMaterial_Result> GetExistingProcForPckgMaterial(Nullable<int> packMatId)
    {

        var packMatIdParameter = packMatId.HasValue ?
            new ObjectParameter("PackMatId", packMatId) :
            new ObjectParameter("PackMatId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExistingProcForPckgMaterial_Result>("GetExistingProcForPckgMaterial", packMatIdParameter);
    }


    public virtual ObjectResult<GetExistMaterialListByPackage_Result> GetExistMaterialListByPackage(Nullable<int> packageId)
    {

        var packageIdParameter = packageId.HasValue ?
            new ObjectParameter("PackageId", packageId) :
            new ObjectParameter("PackageId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExistMaterialListByPackage_Result>("GetExistMaterialListByPackage", packageIdParameter);
    }


    public virtual ObjectResult<string> GetInvoiceNo()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetInvoiceNo");
    }


    public virtual ObjectResult<GetMaterialList_Result> GetMaterialList()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMaterialList_Result>("GetMaterialList");
    }


    public virtual ObjectResult<GetMenusList_Result> GetMenusList()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMenusList_Result>("GetMenusList");
    }


    public virtual ObjectResult<GetNextMaterialeCode_Result> GetNextMaterialeCode(Nullable<int> dispId)
    {

        var dispIdParameter = dispId.HasValue ?
            new ObjectParameter("DispId", dispId) :
            new ObjectParameter("DispId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNextMaterialeCode_Result>("GetNextMaterialeCode", dispIdParameter);
    }


    public virtual ObjectResult<GetNextPackageCode_Result> GetNextPackageCode(string tableName)
    {

        var tableNameParameter = tableName != null ?
            new ObjectParameter("TableName", tableName) :
            new ObjectParameter("TableName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNextPackageCode_Result>("GetNextPackageCode", tableNameParameter);
    }


    public virtual ObjectResult<GetNotExistActivityListByEntity_Result> GetNotExistActivityListByEntity(Nullable<int> entityId, Nullable<int> activityGroupId)
    {

        var entityIdParameter = entityId.HasValue ?
            new ObjectParameter("EntityId", entityId) :
            new ObjectParameter("EntityId", typeof(int));


        var activityGroupIdParameter = activityGroupId.HasValue ?
            new ObjectParameter("ActivityGroupId", activityGroupId) :
            new ObjectParameter("ActivityGroupId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNotExistActivityListByEntity_Result>("GetNotExistActivityListByEntity", entityIdParameter, activityGroupIdParameter);
    }


    public virtual ObjectResult<GetNotExistMaterialListByPackage_Result> GetNotExistMaterialListByPackage(Nullable<int> packageId)
    {

        var packageIdParameter = packageId.HasValue ?
            new ObjectParameter("PackageId", packageId) :
            new ObjectParameter("PackageId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNotExistMaterialListByPackage_Result>("GetNotExistMaterialListByPackage", packageIdParameter);
    }


    public virtual ObjectResult<GetNullEntityFields_Result> GetNullEntityFields(Nullable<int> projectId)
    {

        var projectIdParameter = projectId.HasValue ?
            new ObjectParameter("ProjectId", projectId) :
            new ObjectParameter("ProjectId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNullEntityFields_Result>("GetNullEntityFields", projectIdParameter);
    }


    public virtual ObjectResult<GetNullPackageFields_Result> GetNullPackageFields(Nullable<int> projectId)
    {

        var projectIdParameter = projectId.HasValue ?
            new ObjectParameter("ProjectId", projectId) :
            new ObjectParameter("ProjectId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNullPackageFields_Result>("GetNullPackageFields", projectIdParameter);
    }


    public virtual ObjectResult<GetNullProjectFields_Result> GetNullProjectFields()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNullProjectFields_Result>("GetNullProjectFields");
    }


    public virtual ObjectResult<GetNullProjectFieldsString_Result> GetNullProjectFieldsString(Nullable<int> projectId)
    {

        var projectIdParameter = projectId.HasValue ?
            new ObjectParameter("ProjectId", projectId) :
            new ObjectParameter("ProjectId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNullProjectFieldsString_Result>("GetNullProjectFieldsString", projectIdParameter);
    }


    public virtual ObjectResult<GetNullSectionFields_Result> GetNullSectionFields(Nullable<int> projectId)
    {

        var projectIdParameter = projectId.HasValue ?
            new ObjectParameter("ProjectId", projectId) :
            new ObjectParameter("ProjectId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNullSectionFields_Result>("GetNullSectionFields", projectIdParameter);
    }


    public virtual ObjectResult<GetOGLFRLByChainage_Result> GetOGLFRLByChainage(Nullable<int> packageId, string chinage)
    {

        var packageIdParameter = packageId.HasValue ?
            new ObjectParameter("PackageId", packageId) :
            new ObjectParameter("PackageId", typeof(int));


        var chinageParameter = chinage != null ?
            new ObjectParameter("Chinage", chinage) :
            new ObjectParameter("Chinage", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOGLFRLByChainage_Result>("GetOGLFRLByChainage", packageIdParameter, chinageParameter);
    }


    public virtual ObjectResult<GetOGLFRLforPackage_Result> GetOGLFRLforPackage(Nullable<int> packageId, string startChainage, string endChainage)
    {

        var packageIdParameter = packageId.HasValue ?
            new ObjectParameter("PackageId", packageId) :
            new ObjectParameter("PackageId", typeof(int));


        var startChainageParameter = startChainage != null ?
            new ObjectParameter("StartChainage", startChainage) :
            new ObjectParameter("StartChainage", typeof(string));


        var endChainageParameter = endChainage != null ?
            new ObjectParameter("EndChainage", endChainage) :
            new ObjectParameter("EndChainage", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOGLFRLforPackage_Result>("GetOGLFRLforPackage", packageIdParameter, startChainageParameter, endChainageParameter);
    }


    public virtual ObjectResult<GetPackageListByProjectId_Result> GetPackageListByProjectId(Nullable<int> pid)
    {

        var pidParameter = pid.HasValue ?
            new ObjectParameter("Pid", pid) :
            new ObjectParameter("Pid", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPackageListByProjectId_Result>("GetPackageListByProjectId", pidParameter);
    }


    public virtual ObjectResult<string> GetPackageNameById(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetPackageNameById", idParameter);
    }


    public virtual ObjectResult<GetPackageUserLogs_Result> GetPackageUserLogs(Nullable<int> userID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
    {

        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(System.DateTime));


        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("ToDate", toDate) :
            new ObjectParameter("ToDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPackageUserLogs_Result>("GetPackageUserLogs", userIDParameter, fromDateParameter, toDateParameter);
    }


    public virtual int GetPackageUserLogsDetails(string whereCondition)
    {

        var whereConditionParameter = whereCondition != null ?
            new ObjectParameter("WhereCondition", whereCondition) :
            new ObjectParameter("WhereCondition", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPackageUserLogsDetails", whereConditionParameter);
    }


    public virtual ObjectResult<string> getPIUNameByPIUId(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getPIUNameByPIUId", idParameter);
    }


    public virtual ObjectResult<GetProcMaterial_Result> GetProcMaterial()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProcMaterial_Result>("GetProcMaterial");
    }


    public virtual ObjectResult<GetProcPkgMaterial_Result> GetProcPkgMaterial(Nullable<int> packageId, Nullable<int> dispId)
    {

        var packageIdParameter = packageId.HasValue ?
            new ObjectParameter("PackageId", packageId) :
            new ObjectParameter("PackageId", typeof(int));


        var dispIdParameter = dispId.HasValue ?
            new ObjectParameter("DispId", dispId) :
            new ObjectParameter("DispId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProcPkgMaterial_Result>("GetProcPkgMaterial", packageIdParameter, dispIdParameter);
    }


    public virtual ObjectResult<GetProcPkgMaterial_BK_Result> GetProcPkgMaterial_BK(Nullable<int> packageId)
    {

        var packageIdParameter = packageId.HasValue ?
            new ObjectParameter("PackageId", packageId) :
            new ObjectParameter("PackageId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProcPkgMaterial_BK_Result>("GetProcPkgMaterial_BK", packageIdParameter);
    }


    public virtual ObjectResult<GetProcurementIndexList_Result> GetProcurementIndexList(string whereCondition)
    {

        var whereConditionParameter = whereCondition != null ?
            new ObjectParameter("WhereCondition", whereCondition) :
            new ObjectParameter("WhereCondition", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProcurementIndexList_Result>("GetProcurementIndexList", whereConditionParameter);
    }


    public virtual ObjectResult<GetProjectByPIUId_Result> GetProjectByPIUId(Nullable<int> pid)
    {

        var pidParameter = pid.HasValue ?
            new ObjectParameter("Pid", pid) :
            new ObjectParameter("Pid", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProjectByPIUId_Result>("GetProjectByPIUId", pidParameter);
    }


    public virtual ObjectResult<string> GetProjectNameByPId(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetProjectNameByPId", idParameter);
    }


    public virtual ObjectResult<GetReportDataForPowerBIReport_Result> GetReportDataForPowerBIReport(string iD)
    {

        var iDParameter = iD != null ?
            new ObjectParameter("ID", iD) :
            new ObjectParameter("ID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetReportDataForPowerBIReport_Result>("GetReportDataForPowerBIReport", iDParameter);
    }


    public virtual ObjectResult<GetRoleAssignedPackageList_Result> GetRoleAssignedPackageList(Nullable<int> userId, Nullable<int> roleId)
    {

        var userIdParameter = userId.HasValue ?
            new ObjectParameter("UserId", userId) :
            new ObjectParameter("UserId", typeof(int));


        var roleIdParameter = roleId.HasValue ?
            new ObjectParameter("RoleId", roleId) :
            new ObjectParameter("RoleId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRoleAssignedPackageList_Result>("GetRoleAssignedPackageList", userIdParameter, roleIdParameter);
    }


    public virtual ObjectResult<GetRoleAssignedPackageListForMaterialPackage_Result> GetRoleAssignedPackageListForMaterialPackage(Nullable<int> userId, Nullable<int> roleId)
    {

        var userIdParameter = userId.HasValue ?
            new ObjectParameter("UserId", userId) :
            new ObjectParameter("UserId", typeof(int));


        var roleIdParameter = roleId.HasValue ?
            new ObjectParameter("RoleId", roleId) :
            new ObjectParameter("RoleId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRoleAssignedPackageListForMaterialPackage_Result>("GetRoleAssignedPackageListForMaterialPackage", userIdParameter, roleIdParameter);
    }


    public virtual ObjectResult<GetRoleAssignedProjectList_Result> GetRoleAssignedProjectList(Nullable<int> userId, Nullable<int> roleId)
    {

        var userIdParameter = userId.HasValue ?
            new ObjectParameter("UserId", userId) :
            new ObjectParameter("UserId", typeof(int));


        var roleIdParameter = roleId.HasValue ?
            new ObjectParameter("RoleId", roleId) :
            new ObjectParameter("RoleId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRoleAssignedProjectList_Result>("GetRoleAssignedProjectList", userIdParameter, roleIdParameter);
    }


    public virtual ObjectResult<GetSectionsBetweenChainage_Result> GetSectionsBetweenChainage(Nullable<int> packageId, Nullable<int> startChainage, Nullable<int> endChainage)
    {

        var packageIdParameter = packageId.HasValue ?
            new ObjectParameter("PackageId", packageId) :
            new ObjectParameter("PackageId", typeof(int));


        var startChainageParameter = startChainage.HasValue ?
            new ObjectParameter("StartChainage", startChainage) :
            new ObjectParameter("StartChainage", typeof(int));


        var endChainageParameter = endChainage.HasValue ?
            new ObjectParameter("EndChainage", endChainage) :
            new ObjectParameter("EndChainage", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSectionsBetweenChainage_Result>("GetSectionsBetweenChainage", packageIdParameter, startChainageParameter, endChainageParameter);
    }


    public virtual ObjectResult<GetTicketDetails_Result> GetTicketDetails(Nullable<int> userID)
    {

        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTicketDetails_Result>("GetTicketDetails", userIDParameter);
    }


    public virtual ObjectResult<GetUserDetailsById_Result> GetUserDetailsById(Nullable<int> custId, Nullable<int> packId)
    {

        var custIdParameter = custId.HasValue ?
            new ObjectParameter("custId", custId) :
            new ObjectParameter("custId", typeof(int));


        var packIdParameter = packId.HasValue ?
            new ObjectParameter("packId", packId) :
            new ObjectParameter("packId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserDetailsById_Result>("GetUserDetailsById", custIdParameter, packIdParameter);
    }


    public virtual ObjectResult<GetUserwiseAuditDetails_Result> GetUserwiseAuditDetails(string whereCondition)
    {

        var whereConditionParameter = whereCondition != null ?
            new ObjectParameter("WhereCondition", whereCondition) :
            new ObjectParameter("WhereCondition", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserwiseAuditDetails_Result>("GetUserwiseAuditDetails", whereConditionParameter);
    }


    public virtual int ImportScPkgChngLevel(Nullable<int> packageId, Nullable<int> csId, string chainage, string oGL, string fRL, ObjectParameter outputValue)
    {

        var packageIdParameter = packageId.HasValue ?
            new ObjectParameter("PackageId", packageId) :
            new ObjectParameter("PackageId", typeof(int));


        var csIdParameter = csId.HasValue ?
            new ObjectParameter("CsId", csId) :
            new ObjectParameter("CsId", typeof(int));


        var chainageParameter = chainage != null ?
            new ObjectParameter("Chainage", chainage) :
            new ObjectParameter("Chainage", typeof(string));


        var oGLParameter = oGL != null ?
            new ObjectParameter("OGL", oGL) :
            new ObjectParameter("OGL", typeof(string));


        var fRLParameter = fRL != null ?
            new ObjectParameter("FRL", fRL) :
            new ObjectParameter("FRL", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ImportScPkgChngLevel", packageIdParameter, csIdParameter, chainageParameter, oGLParameter, fRLParameter, outputValue);
    }


    public virtual int INSERT_EntityActivity(Nullable<int> entityId, string activityIDs, Nullable<int> activityGroupId)
    {

        var entityIdParameter = entityId.HasValue ?
            new ObjectParameter("EntityId", entityId) :
            new ObjectParameter("EntityId", typeof(int));


        var activityIDsParameter = activityIDs != null ?
            new ObjectParameter("ActivityIDs", activityIDs) :
            new ObjectParameter("ActivityIDs", typeof(string));


        var activityGroupIdParameter = activityGroupId.HasValue ?
            new ObjectParameter("ActivityGroupId", activityGroupId) :
            new ObjectParameter("ActivityGroupId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_EntityActivity", entityIdParameter, activityIDsParameter, activityGroupIdParameter);
    }


    public virtual ObjectResult<PackagelistByUserId_Result> PackagelistByUserId(Nullable<int> userId)
    {

        var userIdParameter = userId.HasValue ?
            new ObjectParameter("UserId", userId) :
            new ObjectParameter("UserId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PackagelistByUserId_Result>("PackagelistByUserId", userIdParameter);
    }


    public virtual ObjectResult<PackageStatusByCount_Result> PackageStatusByCount()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PackageStatusByCount_Result>("PackageStatusByCount");
    }


    public virtual ObjectResult<PackageUserLogin_Result> PackageUserLogin(string username, string password)
    {

        var usernameParameter = username != null ?
            new ObjectParameter("username", username) :
            new ObjectParameter("username", typeof(string));


        var passwordParameter = password != null ?
            new ObjectParameter("password", password) :
            new ObjectParameter("password", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PackageUserLogin_Result>("PackageUserLogin", usernameParameter, passwordParameter);
    }


    public virtual int RFIBOQInsert(Nullable<int> rFI_ID, string bOQIDs, Nullable<int> addedBy)
    {

        var rFI_IDParameter = rFI_ID.HasValue ?
            new ObjectParameter("RFI_ID", rFI_ID) :
            new ObjectParameter("RFI_ID", typeof(int));


        var bOQIDsParameter = bOQIDs != null ?
            new ObjectParameter("BOQIDs", bOQIDs) :
            new ObjectParameter("BOQIDs", typeof(string));


        var addedByParameter = addedBy.HasValue ?
            new ObjectParameter("AddedBy", addedBy) :
            new ObjectParameter("AddedBy", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RFIBOQInsert", rFI_IDParameter, bOQIDsParameter, addedByParameter);
    }


    public virtual int RoleMenuInsert(Nullable<int> roleID, string menuIDS, Nullable<int> createdBy)
    {

        var roleIDParameter = roleID.HasValue ?
            new ObjectParameter("RoleID", roleID) :
            new ObjectParameter("RoleID", typeof(int));


        var menuIDSParameter = menuIDS != null ?
            new ObjectParameter("MenuIDS", menuIDS) :
            new ObjectParameter("MenuIDS", typeof(string));


        var createdByParameter = createdBy.HasValue ?
            new ObjectParameter("CreatedBy", createdBy) :
            new ObjectParameter("CreatedBy", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RoleMenuInsert", roleIDParameter, menuIDSParameter, createdByParameter);
    }


    public virtual int SectionImport(Nullable<int> packageId, string sectionName, string sectionCode, Nullable<System.DateTime> sectionStart, Nullable<System.DateTime> sectionFinish, string startChainage, string endChainage, ObjectParameter outputValue)
    {

        var packageIdParameter = packageId.HasValue ?
            new ObjectParameter("PackageId", packageId) :
            new ObjectParameter("PackageId", typeof(int));


        var sectionNameParameter = sectionName != null ?
            new ObjectParameter("SectionName", sectionName) :
            new ObjectParameter("SectionName", typeof(string));


        var sectionCodeParameter = sectionCode != null ?
            new ObjectParameter("SectionCode", sectionCode) :
            new ObjectParameter("SectionCode", typeof(string));


        var sectionStartParameter = sectionStart.HasValue ?
            new ObjectParameter("SectionStart", sectionStart) :
            new ObjectParameter("SectionStart", typeof(System.DateTime));


        var sectionFinishParameter = sectionFinish.HasValue ?
            new ObjectParameter("SectionFinish", sectionFinish) :
            new ObjectParameter("SectionFinish", typeof(System.DateTime));


        var startChainageParameter = startChainage != null ?
            new ObjectParameter("StartChainage", startChainage) :
            new ObjectParameter("StartChainage", typeof(string));


        var endChainageParameter = endChainage != null ?
            new ObjectParameter("EndChainage", endChainage) :
            new ObjectParameter("EndChainage", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SectionImport", packageIdParameter, sectionNameParameter, sectionCodeParameter, sectionStartParameter, sectionFinishParameter, startChainageParameter, endChainageParameter, outputValue);
    }


    public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        var versionParameter = version.HasValue ?
            new ObjectParameter("version", version) :
            new ObjectParameter("version", typeof(int));


        var definitionParameter = definition != null ?
            new ObjectParameter("definition", definition) :
            new ObjectParameter("definition", typeof(byte[]));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
    }


    public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        var versionParameter = version.HasValue ?
            new ObjectParameter("version", version) :
            new ObjectParameter("version", typeof(int));


        var definitionParameter = definition != null ?
            new ObjectParameter("definition", definition) :
            new ObjectParameter("definition", typeof(byte[]));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
    }


    public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
    }


    public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
    }


    public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
    }


    public virtual int SP_INSERT_MaterialIDWithPackage(Nullable<int> packageID, string materialIDS, Nullable<int> dispId)
    {

        var packageIDParameter = packageID.HasValue ?
            new ObjectParameter("PackageID", packageID) :
            new ObjectParameter("PackageID", typeof(int));


        var materialIDSParameter = materialIDS != null ?
            new ObjectParameter("MaterialIDS", materialIDS) :
            new ObjectParameter("MaterialIDS", typeof(string));


        var dispIdParameter = dispId.HasValue ?
            new ObjectParameter("DispId", dispId) :
            new ObjectParameter("DispId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_MaterialIDWithPackage", packageIDParameter, materialIDSParameter, dispIdParameter);
    }


    public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        var new_diagramnameParameter = new_diagramname != null ?
            new ObjectParameter("new_diagramname", new_diagramname) :
            new ObjectParameter("new_diagramname", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
    }


    public virtual int SP_UnAssignAllMaterialsWithPackageId(Nullable<int> packageID, Nullable<int> dispId)
    {

        var packageIDParameter = packageID.HasValue ?
            new ObjectParameter("PackageID", packageID) :
            new ObjectParameter("PackageID", typeof(int));


        var dispIdParameter = dispId.HasValue ?
            new ObjectParameter("DispId", dispId) :
            new ObjectParameter("DispId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UnAssignAllMaterialsWithPackageId", packageIDParameter, dispIdParameter);
    }


    public virtual int sp_upgraddiagrams()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
    }


    public virtual ObjectResult<SpGetPackageByRoleId_Result> SpGetPackageByRoleId(Nullable<int> roleId, Nullable<int> rTId)
    {

        var roleIdParameter = roleId.HasValue ?
            new ObjectParameter("RoleId", roleId) :
            new ObjectParameter("RoleId", typeof(int));


        var rTIdParameter = rTId.HasValue ?
            new ObjectParameter("RTId", rTId) :
            new ObjectParameter("RTId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetPackageByRoleId_Result>("SpGetPackageByRoleId", roleIdParameter, rTIdParameter);
    }


    public virtual ObjectResult<SpGetPMCManagerDetails_Result> SpGetPMCManagerDetails()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetPMCManagerDetails_Result>("SpGetPMCManagerDetails");
    }


    public virtual ObjectResult<SpGetSubPMCManagerDetails_Result> SpGetSubPMCManagerDetails()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetSubPMCManagerDetails_Result>("SpGetSubPMCManagerDetails");
    }


    public virtual ObjectResult<SuperAdminLogin_Result> SuperAdminLogin(string username, string password)
    {

        var usernameParameter = username != null ?
            new ObjectParameter("username", username) :
            new ObjectParameter("username", typeof(string));


        var passwordParameter = password != null ?
            new ObjectParameter("password", password) :
            new ObjectParameter("password", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SuperAdminLogin_Result>("SuperAdminLogin", usernameParameter, passwordParameter);
    }


    public virtual int UnAssignAllActivitiesWithEntity(Nullable<int> entityId, Nullable<int> activityGroupId)
    {

        var entityIdParameter = entityId.HasValue ?
            new ObjectParameter("EntityId", entityId) :
            new ObjectParameter("EntityId", typeof(int));


        var activityGroupIdParameter = activityGroupId.HasValue ?
            new ObjectParameter("ActivityGroupId", activityGroupId) :
            new ObjectParameter("ActivityGroupId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UnAssignAllActivitiesWithEntity", entityIdParameter, activityGroupIdParameter);
    }


    public virtual int UpdateApprFinishDate(Nullable<int> currentApprGateId, Nullable<System.DateTime> nextApprStartDate, Nullable<int> currentEntityId, Nullable<int> currentDwgType)
    {

        var currentApprGateIdParameter = currentApprGateId.HasValue ?
            new ObjectParameter("CurrentApprGateId", currentApprGateId) :
            new ObjectParameter("CurrentApprGateId", typeof(int));


        var nextApprStartDateParameter = nextApprStartDate.HasValue ?
            new ObjectParameter("NextApprStartDate", nextApprStartDate) :
            new ObjectParameter("NextApprStartDate", typeof(System.DateTime));


        var currentEntityIdParameter = currentEntityId.HasValue ?
            new ObjectParameter("CurrentEntityId", currentEntityId) :
            new ObjectParameter("CurrentEntityId", typeof(int));


        var currentDwgTypeParameter = currentDwgType.HasValue ?
            new ObjectParameter("CurrentDwgType", currentDwgType) :
            new ObjectParameter("CurrentDwgType", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateApprFinishDate", currentApprGateIdParameter, nextApprStartDateParameter, currentEntityIdParameter, currentDwgTypeParameter);
    }


    public virtual int UpdatePackageLength(Nullable<int> packageId)
    {

        var packageIdParameter = packageId.HasValue ?
            new ObjectParameter("PackageId", packageId) :
            new ObjectParameter("PackageId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePackageLength", packageIdParameter);
    }


    public virtual ObjectResult<GenerateRFICode_Result> GenerateRFICode(Nullable<int> workGrId)
    {

        var workGrIdParameter = workGrId.HasValue ?
            new ObjectParameter("WorkGrId", workGrId) :
            new ObjectParameter("WorkGrId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GenerateRFICode_Result>("GenerateRFICode", workGrIdParameter);
    }


    public virtual ObjectResult<RFICountSummary_Result> RFICountSummary(Nullable<int> selectedUserID, Nullable<int> viewerId, Nullable<int> designationId, string org)
    {

        var selectedUserIDParameter = selectedUserID.HasValue ?
            new ObjectParameter("SelectedUserID", selectedUserID) :
            new ObjectParameter("SelectedUserID", typeof(int));


        var viewerIdParameter = viewerId.HasValue ?
            new ObjectParameter("ViewerId", viewerId) :
            new ObjectParameter("ViewerId", typeof(int));


        var designationIdParameter = designationId.HasValue ?
            new ObjectParameter("DesignationId", designationId) :
            new ObjectParameter("DesignationId", typeof(int));


        var orgParameter = org != null ?
            new ObjectParameter("Org", org) :
            new ObjectParameter("Org", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RFICountSummary_Result>("RFICountSummary", selectedUserIDParameter, viewerIdParameter, designationIdParameter, orgParameter);
    }


    public virtual ObjectResult<stripGetActivitesInSquence_Result> stripGetActivitesInSquence(Nullable<int> packageId)
    {

        var packageIdParameter = packageId.HasValue ?
            new ObjectParameter("PackageId", packageId) :
            new ObjectParameter("PackageId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stripGetActivitesInSquence_Result>("stripGetActivitesInSquence", packageIdParameter);
    }


    public virtual ObjectResult<stripGetProgress_Result> stripGetProgress(Nullable<int> packageId, Nullable<double> startChainage, Nullable<double> endChainage)
    {

        var packageIdParameter = packageId.HasValue ?
            new ObjectParameter("PackageId", packageId) :
            new ObjectParameter("PackageId", typeof(int));


        var startChainageParameter = startChainage.HasValue ?
            new ObjectParameter("StartChainage", startChainage) :
            new ObjectParameter("StartChainage", typeof(double));


        var endChainageParameter = endChainage.HasValue ?
            new ObjectParameter("EndChainage", endChainage) :
            new ObjectParameter("EndChainage", typeof(double));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stripGetProgress_Result>("stripGetProgress", packageIdParameter, startChainageParameter, endChainageParameter);
    }


    public virtual ObjectResult<GetDemoDetails_Result> GetDemoDetails(Nullable<int> month)
    {

        var monthParameter = month.HasValue ?
            new ObjectParameter("Month", month) :
            new ObjectParameter("Month", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDemoDetails_Result>("GetDemoDetails", monthParameter);
    }


    public virtual int RFIBulkImport(Nullable<int> packageId, Nullable<int> workgroup, string rFICode, Nullable<int> layorNO, string activity, string locationType, Nullable<double> startChainage, Nullable<double> endChainage, string entity, string otherWorkLocation, string workside, string workDescription, ObjectParameter outputValue)
    {

        var packageIdParameter = packageId.HasValue ?
            new ObjectParameter("PackageId", packageId) :
            new ObjectParameter("PackageId", typeof(int));


        var workgroupParameter = workgroup.HasValue ?
            new ObjectParameter("Workgroup", workgroup) :
            new ObjectParameter("Workgroup", typeof(int));


        var rFICodeParameter = rFICode != null ?
            new ObjectParameter("RFICode", rFICode) :
            new ObjectParameter("RFICode", typeof(string));


        var layorNOParameter = layorNO.HasValue ?
            new ObjectParameter("LayorNO", layorNO) :
            new ObjectParameter("LayorNO", typeof(int));


        var activityParameter = activity != null ?
            new ObjectParameter("Activity", activity) :
            new ObjectParameter("Activity", typeof(string));


        var locationTypeParameter = locationType != null ?
            new ObjectParameter("LocationType", locationType) :
            new ObjectParameter("LocationType", typeof(string));


        var startChainageParameter = startChainage.HasValue ?
            new ObjectParameter("StartChainage", startChainage) :
            new ObjectParameter("StartChainage", typeof(double));


        var endChainageParameter = endChainage.HasValue ?
            new ObjectParameter("EndChainage", endChainage) :
            new ObjectParameter("EndChainage", typeof(double));


        var entityParameter = entity != null ?
            new ObjectParameter("Entity", entity) :
            new ObjectParameter("Entity", typeof(string));


        var otherWorkLocationParameter = otherWorkLocation != null ?
            new ObjectParameter("OtherWorkLocation", otherWorkLocation) :
            new ObjectParameter("OtherWorkLocation", typeof(string));


        var worksideParameter = workside != null ?
            new ObjectParameter("Workside", workside) :
            new ObjectParameter("Workside", typeof(string));


        var workDescriptionParameter = workDescription != null ?
            new ObjectParameter("WorkDescription", workDescription) :
            new ObjectParameter("WorkDescription", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RFIBulkImport", packageIdParameter, workgroupParameter, rFICodeParameter, layorNOParameter, activityParameter, locationTypeParameter, startChainageParameter, endChainageParameter, entityParameter, otherWorkLocationParameter, worksideParameter, workDescriptionParameter, outputValue);
    }


    public virtual int RFIBulkImportAhemedabadProject(Nullable<int> packageId, Nullable<double> startChainage, Nullable<double> endChainage, string otherWorkLocation, string workDescription, string rFINo, Nullable<System.DateTime> rFIOpenDate, Nullable<System.DateTime> rFICloseDate, Nullable<System.DateTime> dateOfInspection, Nullable<System.DateTime> inspectionOn, string bOQItemNo, string resultOfInspection, string rFIStatus, ObjectParameter outputValue)
    {

        var packageIdParameter = packageId.HasValue ?
            new ObjectParameter("PackageId", packageId) :
            new ObjectParameter("PackageId", typeof(int));


        var startChainageParameter = startChainage.HasValue ?
            new ObjectParameter("StartChainage", startChainage) :
            new ObjectParameter("StartChainage", typeof(double));


        var endChainageParameter = endChainage.HasValue ?
            new ObjectParameter("EndChainage", endChainage) :
            new ObjectParameter("EndChainage", typeof(double));


        var otherWorkLocationParameter = otherWorkLocation != null ?
            new ObjectParameter("OtherWorkLocation", otherWorkLocation) :
            new ObjectParameter("OtherWorkLocation", typeof(string));


        var workDescriptionParameter = workDescription != null ?
            new ObjectParameter("WorkDescription", workDescription) :
            new ObjectParameter("WorkDescription", typeof(string));


        var rFINoParameter = rFINo != null ?
            new ObjectParameter("RFINo", rFINo) :
            new ObjectParameter("RFINo", typeof(string));


        var rFIOpenDateParameter = rFIOpenDate.HasValue ?
            new ObjectParameter("RFIOpenDate", rFIOpenDate) :
            new ObjectParameter("RFIOpenDate", typeof(System.DateTime));


        var rFICloseDateParameter = rFICloseDate.HasValue ?
            new ObjectParameter("RFICloseDate", rFICloseDate) :
            new ObjectParameter("RFICloseDate", typeof(System.DateTime));


        var dateOfInspectionParameter = dateOfInspection.HasValue ?
            new ObjectParameter("dateOfInspection", dateOfInspection) :
            new ObjectParameter("dateOfInspection", typeof(System.DateTime));


        var inspectionOnParameter = inspectionOn.HasValue ?
            new ObjectParameter("InspectionOn", inspectionOn) :
            new ObjectParameter("InspectionOn", typeof(System.DateTime));


        var bOQItemNoParameter = bOQItemNo != null ?
            new ObjectParameter("BOQItemNo", bOQItemNo) :
            new ObjectParameter("BOQItemNo", typeof(string));


        var resultOfInspectionParameter = resultOfInspection != null ?
            new ObjectParameter("ResultOfInspection", resultOfInspection) :
            new ObjectParameter("ResultOfInspection", typeof(string));


        var rFIStatusParameter = rFIStatus != null ?
            new ObjectParameter("RFIStatus", rFIStatus) :
            new ObjectParameter("RFIStatus", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RFIBulkImportAhemedabadProject", packageIdParameter, startChainageParameter, endChainageParameter, otherWorkLocationParameter, workDescriptionParameter, rFINoParameter, rFIOpenDateParameter, rFICloseDateParameter, dateOfInspectionParameter, inspectionOnParameter, bOQItemNoParameter, resultOfInspectionParameter, rFIStatusParameter, outputValue);
    }

}

}

