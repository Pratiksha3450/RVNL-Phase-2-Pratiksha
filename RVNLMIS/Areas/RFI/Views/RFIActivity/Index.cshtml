
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/RFI/Views/Shared/_RFIFilteredLayout.cshtml";
    // Layout = "~/Views/Shared/_Layout.cshtml";
}


<style>
    .k-editor, .k-grid, .k-menu, .k-scheduler {
        border-radius: 0px !important;
        font-size: smaller !important;
    }

    .divMag {
        margin-left: 64px !important;
    }

    #Card1 {
        overflow: auto;
        overflow-x: hidden;
    }
</style>
<div class="modal fade" id="modalDelete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="myModalLabel">Confirm Delete</h5>
                <button id="btnCloseDelete" type="button" class="close btn-xs " data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

            </div>
            <div class="modal-body" id="noscroll">
                <input type="hidden" id="hdnId">
                <p class="success-message">Are you sure you wish to delete ?</p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-sm btn-success delete-confirm" id="btnDeleteConfirm"><i class="fa fa-check mr-2"></i>Ok</button>
                <button class="btn btn-danger btn-sm" data-dismiss="modal"><i class="fa fa-times mr-2"></i>Cancel</button>
            </div>
        </div>
    </div>
</div>
<div class="content_wrapper">
    <div class="">
        @*<div class="page-header">

            </div>*@
        <!-- [ Main Content ] start -->
        <div class="row">

            <div class="col-sm-3 pr-1">
                <div id="UpdateChartform">
                    @Html.Partial("_PartialAddUpdateAct", new RVNLMIS.Areas.RFI.Models.RFIActivityModel())
                </div>
            </div>

            <!-- [ horizontal-layout ] start -->
            <div class="col-sm-9 pl-1">
                <div class="card">
                    <div class="card-header">

                        <div class="row">
                            <div class="col-sm-12 col-md-6">
                                <h5>RFI Activity Details</h5>
                            </div>
                            <div class="col-sm-12 col-md-6">
                                <div class="input-group input-group-sm">
                                    <input type="search" id="searching" class="form-control" placeholder="Search by keywords " aria-label="Small" aria-describedby="inputGroup-sizing-sm" />
                                </div>

                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="" id="KendoHeight">

                            @(Html.Kendo().Grid<RVNLMIS.Areas.RFI.Models.RFIActivityModel>()
                                        .Name("UsersGrid")
                                        .Columns(columns =>
                                        {

                                            columns.Bound(c => c.WorkGrName).HtmlAttributes(new { style = "text-align:left", title = "#= WorkGrName #" }).Title("Work Group")
                                                                                    .HeaderHtmlAttributes(new { style = "text-align:left" });
                                            columns.Bound(c => c.ActityName).HtmlAttributes(new { style = "text-align:left", title = "#= ActityName #" }).Title("Cons Activity")
                                                                                    .HeaderHtmlAttributes(new { style = "text-align:left" });
                                            columns.Bound(c => c.RFIActName).HtmlAttributes(new { style = "text-align:left", title = "#= RFIActName #" }).Title("RFI Activity")
                                                                                    .HeaderHtmlAttributes(new { style = "text-align:left" });
                                            columns.Bound(c => c.Unit).HtmlAttributes(new { style = "text-align:left", title = "#= Unit #" })
                                                                                    .HeaderHtmlAttributes(new { style = "text-align:left" });

                                            columns.Template(@<text></text>).Width("12%").Title("Action").ClientTemplate(""
                                        + "<button  data-url='/RFI/RFIActivity/EditData/#=RFIActId#' class='EditData btn btn-sm btn-warning has-ripple'><i class='feather icon-edit'></i></button>"
                                        + "&nbsp;" +
                                        "<button type='button' id='btnDeleteUser' class='btn btn-sm btn-danger has-ripple DeleteUser' data-key='#=RFIActId#' Title='Delete'><i class='feather icon-trash'></i></button>").HeaderHtmlAttributes(new { style = "text-align:left" });


                        }).Scrollable(scr => scr.Height(400))
                        .ToolBar(tools => { tools.Excel(); tools.Pdf(); })
                        .Pageable()
                        .Sortable()
                        .Pageable(pageable => pageable
                        .Refresh(true)
                        .PageSizes(true)
                        .ButtonCount(5)
                        .PageSizes(new List<object>
                        { 50, 80, 100, "all" }).Refresh(true))
                        .PersistSelection(true)
                        .DataSource(dataSource => dataSource
                        .Ajax()
                        .Group(g => g.Add(c => c.WorkGrName))
                        .Model(model => model.Id(u => u.RFIActId))
                        .Read(read => read.Action("GetRFIActivityGrid", "RFIActivity").Data("GetPackageAndType"))
                        .PageSize(13)).Groupable().Resizable(resize => resize.Columns(true))
                        .Events(events => events.DataBound("dataBound"))

                            )
                        </div>

                    </div>

                </div>
            </div>
            <!-- [ horizontal-layout ] end -->
        </div>



    </div>
</div>

<script>
    $(window).resize(function () {
        $('#KendoHeight').height($(window).height() - 195);
        $('#UsersGrid').height($(window).height() - 198);
        //$('#CardHeight').height($(window).height() - 170);
        //document.getElementById("CardHeight").style.height = "585px";
    });
    $(window).trigger('resize');
    function GetPackageAndType() {
        return { grpId: $("#WorkGroupId").data("kendoDropDownList").value(), actId: $("#ConsActId").val() };
    }
    function dataBound() {
        $(".EditData").on("click", function (e) {
            e.preventDefault();
            var url = $(this).data("url");
            console.log(url);
            $.get(url, function (data) {
                console.log(data);
                $('#UpdateChartform').html(data);
                setTimeout(function () {
                }, 500);
            });
        });

        $(".DeleteUser").on("click", function () {
            console.info('DeleteUser called');
            var Id = $(this).data("key");
            $("#hdnId").val(Id);
            $("#modalDelete").modal({ backdrop: 'static', keyboard: false, position: 'center' });
        });
    }


    $("#btnDeleteConfirm").on("click", function () {
        var id = $("#hdnId").val();

        $.ajax({
            url: '/RFI/RFIActivity/Delete/' + id,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function () {
                //Refresh Kendo Grid
                $("#modalDelete").modal('hide');
                // ShowSuccessMessage('Deleted Successfully');
                $.notify('Deleted Successfully', { align: "right", verticalAlign: "top", type: "success", background: "#ff0000", color: "#fff" });
                $('#UsersGrid').data('kendoGrid').dataSource.read();
                $('#UsersGrid').data('kendoGrid').refresh();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                //ShowErrorMessage('Error deleting Project!');
            }
        });
    });


    function RefreshGrid() {
        //$('#PackageId').data("kendoDropDownList").select(0);
        // $('#WorkGroupId').data("kendoDropDownList").select(0);
        $('#ConsActId').data("kendoDropDownList").select(0);
        $("#RFIActName").val("");
        $("#Unit").val("");
        $("#RFIActId").val("0");
        $('#UsersGrid').data('kendoGrid').dataSource.read();
        $('#UsersGrid').data('kendoGrid').refresh();
    }

    function UpdateSuccess(data) {

        if (data == "2") {
            $.notify('Data Updated Successfully!', { align: "right", verticalAlign: "top", type: "success", background: "#20D67B", color: "#fff" });
            RefreshGrid();


        } else if (data == "1") {
            $.notify('Data Added Successfully!', { align: "right", verticalAlign: "top", type: "success", background: "#20D67B", color: "#fff" });
            RefreshGrid();


        } else if (data == "3") {
            $.notify('Activity already exists!', { align: "right", verticalAlign: "top", type: "danger", background: "#ff0000", color: "#fff" });

        }
        else if (data == "4") {
            $.notify('Please select Work Group!', { align: "right", verticalAlign: "top", type: "danger", background: "#ff0000", color: "#fff" });

        } else if (data == "5") {
            $.notify('Please select Cons Activity!', { align: "right", verticalAlign: "top", type: "danger", background: "#ff0000", color: "#fff" });

        }
        else {
            $('#UpdateChartform').html(data);
        }
    }

    $(document).ready(function () {
        DocumentReadyFunctions();
    });

    function DocumentReadyFunctions() {

        $("#WorkGroupId").change(function () {
            $('#UsersGrid').data('kendoGrid').dataSource.read();
            $('#UsersGrid').data('kendoGrid').refresh();
        });

        $("#ConsActId").change(function () {
            $('#UsersGrid').data('kendoGrid').dataSource.read();
            $('#UsersGrid').data('kendoGrid').refresh();
        });
    }

    $("#searching").keyup(function () {
        var selecteditem = $('#searching').val();
        var kgrid = $("#UsersGrid").data("kendoGrid");
        selecteditem = selecteditem.toUpperCase();
        var selectedArray = selecteditem.split(" ");
        if (selecteditem) {
            //kgrid.dataSource.filter({ field: "UserName", operator: "eq", value: selecteditem });
            var orfilter = { logic: "or", filters: [] };
            var andfilter = { logic: "and", filters: [] };
            $.each(selectedArray, function (i, v) {
                if (v.trim() == "") {
                }
                else {
                    $.each(selectedArray, function (i, v1) {
                        if (v1.trim() == "") {
                        }
                        else {
                            orfilter.filters.push({ field: "WorkGrName", operator: "contains", value: v1 },
                                { field: "ActityName", operator: "contains", value: v1 },
                                { field: "Unit", operator: "contains", value: v1 },
                                { field: "RFIActName", operator: "contains", value: v1 }
                            );
                            andfilter.filters.push(orfilter);
                            orfilter = { logic: "or", filters: [] };
                        }

                    });
                }
            });
            kgrid.dataSource.filter(andfilter);
        }
        else {
            kgrid.dataSource.filter({});
        }

    });

</script>




