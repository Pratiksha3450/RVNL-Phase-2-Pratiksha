using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using iTextSharp.text;
using iTextSharp.text.pdf;
using RVNLMIS.Areas.RFI.Models;
using RVNLMIS.Common;

namespace RVNLMIS.Areas.RFI.Common
{
    public class RFIPdfHelper
    {
        #region ---- font collection ----        
        public Font times_Title = new Font(BaseFont.CreateFont(BaseFont.COURIER, BaseFont.CP1252, false), 10, Font.UNDERLINE | Font.BOLD, BaseColor.BLACK);
        public Font times_7 = new Font(BaseFont.CreateFont(BaseFont.COURIER, BaseFont.CP1252, false), 7, Font.NORMAL, BaseColor.BLACK);
        public Font calibri_7b = FontFactory.GetFont("Calibri", 7, Font.BOLD);
        public Font calibri_7 = FontFactory.GetFont("Calibri", 7, Font.NORMAL);
        public Font calibri_7e = FontFactory.GetFont("Calibri", 7, Font.NORMAL);
        public Font calibri_7White = FontFactory.GetFont("Arial", 8, Font.BOLD, BaseColor.WHITE);
        public Font calibri_7_italic = FontFactory.GetFont("Arial", 7, Font.ITALIC);
        public Font calibri_9Bold = FontFactory.GetFont("Arial", 10, Font.BOLD);
        public Font calibri_9Bold_sub = FontFactory.GetFont("Arial", 7, Font.BOLD);
        public Font calibri_9Bold_sub1 = FontFactory.GetFont("Arial", 7, Font.BOLD);
        public Font calibriBold = FontFactory.GetFont("Calibri", 10, Font.BOLD);
        public Font calibriTitle = FontFactory.GetFont("Calibri", 10, Font.UNDERLINE | Font.BOLD);
        public Font arialTitle = FontFactory.GetFont("Arial", 3, Font.BOLD);
        public Font arialTitle1 = FontFactory.GetFont("Arial", 7, Font.BOLD);
        #endregion

        #region ---- Single ----
        internal PdfPCell GetSinglePageCell(RFIDocumentModel objModel, List<AttachDetails> objEnclosure, List<CommentList> objCommList)
        {

            string _RvnlLogo = "";

            PdfPTable tblHeader = new PdfPTable(1);

            #region ---- row 1, 2, 3 -----
            PdfPTable tbl1 = new PdfPTable(2);
            tbl1.HorizontalAlignment = 0;
            tbl1.WidthPercentage = 100;
            tbl1.SetWidths(new float[] { 2, 8 });

            #region ---- img ---
            //string logoPath = System.Web.HttpContext.Current.Server.MapPath("~/Content/images/RVNLLogoNew.jpg");
            //string path = Functions.GetBase64StringForImage(logoPath);
            byte[] imageBytes = Convert.FromBase64String(_RvnlLogo);
            Image logo = Image.GetInstance(imageBytes);
            logo.ScaleToFit(100, 150);
            PdfPCell pdfCelllogo = new PdfPCell(logo);
            pdfCelllogo.Border = CellFullBorder();
            pdfCelllogo.Padding = 2f;
            pdfCelllogo.HorizontalAlignment = Element.ALIGN_CENTER;
            pdfCelllogo.VerticalAlignment = Element.ALIGN_MIDDLE;
            pdfCelllogo.Rowspan = 2;
            pdfCelllogo.BorderWidthBottom = 0f;
            tbl1.AddCell(pdfCelllogo);
            #endregion

            PdfPCell cellTitle = new PdfPCell(new Phrase("REQUEST FOR INSPECTION", calibriBold));
            cellTitle.PaddingBottom = 5f;
            cellTitle.Border = CellFullBorder();
            cellTitle.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl1.AddCell(cellTitle);

            #region ---- Project name table ----
            PdfPTable tblProj = new PdfPTable(2);
            tblProj.HorizontalAlignment = 0;
            tblProj.WidthPercentage = 100;
            tblProj.SetWidths(new float[] { 1, 9 });

            PdfPCell cp1 = new PdfPCell(new Phrase("PROJECT :", calibri_7b));
            cp1.Border = CellNoBorder();
            cp1.HorizontalAlignment = Element.ALIGN_LEFT;
            tblProj.AddCell(cp1);

            PdfPCell cp2 = new PdfPCell(new Phrase("" + objModel.ProjectName.Trim(), calibri_7));
            cp2.Border = CellNoBorder();
            cp2.HorizontalAlignment = Element.ALIGN_LEFT;
            tblProj.AddCell(cp2);

            PdfPCell ProjectCell = new PdfPCell(tblProj);
            ProjectCell.PaddingBottom = 5f;
            ProjectCell.Border = CellFullBorder();
            ProjectCell.HorizontalAlignment = Element.ALIGN_LEFT;
            tbl1.AddCell(ProjectCell);
            #endregion ---- Project name table ----

            PdfPCell clientCell = new PdfPCell(new Phrase("Client", calibri_7b));
            clientCell.Border = CellFullBorder();
            clientCell.Padding = 2;
            clientCell.HorizontalAlignment = Element.ALIGN_CENTER;
            clientCell.VerticalAlignment = Element.ALIGN_MIDDLE;
            tbl1.AddCell(clientCell);

            PdfPTable tbl1Right = new PdfPTable(3);
            tbl1Right.HorizontalAlignment = 0;
            tbl1Right.WidthPercentage = 100;
            tbl1Right.SetWidths(new float[] { 4, 2, 4 });

            PdfPCell rCell1 = new PdfPCell(new Phrase(": " + objModel.ClientName, calibri_7b));
            rCell1.Border = CellFullBorder();
            rCell1.Rowspan = 2;
            rCell1.HorizontalAlignment = Element.ALIGN_LEFT;
            rCell1.VerticalAlignment = Element.ALIGN_MIDDLE;
            tbl1Right.AddCell(rCell1);

            PdfPCell rCell2 = new PdfPCell(new Phrase("Contractor", calibri_7b));
            rCell2.Border = CellFullBorder();
            rCell2.PaddingBottom = 3;
            rCell2.HorizontalAlignment = Element.ALIGN_LEFT;
            tbl1Right.AddCell(rCell2);

            PdfPCell rCell3 = new PdfPCell(new Phrase(": " + objModel.Contractor, calibri_7b));
            rCell3.Border = CellFullBorder();
            rCell2.PaddingBottom = 3;
            rCell3.HorizontalAlignment = Element.ALIGN_LEFT;
            tbl1Right.AddCell(rCell3);

            PdfPCell rCell4 = new PdfPCell(new Phrase("PMC", calibri_7b));
            rCell4.Border = CellFullBorder();
            rCell4.PaddingBottom = 3;
            rCell4.HorizontalAlignment = Element.ALIGN_LEFT;
            tbl1Right.AddCell(rCell4);

            PdfPCell rCell5 = new PdfPCell(new Phrase(": " + objModel.PMC, calibri_7b));
            rCell5.Border = CellFullBorder();
            rCell5.PaddingBottom = 3;
            rCell5.HorizontalAlignment = Element.ALIGN_LEFT;
            tbl1Right.AddCell(rCell5);

            tbl1.AddCell(new PdfPCell(tbl1Right));
            tblHeader.AddCell(new PdfPCell(tbl1));

            PdfPCell hc2 = new PdfPCell(new Phrase("Previous RFI No (if any) : " + objModel.PrevRFICode, calibri_7b));
            hc2.Border = CellFullBorder();
            hc2.PaddingBottom = 3;
            hc2.HorizontalAlignment = Element.ALIGN_LEFT;
            tblHeader.AddCell(hc2);
            #endregion ---- row 1, 2, 3 -----

            #region ---- row 4, 5 ----
            PdfPTable tbl8Cell = new PdfPTable(8);
            tbl8Cell.HorizontalAlignment = 0;
            tbl8Cell.WidthPercentage = 100;
            tbl8Cell.SetWidths(new float[] { 1, 2, 2, 1.5f, 0.5f, 1, 1, 1 });

            PdfPCell celltbl81 = new PdfPCell(new Phrase("RFI No: ", calibri_7b));
            celltbl81.PaddingBottom = 3f;
            celltbl81.Border = Rectangle.LEFT_BORDER | Rectangle.TOP_BORDER | Rectangle.BOTTOM_BORDER;
            celltbl81.HorizontalAlignment = Element.ALIGN_LEFT;
            celltbl81.VerticalAlignment = Element.ALIGN_MIDDLE;
            tbl8Cell.AddCell(celltbl81);
            PdfPCell celltbl82 = new PdfPCell(new Phrase(objModel.RFICode +" (Rev. "+objModel.Revision+")", calibri_7));
            celltbl82.PaddingBottom = 3f;
            celltbl82.Border = Rectangle.RIGHT_BORDER | Rectangle.TOP_BORDER | Rectangle.BOTTOM_BORDER;
            celltbl82.HorizontalAlignment = Element.ALIGN_LEFT;
            celltbl82.VerticalAlignment = Element.ALIGN_MIDDLE;
            tbl8Cell.AddCell(celltbl82);

            PdfPCell celltbl83 = new PdfPCell(new Phrase("Date of RFI Submission: ", calibri_7b));
            celltbl83.PaddingBottom = 3f;
            celltbl83.Border = Rectangle.LEFT_BORDER | Rectangle.TOP_BORDER | Rectangle.BOTTOM_BORDER;
            celltbl83.HorizontalAlignment = Element.ALIGN_RIGHT;
            celltbl83.VerticalAlignment = Element.ALIGN_MIDDLE;
            tbl8Cell.AddCell(celltbl83);
            string _SubmissionDate = objModel.RFIOpenDate == null ? "" : ((DateTime)objModel.DateOfSubmission).ToString("dd-MMM-yyyy hh:mm tt");
            PdfPCell celltbl84 = new PdfPCell(new Phrase(_SubmissionDate, calibri_7));
            celltbl84.PaddingBottom = 3f;
            celltbl84.Border = Rectangle.RIGHT_BORDER | Rectangle.TOP_BORDER | Rectangle.BOTTOM_BORDER;
            celltbl84.HorizontalAlignment = Element.ALIGN_LEFT;
            celltbl84.VerticalAlignment = Element.ALIGN_MIDDLE;
            tbl8Cell.AddCell(celltbl84);

            PdfPCell celltbl85 = new PdfPCell(new Phrase("Inspection Date: ", calibri_7b));
            celltbl85.PaddingBottom = 3f;
            celltbl85.Colspan = 2; //added
            celltbl85.Border = Rectangle.LEFT_BORDER | Rectangle.TOP_BORDER | Rectangle.BOTTOM_BORDER; //CellFullBorder();
            celltbl85.HorizontalAlignment = Element.ALIGN_RIGHT;
            celltbl85.VerticalAlignment = Element.ALIGN_MIDDLE;
            tbl8Cell.AddCell(celltbl85);
            string _InspectionDate = objModel.InspDate == null ? "" : ((DateTime)objModel.InspDate).ToString("dd-MMM-yyyy hh:mm tt");
            PdfPCell celltbl86 = new PdfPCell(new Phrase(_InspectionDate, calibri_7));
            celltbl86.PaddingBottom = 3f;
            celltbl86.Colspan = 2; //added
            celltbl86.Border = Rectangle.RIGHT_BORDER | Rectangle.TOP_BORDER | Rectangle.BOTTOM_BORDER; //CellFullBorder();
            celltbl86.HorizontalAlignment = Element.ALIGN_LEFT;
            celltbl86.VerticalAlignment = Element.ALIGN_MIDDLE;
            tbl8Cell.AddCell(celltbl86);

            //PdfPCell celltbl87 = new PdfPCell(new Phrase("Time of \nInspection: ", calibri_7b));
            //celltbl87.PaddingBottom = 3f;
            //celltbl87.Border = CellFullBorder();
            //celltbl87.HorizontalAlignment = Element.ALIGN_LEFT;
            //tbl8Cell.AddCell(celltbl87);
            //string _Inspectiontime = objModel.InspDate == null ? "" : ((DateTime)objModel.InspDate).ToString("hh:mm tt");
            //PdfPCell celltbl88 = new PdfPCell(new Phrase(_Inspectiontime, calibri_7));
            //celltbl88.PaddingBottom = 3f;
            //celltbl88.Border = CellFullBorder();
            //celltbl88.HorizontalAlignment = Element.ALIGN_LEFT;
            //tbl8Cell.AddCell(celltbl88);

            tblHeader.AddCell(new PdfPCell(tbl8Cell));

            PdfPTable tblr5 = new PdfPTable(2);
            tblr5.HorizontalAlignment = 0;
            tblr5.WidthPercentage = 100;
            tblr5.SetWidths(new float[] { 3, 4 });

            PdfPCell ctbl41 = new PdfPCell(new Phrase("BOQ Ref:  ", calibri_7b));
            ctbl41.PaddingBottom = 3f;
            ctbl41.Border = Rectangle.LEFT_BORDER | Rectangle.RIGHT_BORDER | Rectangle.TOP_BORDER;
            ctbl41.HorizontalAlignment = Element.ALIGN_LEFT;
            tblr5.AddCell(ctbl41);
            PdfPCell ctbl42 = new PdfPCell(new Phrase("Work Description: ", calibri_7b));
            ctbl42.PaddingBottom = 3f;
            ctbl42.Border = Rectangle.LEFT_BORDER | Rectangle.RIGHT_BORDER | Rectangle.TOP_BORDER;
            ctbl42.HorizontalAlignment = Element.ALIGN_LEFT;
            tblr5.AddCell(ctbl42);

            PdfPCell ctbl43 = new PdfPCell(new Phrase(" " + objModel.BOQItemNo, calibri_7));
            ctbl43.PaddingBottom = 20f;
            ctbl43.Border = Rectangle.LEFT_BORDER | Rectangle.RIGHT_BORDER | Rectangle.BOTTOM_BORDER;
            ctbl43.HorizontalAlignment = Element.ALIGN_LEFT;
            tblr5.AddCell(ctbl43);
            PdfPCell ctbl44 = new PdfPCell(new Phrase(" " + objModel.WorkDescription, calibri_7));
            ctbl44.PaddingBottom = 20f;
            ctbl44.Border = Rectangle.LEFT_BORDER | Rectangle.RIGHT_BORDER | Rectangle.BOTTOM_BORDER;
            ctbl44.HorizontalAlignment = Element.ALIGN_LEFT;
            tblr5.AddCell(ctbl44);

            tblHeader.AddCell(new PdfPCell(tblr5));
            #endregion ---- row 4, 5 ----

            #region ---- row 6 ----
            PdfPTable tblr6 = new PdfPTable(4);
            tblr6.HorizontalAlignment = 0;
            tblr6.WidthPercentage = 100;
            tblr6.SetWidths(new float[] { 2, 6, 1, 1 });

            PdfPCell cr61 = new PdfPCell(new Phrase("Location of Work: ", calibri_7b));
            cr61.PaddingBottom = 4f;
            cr61.Border = Rectangle.LEFT_BORDER | Rectangle.TOP_BORDER | Rectangle.BOTTOM_BORDER;
            cr61.HorizontalAlignment = Element.ALIGN_LEFT;
            cr61.VerticalAlignment = Element.ALIGN_MIDDLE;
            tblr6.AddCell(cr61);
            string _Location = objModel.WorkLocation;
            PdfPCell cr62 = new PdfPCell(new Phrase(_Location, calibri_7b));
            cr62.PaddingBottom = 4f;
            cr62.Border = Rectangle.TOP_BORDER | Rectangle.BOTTOM_BORDER;
            cr62.HorizontalAlignment = Element.ALIGN_LEFT;
            cr62.VerticalAlignment = Element.ALIGN_MIDDLE;
            tblr6.AddCell(cr62);
            PdfPCell cr63 = new PdfPCell(new Phrase("Side: ", calibri_7b));
            cr63.PaddingBottom = 4f;
            cr63.Border = Rectangle.TOP_BORDER | Rectangle.BOTTOM_BORDER;
            cr63.HorizontalAlignment = Element.ALIGN_RIGHT;
            cr63.VerticalAlignment = Element.ALIGN_MIDDLE;
            tblr6.AddCell(cr63);
            PdfPCell cr64 = new PdfPCell(new Phrase(objModel.WorkSide, calibri_7));
            cr64.PaddingBottom = 4f;
            cr64.Border = Rectangle.RIGHT_BORDER | Rectangle.TOP_BORDER | Rectangle.BOTTOM_BORDER;
            cr64.HorizontalAlignment = Element.ALIGN_LEFT;
            cr64.VerticalAlignment = Element.ALIGN_MIDDLE;
            tblr6.AddCell(cr64);

            tblHeader.AddCell(new PdfPCell(tblr6));
            #endregion ---- row 6 ----

            PdfPTable pdfAtbl = new PdfPTable(2);
            pdfAtbl.HorizontalAlignment = 0;
            pdfAtbl.WidthPercentage = 100;
            pdfAtbl.SetWidths(new float[] { 5.5f, 4.5f });

            PdfPCell ca1 = new PdfPCell(new Phrase("We request you to arrange for the inspections/survey of the following material/works:  ", calibri_7));
            ca1.PaddingBottom = 4f;
            ca1.Border = CellNoBorder();
            ca1.HorizontalAlignment = Element.ALIGN_LEFT;
            ca1.VerticalAlignment = Element.ALIGN_MIDDLE;
            pdfAtbl.AddCell(ca1);

            PdfPCell ca2 = new PdfPCell(new Phrase(objModel.ActivityName, calibri_7b));
            ca2.PaddingBottom = 4f;
            ca2.Border = CellNoBorder();
            ca2.HorizontalAlignment = Element.ALIGN_LEFT;
            ca2.VerticalAlignment = Element.ALIGN_MIDDLE;
            pdfAtbl.AddCell(ca2);

            PdfPCell cr7 = new PdfPCell(pdfAtbl);
            cr7.PaddingBottom = 4f;
            cr7.Border = CellFullBorder();
            tblHeader.AddCell(cr7);

            #region --- row 8 ----
            //PdfPTable tblSh1t1 = new PdfPTable(9);
            //tblSh1t1.HorizontalAlignment = 0;
            //tblSh1t1.WidthPercentage = 100;
            //tblSh1t1.SetWidths(new float[] { 11f, 11f, 11f, 11f, 11f, 11f, 11f, 11f, 12f });  // then set the column's __relative__ widths

            //#region ---- row 1 headings ----
            //PdfPCell Ctbl1R1C1 = new PdfPCell(new Phrase("Earth Work", calibri_7b));
            //Ctbl1R1C1.Border = CellFullBorder();
            //Ctbl1R1C1.HorizontalAlignment = Element.ALIGN_CENTER;
            //Ctbl1R1C1.VerticalAlignment = Element.ALIGN_MIDDLE;
            //Ctbl1R1C1.PaddingBottom = 5f;
            //tblSh1t1.AddCell(Ctbl1R1C1);

            //PdfPCell Ctbl1R1C2 = new PdfPCell(new Phrase("Blanket", calibri_7b));
            //Ctbl1R1C2.Border = CellFullBorder();
            //Ctbl1R1C2.HorizontalAlignment = Element.ALIGN_CENTER;
            //Ctbl1R1C2.VerticalAlignment = Element.ALIGN_MIDDLE;
            //Ctbl1R1C2.PaddingBottom = 5f;
            //tblSh1t1.AddCell(Ctbl1R1C2);

            //PdfPCell ce1 = new PdfPCell(new Phrase("Ballast", calibri_7b));
            //ce1.Border = CellFullBorder();
            //ce1.HorizontalAlignment = Element.ALIGN_CENTER;
            //ce1.VerticalAlignment = Element.ALIGN_MIDDLE;
            //ce1.PaddingBottom = 5f;
            //tblSh1t1.AddCell(ce1);

            //PdfPCell Ctbl1R1C3 = new PdfPCell(new Phrase("Survey", calibri_7b));
            //Ctbl1R1C3.Border = CellFullBorder();
            //Ctbl1R1C3.HorizontalAlignment = Element.ALIGN_CENTER;
            //Ctbl1R1C3.VerticalAlignment = Element.ALIGN_MIDDLE;
            //Ctbl1R1C3.PaddingBottom = 5f;
            //tblSh1t1.AddCell(Ctbl1R1C3);

            //PdfPCell Ctbl1R1C4 = new PdfPCell(new Phrase("Structure", calibri_7b));
            //Ctbl1R1C4.Border = CellFullBorder();
            //Ctbl1R1C4.HorizontalAlignment = Element.ALIGN_CENTER;
            //Ctbl1R1C4.VerticalAlignment = Element.ALIGN_MIDDLE;
            //Ctbl1R1C4.PaddingBottom = 5f;
            //tblSh1t1.AddCell(Ctbl1R1C4);

            //PdfPCell Ctbl1R1C5 = new PdfPCell(new Phrase("Building", calibri_7b));
            //Ctbl1R1C5.Border = CellFullBorder();
            //Ctbl1R1C5.HorizontalAlignment = Element.ALIGN_CENTER;
            //Ctbl1R1C5.VerticalAlignment = Element.ALIGN_MIDDLE;
            //Ctbl1R1C5.PaddingBottom = 5f;
            //tblSh1t1.AddCell(Ctbl1R1C5);

            //PdfPCell Ctbl1R1C6 = new PdfPCell(new Phrase("Material", calibri_7b));
            //Ctbl1R1C6.Border = CellFullBorder();
            //Ctbl1R1C6.HorizontalAlignment = Element.ALIGN_CENTER;
            //Ctbl1R1C6.VerticalAlignment = Element.ALIGN_MIDDLE;
            //Ctbl1R1C6.PaddingBottom = 5f;
            //tblSh1t1.AddCell(Ctbl1R1C6);
            //PdfPCell Ctbl1R1C7 = new PdfPCell(new Phrase("MISC", calibri_7b));
            //Ctbl1R1C7.Border = CellFullBorder();
            //Ctbl1R1C7.HorizontalAlignment = Element.ALIGN_CENTER;
            //Ctbl1R1C7.VerticalAlignment = Element.ALIGN_MIDDLE;
            //Ctbl1R1C7.PaddingBottom = 5f;
            //tblSh1t1.AddCell(Ctbl1R1C7);
            //PdfPCell ce = new PdfPCell(new Phrase("", calibri_7b));
            //ce.Border = CellFullBorder();
            //ce.HorizontalAlignment = Element.ALIGN_CENTER;
            //ce.VerticalAlignment = Element.ALIGN_MIDDLE;
            //ce.PaddingBottom = 5f;
            //tblSh1t1.AddCell(ce);
            //#endregion
            //tblHeader.AddCell(new PdfPCell(tblSh1t1));
            #endregion --- row 8 ----

            #region --- row 09 ----
            PdfPTable tblr9 = new PdfPTable(2);
            tblr9.HorizontalAlignment = 0;
            tblr9.WidthPercentage = 100;
            tblr9.SetWidths(new float[] { 3, 4 });

            PdfPCell cr91 = new PdfPCell(new Phrase("For contractor :", calibri_7b));
            cr91.Border = CellFullBorder();
            cr91.PaddingBottom = 3;
            cr91.HorizontalAlignment = Element.ALIGN_LEFT;
            tblr9.AddCell(cr91);

            PdfPCell cr92 = new PdfPCell(new Phrase("For Client/PMC : ", calibri_7b));
            cr92.Border = CellFullBorder();
            cr92.PaddingBottom = 3;
            cr92.HorizontalAlignment = Element.ALIGN_LEFT;
            tblr9.AddCell(cr92);

            PdfPCell CtblLeftCR4C1 = new PdfPCell();
            CtblLeftCR4C1.AddElement(new Phrase(" Requested by:", calibri_7));
            CtblLeftCR4C1.AddElement(new Phrase("\n", calibri_7));
            CtblLeftCR4C1.AddElement(new Phrase(" Name : " + objModel.Requestedby, calibri_7));
            CtblLeftCR4C1.AddElement(new Phrase("\n", calibri_7));
            CtblLeftCR4C1.AddElement(new Phrase(" Date : " + (objModel.DateOfSubmission == null ? "" : ((DateTime)objModel.DateOfSubmission).ToString("dd-MMM-yyyy")), calibri_7));
            CtblLeftCR4C1.AddElement(new Phrase("\n", calibri_7));
            CtblLeftCR4C1.AddElement(new Phrase(" Time : " + (objModel.DateOfSubmission == null ? "" : ((DateTime)objModel.DateOfSubmission).ToString("hh:mm tt")), calibri_7));
            CtblLeftCR4C1.PaddingBottom = 4f;
            tblr9.AddCell(CtblLeftCR4C1);

            PdfPCell CtblLeftCR4C2 = new PdfPCell();
            CtblLeftCR4C2.AddElement(new Phrase(" Received by:", calibri_7));
            CtblLeftCR4C2.AddElement(new Phrase("\n", calibri_7));
            CtblLeftCR4C2.AddElement(new Phrase(" Name : " + objModel.AssignToPMCName, calibri_7));
            CtblLeftCR4C2.AddElement(new Phrase("\n", calibri_7));
            CtblLeftCR4C2.AddElement(new Phrase(" Date : " + (objModel.AcceptedDate == null ? "" : ((DateTime)objModel.AcceptedDate).ToString("dd-MMM-yyyy")), calibri_7));
            CtblLeftCR4C2.AddElement(new Phrase("\n", calibri_7));
            CtblLeftCR4C2.AddElement(new Phrase(" Time : " + (objModel.AcceptedDate == null ? "" : ((DateTime)objModel.AcceptedDate).ToString("hh:mm tt")), calibri_7));
            CtblLeftCR4C2.PaddingBottom = 4f;
            tblr9.AddCell(CtblLeftCR4C2);

            tblHeader.AddCell(new PdfPCell(tblr9));
            #endregion --- row 09 ----


            PdfPCell chr1 = new PdfPCell(new Phrase(" Resources ", calibri_7b));
            chr1.PaddingBottom = 4f;
            chr1.Border = CellNoBorder();
            tblHeader.AddCell(chr1);

            PdfPTable tblPEncloser = new PdfPTable(2);
            tblPEncloser.HorizontalAlignment = 0;
            tblPEncloser.WidthPercentage = 100;
            tblPEncloser.SetWidths(new float[] { 0.5f, 9f });

            PdfPCell cblankRow = new PdfPCell(new Phrase("\n"));
            cblankRow.FixedHeight = 4f;
            cblankRow.Border = CellNoBorder();
            tblPEncloser.AddCell(cblankRow);

            string eCount = objEnclosure.Count > 0 ? "" : "NA";
            PdfPCell cehead = new PdfPCell(new Phrase("Enclosure: " + eCount, calibri_7b));
            cehead.PaddingBottom = 4f;            
            cehead.Border = CellNoBorder();
            cehead.HorizontalAlignment = Element.ALIGN_LEFT;
            cehead.VerticalAlignment = Element.ALIGN_MIDDLE;
            tblPEncloser.AddCell(cehead);

            if (objEnclosure.Count>0)
            {
                PdfPCell cblankRows = new PdfPCell(new Phrase("\n"));
                cblankRows.FixedHeight = 4f;
                cblankRows.Border = CellNoBorder();
                tblPEncloser.AddCell(cblankRows);

                PdfPTable tblEL = new PdfPTable(4);
                tblEL.HorizontalAlignment = 0;
                tblEL.WidthPercentage = 100;
                tblEL.SetWidths(new float[] { 0.2f, 4.8f, 0.2f, 4.8f });

                for (int i = 0; i < objEnclosure.Count; i++)
                {
                    int j = i;
                    string srNo = (j + 1).ToString()+".";
                    PdfPCell cSr = new PdfPCell(new Phrase(srNo, calibri_7b))
                    {
                        PaddingBottom = 3f,
                        Border = CellNoBorder(),
                        HorizontalAlignment = Element.ALIGN_LEFT,
                        VerticalAlignment = Element.ALIGN_MIDDLE                        
                    };
                    tblEL.AddCell(cSr);
                    PdfPCell cBody = new PdfPCell(new Phrase( objEnclosure[i].EnclType, calibri_7));
                    cBody.PaddingBottom = 3f;
                    cBody.Border = CellNoBorder();
                    cBody.HorizontalAlignment = Element.ALIGN_LEFT;
                    cBody.VerticalAlignment = Element.ALIGN_MIDDLE;
                    tblEL.AddCell(cBody);
                }
                if (objEnclosure.Count%2!=0)
                {
                    PdfPCell cSe = new PdfPCell(new Phrase("\n", calibri_7b))
                    {
                        Colspan=2,
                        PaddingBottom = 3f,
                        Border = CellNoBorder(),
                        HorizontalAlignment = Element.ALIGN_LEFT,
                        VerticalAlignment = Element.ALIGN_MIDDLE
                    };
                    tblEL.AddCell(cSe);
                    
                }
                PdfPCell cEncloserL = new PdfPCell(tblEL);
                cEncloserL.Border = CellNoBorder();
                tblPEncloser.AddCell(cEncloserL);
            }
           

            PdfPCell cEncloser = new PdfPCell(tblPEncloser);
            cEncloser.Border = CellNoBorder();
            cEncloser.PaddingBottom = objEnclosure.Count == 0 ? 10f : (10 - (objEnclosure.Count * 2)) > 0 ? Convert.ToSingle(10 - (objEnclosure.Count * 2)) : 10f;
            tblHeader.AddCell(cEncloser);

            PdfPCell cr10 = new PdfPCell();
            //cr10.AddElement(new Phrase(" Level sheet/ Field density reports/ Pre-concrete check list/ Post-concrete check list/ Test reports/ Other if any ", calibri_7b));
            cr10.AddElement(new Phrase(" Comments/Recommendation of Client/PMC's Representative: ", calibri_7b));
            cr10.PaddingBottom = 7f;
            cr10.Border = CellNoBorder();
            cr10.HorizontalAlignment = Element.ALIGN_LEFT;
            tblHeader.AddCell(cr10);

            #region --- comments section ----
            if (objCommList.Count > 0 && objCommList.Any(o=>o.Comment!=string.Empty))
            {
                PdfPTable tblC = new PdfPTable(6);
                tblC.HorizontalAlignment = 0;
                tblC.WidthPercentage = 100;
                tblC.SetWidths(new float[] { 0.25f, 1f, 4f, 3f, 1.5f, 0.25f });

                PdfPCell CspaceSt = new PdfPCell(new Phrase("\n", calibri_7));
                CspaceSt.PaddingBottom = 4f;
                CspaceSt.Border = CellNoBorder();


                PdfPCell blk = new PdfPCell(new Phrase("\n"));
                blk.FixedHeight = 3f;
                blk.Colspan = 6;
                blk.Border = CellNoBorder();

                BaseColor bColor = BaseColor.BLACK;

                PdfPCell ccH2 = new PdfPCell(new Phrase("Status", calibri_7b))
                {
                    //   PaddingBottom = 3f,
                    Border = Rectangle.LEFT_BORDER | Rectangle.TOP_BORDER | Rectangle.BOTTOM_BORDER,
                    HorizontalAlignment = Element.ALIGN_CENTER,
                    VerticalAlignment = Element.ALIGN_MIDDLE,
                    BorderColor = bColor
                };
                PdfPCell ccH3 = new PdfPCell(new Phrase("Comments", calibri_7b))
                {
                    // PaddingBottom = 4f,
                    Border = Rectangle.TOP_BORDER | Rectangle.BOTTOM_BORDER,
                    HorizontalAlignment = Element.ALIGN_LEFT,
                    VerticalAlignment = Element.ALIGN_MIDDLE,
                    BorderColor = bColor
                };
                PdfPCell ccH4 = new PdfPCell(new Phrase("Commented by", calibri_7b))
                {
                    //PaddingBottom = 4f,
                    Border = Rectangle.TOP_BORDER | Rectangle.BOTTOM_BORDER,
                    HorizontalAlignment = Element.ALIGN_LEFT,
                    VerticalAlignment = Element.ALIGN_MIDDLE,
                    BorderColor = bColor
                };
                PdfPCell ccH5 = new PdfPCell(new Phrase("Date", calibri_7b))
                {
                    //PaddingBottom = 4f,
                    Border = Rectangle.RIGHT_BORDER | Rectangle.TOP_BORDER | Rectangle.BOTTOM_BORDER,
                    HorizontalAlignment = Element.ALIGN_LEFT,
                    VerticalAlignment = Element.ALIGN_MIDDLE,
                    BorderColor = bColor
                };


                tblC.AddCell(CspaceSt);
                tblC.AddCell(ccH2);
                tblC.AddCell(ccH3);
                tblC.AddCell(ccH4);
                tblC.AddCell(ccH5);
                tblC.AddCell(CspaceSt);
                tblC.AddCell(blk);

                foreach (var item in objCommList)
                {
                    if (!string.IsNullOrEmpty(Convert.ToString(item.Comment)))
                    {

                        bColor = GetBaseColor(item.Status);
                        PdfPCell cc2 = new PdfPCell(new Phrase(item.Status, calibri_7))
                        {
                            //   PaddingBottom = 3f,
                            Border = Rectangle.LEFT_BORDER | Rectangle.TOP_BORDER | Rectangle.BOTTOM_BORDER,
                            HorizontalAlignment = Element.ALIGN_CENTER,
                            VerticalAlignment = Element.ALIGN_MIDDLE,
                            BorderColor = bColor
                        };
                        PdfPCell cc3 = new PdfPCell(new Phrase(" " + item.Comment, calibri_7))
                        {
                            // PaddingBottom = 4f,
                            Border = Rectangle.TOP_BORDER | Rectangle.BOTTOM_BORDER,
                            HorizontalAlignment = Element.ALIGN_LEFT,
                            VerticalAlignment = Element.ALIGN_MIDDLE,
                            BorderColor = bColor
                        };
                        PdfPCell cc4 = new PdfPCell(new Phrase(item.CommentedBy + " (" + item.Designation + ")", calibri_7))
                        {
                            //PaddingBottom = 4f,
                            Border = Rectangle.TOP_BORDER | Rectangle.BOTTOM_BORDER,
                            HorizontalAlignment = Element.ALIGN_LEFT,
                            VerticalAlignment = Element.ALIGN_MIDDLE,
                            BorderColor = bColor
                        };
                        PdfPCell cc5 = new PdfPCell(new Phrase(item.CommentDate, calibri_7))
                        {
                            //PaddingBottom = 4f,
                            Border = Rectangle.RIGHT_BORDER | Rectangle.TOP_BORDER | Rectangle.BOTTOM_BORDER,
                            HorizontalAlignment = Element.ALIGN_LEFT,
                            VerticalAlignment = Element.ALIGN_MIDDLE,
                            BorderColor = bColor
                        };

                        tblC.AddCell(CspaceSt);
                        tblC.AddCell(cc2);
                        tblC.AddCell(cc3);
                        tblC.AddCell(cc4);
                        tblC.AddCell(cc5);
                        tblC.AddCell(CspaceSt);
                        tblC.AddCell(blk);
                    }
                }

                PdfPCell cC = new PdfPCell(tblC);
                cC.Border = CellNoBorder();
                cC.PaddingBottom = 30f;
                tblHeader.AddCell(cC);
            }
            #endregion

            #region --- row 11 inspection status section ---

            Font InspStatusFont = new Font();
            RFIDocCommonFooter objFooter = new RFIDocCommonFooter();
            BaseColor FontColor = BaseColor.WHITE;
            switch (objModel.InspStatus)
            {
                case "Approved by PMC":
                case "Approved by RVNL":
                    InspStatusFont = FontFactory.GetFont("Calibri", 7, Font.BOLD);
                    FontColor = BaseColor.GREEN;
                    objFooter.isApproved = "X";
                    break;
                case "Revise and Resubmit":
                    InspStatusFont = FontFactory.GetFont("Calibri", 7, Font.BOLD,BaseColor.WHITE);
                    FontColor = new BaseColor(127, 63, 10); //BaseColor.ORANGE;
                    objFooter.isApproved = "-";
                    break;
                case "Rejected":
                    InspStatusFont = FontFactory.GetFont("Calibri", 7, Font.BOLD, BaseColor.WHITE);
                    FontColor =  BaseColor.RED;
                    objFooter.isApproved = "-";
                    break;
                case "Scheduled":
                    InspStatusFont = FontFactory.GetFont("Calibri", 7, Font.BOLD, BaseColor.WHITE);
                    FontColor = new BaseColor(156, 39, 176); //BaseColor.BLUE;
                    objFooter.isApproved = "-";
                    break;
                case "Rescheduled":
                    InspStatusFont = FontFactory.GetFont("Calibri", 7, Font.BOLD, BaseColor.BLACK);
                    FontColor = new BaseColor(145, 113, 9); // BaseColor.BLUE;
                    objFooter.isApproved = "-";
                    break;
                case "Open":
                    InspStatusFont = FontFactory.GetFont("Calibri", 7, Font.BOLD, BaseColor.WHITE);
                    FontColor = BaseColor.BLUE;
                    objFooter.isApproved = "-";
                    break;
                case "Partially Approved":
                    InspStatusFont = FontFactory.GetFont("Calibri", 7, Font.BOLD, BaseColor.BLACK);
                    FontColor = new BaseColor(88, 216, 210); // BaseColor.CYAN;
                    objFooter.isApproved = "X";
                    break;
                default:
                    objModel.InspStatus = objModel.InspStatus == string.Empty ? "NA" : objModel.InspStatus;
                    InspStatusFont = FontFactory.GetFont("Calibri", 7, Font.BOLD);
                    FontColor = BaseColor.LIGHT_GRAY;
                    objFooter.isApproved = "-";
                    break;
            }

            objFooter.PMCRecommendation = "";
            objFooter.ContractorRecommendation = "";
            objFooter.Enclosures = "";
            objFooter.RemarkByClient = "";


            PdfPCell cr11a = new PdfPCell(new Phrase(" Activity Inspection and Status: ", calibri_7b));
            cr11a.PaddingBottom = 6f;
            cr11a.Border = CellNoBorder();
            cr11a.HorizontalAlignment = Element.ALIGN_LEFT;
            cr11a.VerticalAlignment = Element.ALIGN_MIDDLE;
            tblHeader.AddCell(cr11a);

            PdfPTable tbl11 = new PdfPTable(7);
            tbl11.HorizontalAlignment = 0;
            tbl11.WidthPercentage = 100;
            tbl11.SetWidths(new float[] { 0.5f, 0.5f, 3.8f, 0.4f, 0.5f, 3.8f, 0.5f });

            PdfPCell blankRow = new PdfPCell(new Phrase("\n"));
            blankRow.FixedHeight = 3f;
            blankRow.Colspan = 7;
            blankRow.Border = CellNoBorder();

            PdfPCell cBlank = new PdfPCell(new Phrase("\n", calibri_7));
            cBlank.PaddingBottom = 4f;
            cBlank.Border = CellNoBorder();
            cBlank.HorizontalAlignment = Element.ALIGN_LEFT;
            cBlank.VerticalAlignment = Element.ALIGN_MIDDLE;
            tbl11.AddCell(cBlank);

            Font tickFont = new Font(Font.FontFamily.ZAPFDINGBATS, 9, Font.BOLD);
            PdfPCell cCeckBoxApp = new PdfPCell(new Phrase(objModel.InspStatus == "Approved by RVNL" ||objModel.InspStatus == "Approved by PMC" || objModel.InspStatus == "Partially Approved" ? "\u0033" : "\n", tickFont))
            {
                PaddingBottom = 4f,
                Border = CellFullBorder(),
                HorizontalAlignment = Element.ALIGN_CENTER,
                VerticalAlignment = Element.ALIGN_MIDDLE,
                BorderColor = FontColor
            };

            PdfPCell c113 = new PdfPCell(new Phrase("\t   " + objModel.InspStatus, InspStatusFont))
            {
                PaddingBottom = 4f,
                Border = CellNoBorder(),
                HorizontalAlignment = Element.ALIGN_LEFT,
                VerticalAlignment = Element.ALIGN_MIDDLE,
                BackgroundColor = FontColor
            };

            tbl11.AddCell(cCeckBoxApp);
            tbl11.AddCell(c113);
            tbl11.AddCell(cBlank);
            tbl11.AddCell(cCeckBoxApp);
            tbl11.AddCell(c113);
            tbl11.AddCell(cBlank);



            PdfPCell ccheck = new PdfPCell(tbl11);
            ccheck.PaddingBottom = 15f;
            ccheck.Border = CellNoBorder();
            tblHeader.AddCell(ccheck);
            #endregion --- row 11 ---

            #region --- row 12 footer----
            PdfPTable tblr12 = new PdfPTable(2);
            tblr12.HorizontalAlignment = 0;
            tblr12.WidthPercentage = 100;
            tblr12.SetWidths(new float[] { 3, 4 });

            //PdfPCell cr121 = new PdfPCell(new Phrase("Engineer of PMC", calibri_7b));
            PdfPCell cr121 = new PdfPCell(new Phrase(objModel.AssignToPMCName, calibri_7b));
            cr121.Border = CellFullBorder();
            cr121.PaddingBottom = 3;
            cr121.HorizontalAlignment = Element.ALIGN_CENTER;
            tblr12.AddCell(cr121);

            PdfPCell cr122 = new PdfPCell(new Phrase("Engineer of Client : ", calibri_7b));
            cr122.Border = CellFullBorder();
            cr122.PaddingBottom = 3;
            cr122.HorizontalAlignment = Element.ALIGN_CENTER;
            tblr12.AddCell(cr122);

            PdfPCell cr123 = new PdfPCell(new Phrase((objModel.InspStatus == "NA" ? "\n" : objModel.InspStatus), calibri_7b));
            cr123.Border = CellFullBorder();
            cr123.PaddingBottom = 3;
            cr123.HorizontalAlignment = Element.ALIGN_CENTER;
            tblr12.AddCell(cr123);

            PdfPCell cr124 = new PdfPCell(new Phrase((objModel.InspStatus == "NA" ? "\n" : objModel.InspStatus), calibri_7b));
            cr124.Border = CellFullBorder();
            cr124.PaddingBottom = 3;
            cr124.HorizontalAlignment = Element.ALIGN_CENTER;
            tblr12.AddCell(cr124);

            PdfPCell cr125 = new PdfPCell(new Phrase("\n", calibri_7b));
            cr125.Border = CellFullBorder();
            cr125.PaddingBottom = 30f;
            tblr12.AddCell(cr125);

            PdfPCell cr126 = new PdfPCell(new Phrase("\n", calibri_7b));
            cr126.Border = CellFullBorder();
            cr126.PaddingBottom = 30f;
            tblr12.AddCell(cr126);

            PdfPCell cr127 = new PdfPCell(new Phrase("PMC's Representative", calibri_7b));
            cr127.Border = CellFullBorder();
            cr127.PaddingBottom = 3;
            cr127.HorizontalAlignment = Element.ALIGN_CENTER;
            tblr12.AddCell(cr127);

            PdfPCell cr128 = new PdfPCell(new Phrase("Client's Representative", calibri_7b));
            cr128.Border = CellFullBorder();
            cr128.PaddingBottom = 3;
            cr128.HorizontalAlignment = Element.ALIGN_CENTER;
            tblr12.AddCell(cr128);

            PdfPCell cr129 = new PdfPCell(new Phrase("Test Control No.", calibri_7b));
            cr129.Border = CellFullBorder();
            cr129.HorizontalAlignment = Element.ALIGN_LEFT;
            cr129.VerticalAlignment = Element.ALIGN_MIDDLE;
            // cr129.PaddingBottom = 25f;
            tblr12.AddCell(cr129);

            PdfPTable tblftr = new PdfPTable(2);
            tblftr.HorizontalAlignment = 0;
            tblftr.WidthPercentage = 100;
            tblftr.SetWidths(new float[] { 2, 8 });

            PdfPCell cf1 = new PdfPCell(new Phrase("Received by \n(For contractor)", calibri_7));
            cf1.Border = CellFullBorder();
            cf1.HorizontalAlignment = Element.ALIGN_LEFT;
            // cf1.PaddingBottom = 25f;
            cf1.VerticalAlignment = Element.ALIGN_MIDDLE;
            tblftr.AddCell(cf1);
            PdfPCell cf2 = new PdfPCell(new Phrase("\n", calibri_7));
            cf2.Border = CellFullBorder();
            cf2.PaddingBottom = 25f;
            tblftr.AddCell(cf2);

            PdfPCell cr12a = new PdfPCell(tblftr);
            tblr12.AddCell(cr12a);

            tblHeader.AddCell(new PdfPCell(tblr12));
            #endregion --- row 12 ----

            return new PdfPCell(tblHeader);
        }

        private BaseColor GetBaseColor(string status)
        {
            switch (status)
            {
                case "Approved by PMC":
                case "Approved by RVNL":
                    return BaseColor.GREEN;

                case "Revise and Resubmit":
                    return new BaseColor(127, 63, 10); //BaseColor.ORANGE;

                case "Rejected":
                    return BaseColor.RED;

                case "Scheduled":
                    return BaseColor.BLUE;

                case "Open":
                    return BaseColor.BLUE;

                case "Partially Approved":
                    return new BaseColor(88, 216, 210); // BaseColor.CYAN;
               
                case "Rescheduled":
                    return new BaseColor(145, 113, 9); // BaseColor.BLUE;

                default:
                    return BaseColor.LIGHT_GRAY;
            }

        }

        #endregion ---- Single ----

        #region ---- Chainage int to String ----
        /// <summary>
        /// Ints to string chainage.
        /// </summary>
        /// <param name="chainage">The chainage.</param>
        /// <returns></returns>
        public string IntToStringChainage(int chainage)
        {
            return chainage.ToString("D6").Insert(chainage.ToString("D6").Length - 3, "+");
        }
        #endregion

        #region ---- MultiPage ----

        #region  ---- sheet 1 ----
        internal PdfPCell SheetOneCell(RFIDocumentModel objModel)
        {
            RFIDocSheetOne objRfiDoc = new RFIDocSheetOne();
            #region ---- Demo model ---
            objRfiDoc.Survey = "";
            objRfiDoc.Material = "";
            objRfiDoc.USSORItem = "";
            objRfiDoc.ElectricalWork = "";
            objRfiDoc.SnTWorkes = "";
            objRfiDoc.Misc = "";
            #endregion

            PdfPTable tblSh1t1 = new PdfPTable(6);
            tblSh1t1.HorizontalAlignment = 0;
            tblSh1t1.WidthPercentage = 100;
            tblSh1t1.SetWidths(new float[] { 32f, 32f, 32f, 32f, 32f, 20f });  // then set the column's __relative__ widths

            #region ---- row 1 headings ----
            PdfPCell Ctbl1R1C1 = new PdfPCell(new Phrase("SURVEY", calibri_7));
            Ctbl1R1C1.Border = CellFullBorder();
            Ctbl1R1C1.HorizontalAlignment = Element.ALIGN_CENTER;
            tblSh1t1.AddCell(Ctbl1R1C1);

            PdfPCell Ctbl1R1C2 = new PdfPCell(new Phrase("MATERIAL", calibri_7));
            Ctbl1R1C2.Border = CellFullBorder();
            Ctbl1R1C2.HorizontalAlignment = Element.ALIGN_CENTER;
            tblSh1t1.AddCell(Ctbl1R1C2);

            PdfPCell Ctbl1R1C3 = new PdfPCell(new Phrase("USSOR Items", calibri_7));
            Ctbl1R1C3.Border = CellFullBorder();
            Ctbl1R1C3.HorizontalAlignment = Element.ALIGN_CENTER;
            tblSh1t1.AddCell(Ctbl1R1C3);

            PdfPCell Ctbl1R1C4 = new PdfPCell(new Phrase("ELECTRICAL WORK", calibri_7));
            Ctbl1R1C4.Border = CellFullBorder();
            Ctbl1R1C4.HorizontalAlignment = Element.ALIGN_CENTER;
            tblSh1t1.AddCell(Ctbl1R1C4);

            PdfPCell Ctbl1R1C5 = new PdfPCell(new Phrase("S&T WORK", calibri_7));
            Ctbl1R1C5.Border = CellFullBorder();
            Ctbl1R1C5.HorizontalAlignment = Element.ALIGN_CENTER;
            tblSh1t1.AddCell(Ctbl1R1C5);

            PdfPCell Ctbl1R1C6 = new PdfPCell(new Phrase("MISC.", calibri_7));
            Ctbl1R1C6.Border = CellFullBorder();
            Ctbl1R1C6.HorizontalAlignment = Element.ALIGN_CENTER;
            tblSh1t1.AddCell(Ctbl1R1C6);
            #endregion

            #region ---- row 2 data ----
            PdfPCell Ctbl1R2C1 = new PdfPCell(new Phrase(objRfiDoc.Survey, calibri_7));
            Ctbl1R2C1.Border = CellFullBorder();
            Ctbl1R2C1.HorizontalAlignment = Element.ALIGN_CENTER;
            tblSh1t1.AddCell(Ctbl1R2C1);

            PdfPCell Ctbl1R2C2 = new PdfPCell(new Phrase(objRfiDoc.Material, calibri_7));
            Ctbl1R2C2.Border = CellFullBorder();
            Ctbl1R2C2.HorizontalAlignment = Element.ALIGN_CENTER;
            tblSh1t1.AddCell(Ctbl1R2C2);

            PdfPCell Ctbl1R2C3 = new PdfPCell(new Phrase(objRfiDoc.USSORItem, calibri_7));
            Ctbl1R2C3.Border = CellFullBorder();
            Ctbl1R2C3.HorizontalAlignment = Element.ALIGN_CENTER;
            tblSh1t1.AddCell(Ctbl1R2C3);

            PdfPCell Ctbl1R2C4 = new PdfPCell(new Phrase(objRfiDoc.ElectricalWork, calibri_7));
            Ctbl1R2C4.Border = CellFullBorder();
            Ctbl1R2C4.HorizontalAlignment = Element.ALIGN_CENTER;
            tblSh1t1.AddCell(Ctbl1R2C4);

            PdfPCell Ctbl1R2C5 = new PdfPCell(new Phrase(objRfiDoc.SnTWorkes, calibri_7));
            Ctbl1R2C5.Border = CellFullBorder();
            Ctbl1R2C5.HorizontalAlignment = Element.ALIGN_CENTER;
            tblSh1t1.AddCell(Ctbl1R2C5);

            PdfPCell Ctbl1R2C6 = new PdfPCell(new Phrase(objRfiDoc.Misc, calibri_7));
            Ctbl1R2C6.Border = CellFullBorder();
            Ctbl1R2C6.HorizontalAlignment = Element.ALIGN_CENTER;
            tblSh1t1.AddCell(Ctbl1R2C6);
            #endregion

            return new PdfPCell(tblSh1t1);
        }

        #endregion ---- sheet 1 -----

        #region  ---- sheet 2 ----
        internal PdfPCell EarthworkCell(RFIDocumentModel objModel)
        {
            RFIDocEarthWork objRfiDoc = new RFIDocEarthWork();
            #region ---- Demo model ---
            objRfiDoc.Embankment = "";
            objRfiDoc.SubGrade = "";
            objRfiDoc.Blanket = "";
            #endregion
            PdfPTable tblRoot = new PdfPTable(1);
            #region --- tbl header ----
            PdfPTable tblHeading = new PdfPTable(2);
            tblHeading.HorizontalAlignment = 0;
            tblHeading.WidthPercentage = 100;
            tblHeading.SetWidths(new float[] { 1, 9 });

            PdfPCell ctH1 = new PdfPCell(new Phrase("EARHWORK : ", calibri_7b));
            ctH1.Border = CellNoBorder();
            ctH1.HorizontalAlignment = Element.ALIGN_LEFT;
            tblHeading.AddCell(ctH1);

            PdfPCell ctH2 = new PdfPCell(new Phrase("As per Clause 13.1.b of GE-14 : ", calibri_7));
            ctH2.Border = CellNoBorder();
            ctH2.HorizontalAlignment = Element.ALIGN_LEFT;
            tblHeading.AddCell(ctH2);

            PdfPCell C1hRoot = new PdfPCell(tblHeading);
            C1hRoot.Border = CellFullBorder();
            tblRoot.AddCell(C1hRoot);
            #endregion --- tbl header ----

            #region---- tbl Body -----
            PdfPTable tblBody = new PdfPTable(2);
            tblBody.HorizontalAlignment = 0;
            tblBody.WidthPercentage = 100;

            PdfPCell c11 = new PdfPCell(new Phrase("Embankment: (01 test for 500m\u00b2)", calibri_7b));
            c11.Border = Rectangle.LEFT_BORDER | Rectangle.RIGHT_BORDER | Rectangle.TOP_BORDER;
            c11.HorizontalAlignment = Element.ALIGN_LEFT;
            tblBody.AddCell(c11);
            PdfPCell c12 = new PdfPCell(new Phrase("Embankment: ", calibri_7b));
            c12.Border = Rectangle.LEFT_BORDER | Rectangle.RIGHT_BORDER | Rectangle.TOP_BORDER;
            c12.HorizontalAlignment = Element.ALIGN_LEFT;
            tblBody.AddCell(c12);

            PdfPCell c21 = new PdfPCell(new Phrase("Avg. min. Compaction as per table 6 of GE-14 - 97%", calibri_7));
            c21.Border = Rectangle.LEFT_BORDER | Rectangle.RIGHT_BORDER | Rectangle.BOTTOM_BORDER;
            c21.HorizontalAlignment = Element.ALIGN_LEFT;
            c21.PaddingBottom = 3f;
            tblBody.AddCell(c21);
            PdfPCell c22 = new PdfPCell(new Phrase("Avg. min. Compaction achieved at site- " + objRfiDoc.Embankment, calibri_7));
            c22.Border = Rectangle.LEFT_BORDER | Rectangle.RIGHT_BORDER | Rectangle.BOTTOM_BORDER;
            c22.HorizontalAlignment = Element.ALIGN_LEFT;
            c22.PaddingBottom = 3f;
            tblBody.AddCell(c22);

            PdfPCell c31 = new PdfPCell(new Phrase("Subgrade: (01 test for 200m\u00b2)", calibri_7b));
            c31.Border = Rectangle.LEFT_BORDER | Rectangle.RIGHT_BORDER | Rectangle.TOP_BORDER;
            c31.HorizontalAlignment = Element.ALIGN_LEFT;
            tblBody.AddCell(c31);
            PdfPCell c32 = new PdfPCell(new Phrase("Subgrade: ", calibri_7b));
            c32.Border = Rectangle.LEFT_BORDER | Rectangle.RIGHT_BORDER | Rectangle.TOP_BORDER;
            c32.HorizontalAlignment = Element.ALIGN_LEFT;
            tblBody.AddCell(c32);

            PdfPCell c41 = new PdfPCell(new Phrase("Avg. min. Compaction as per table 6 of GE-14 - 98%", calibri_7));
            c41.Border = Rectangle.LEFT_BORDER | Rectangle.RIGHT_BORDER | Rectangle.BOTTOM_BORDER;
            c41.HorizontalAlignment = Element.ALIGN_LEFT;
            c41.PaddingBottom = 3f;
            tblBody.AddCell(c41);
            PdfPCell c42 = new PdfPCell(new Phrase("Avg. min. Compaction achieved at site- " + objRfiDoc.SubGrade, calibri_7));
            c42.Border = Rectangle.LEFT_BORDER | Rectangle.RIGHT_BORDER | Rectangle.BOTTOM_BORDER;
            c42.HorizontalAlignment = Element.ALIGN_LEFT;
            c42.PaddingBottom = 3f;
            tblBody.AddCell(c42);

            PdfPCell c51 = new PdfPCell(new Phrase("Blanket: (01 test for 200m\u00b2)", calibri_7b));
            c51.Border = Rectangle.LEFT_BORDER | Rectangle.RIGHT_BORDER | Rectangle.TOP_BORDER;
            c51.HorizontalAlignment = Element.ALIGN_LEFT;
            tblBody.AddCell(c51);
            PdfPCell c52 = new PdfPCell(new Phrase("Blanket: ", calibri_7b));
            c52.Border = Rectangle.LEFT_BORDER | Rectangle.RIGHT_BORDER | Rectangle.TOP_BORDER;
            c52.HorizontalAlignment = Element.ALIGN_LEFT;
            tblBody.AddCell(c52);

            PdfPCell c61 = new PdfPCell(new Phrase("Avg. min. Compaction as per GE-14(Pg. 36) - 100%", calibri_7));
            c61.Border = Rectangle.LEFT_BORDER | Rectangle.RIGHT_BORDER | Rectangle.BOTTOM_BORDER;
            c61.HorizontalAlignment = Element.ALIGN_LEFT;
            c61.PaddingBottom = 3f;
            tblBody.AddCell(c61);
            PdfPCell c62 = new PdfPCell(new Phrase("Avg. min. Compaction achieved at site- " + objRfiDoc.SubGrade, calibri_7));
            c62.Border = Rectangle.LEFT_BORDER | Rectangle.RIGHT_BORDER | Rectangle.BOTTOM_BORDER;
            c62.HorizontalAlignment = Element.ALIGN_LEFT;
            c62.PaddingBottom = 3f;
            tblBody.AddCell(c62);

            PdfPCell cBody = new PdfPCell(tblBody);
            tblRoot.AddCell(cBody);
            #endregion ---- tbl Body -----

            return new PdfPCell(tblRoot);
        }
        #endregion ---- sheet 2 -----

        #region ---- Sheet 3 ----        
        /// <summary>
        /// Concreteworks the cell.
        /// </summary>
        /// <returns></returns>
        /// <exception cref="NotImplementedException"></exception>
        internal PdfPCell ConcreteworkCell(RFIDocumentModel objModel)
        {
            RFIDocConcrete obj = new RFIDocConcrete();

            PdfPTable tblRoot = new PdfPTable(1);

            #region ---- tbl1 -----
            PdfPTable tbl1 = new PdfPTable(4);
            tbl1.HorizontalAlignment = 0;
            tbl1.WidthPercentage = 100;
            tbl1.SetWidths(new float[] { 2, 2, 2, 4 });

            PdfPCell c11 = new PdfPCell(new Phrase("BRIDGES", calibri_7));
            c11.Border = CellFullBorder();
            c11.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl1.AddCell(c11);
            PdfPCell c12 = new PdfPCell(new Phrase("BUILDING", calibri_7));
            c12.Border = CellFullBorder();
            c12.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl1.AddCell(c12);
            PdfPCell c13 = new PdfPCell(new Phrase("PLATFORM", calibri_7));
            c13.Border = CellFullBorder();
            c13.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl1.AddCell(c13);
            PdfPCell C14 = new PdfPCell(new Phrase("", calibri_7));
            C14.Border = Rectangle.LEFT_BORDER | Rectangle.RIGHT_BORDER | Rectangle.TOP_BORDER;
            C14.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl1.AddCell(C14);

            PdfPCell c21 = new PdfPCell(new Phrase(obj.Bridges, calibri_7));
            c21.Border = CellFullBorder();
            c21.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl1.AddCell(c21);
            PdfPCell c22 = new PdfPCell(new Phrase(obj.Building, calibri_7));
            c22.Border = CellFullBorder();
            c22.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl1.AddCell(c22);
            PdfPCell c23 = new PdfPCell(new Phrase(obj.Platform, calibri_7));
            c23.Border = CellFullBorder();
            c23.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl1.AddCell(c23);
            PdfPCell C24 = new PdfPCell(new Phrase("", calibri_7));
            C24.Border = Rectangle.LEFT_BORDER | Rectangle.RIGHT_BORDER | Rectangle.BOTTOM_BORDER;
            C24.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl1.AddCell(C24);

            tblRoot.AddCell(new PdfPCell(tbl1));
            #endregion ---- tbl1 -----

            #region ---- tbl2 ----
            PdfPTable tbl2A = new PdfPTable(2);
            tbl2A.HorizontalAlignment = 0;
            tbl2A.WidthPercentage = 100;
            tbl2A.SetWidths(new float[] { 6, 4 });

            #region --- row headings ----
            PdfPCell c2A11 = new PdfPCell(new Phrase("Concrete (As per IS: 456)", calibri_7b));
            c2A11.Border = CellFullBorder();
            c2A11.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2A.AddCell(c2A11);
            PdfPCell c2A12 = new PdfPCell(new Phrase("Frequency (As per IS: 456)", calibri_7b));
            c2A12.Border = CellFullBorder();
            c2A12.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2A.AddCell(c2A12);
            #endregion --- row headings ----

            #region ---- Left cell table ----
            //BaseFont bf = BaseFont.CreateFont("", BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
            //Font calibri_7e = new Font(bf, 7);

            PdfPTable tbl2B = new PdfPTable(6);
            tbl2B.HorizontalAlignment = 0;
            tbl2B.WidthPercentage = 100;
            tbl2B.SetWidths(new float[] { 1.5f, 1.5f, 2f, 1.5f, 1.5f, 2f });

            PdfPCell cb1 = new PdfPCell(new Phrase("Grade", calibri_7b));
            cb1.Border = CellFullBorder();
            cb1.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cb1);
            PdfPCell cb2 = new PdfPCell(new Phrase("Pumpable", calibri_7b));
            cb2.Border = CellFullBorder();
            cb2.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cb2);
            PdfPCell cb3 = new PdfPCell(new Phrase("Non\nPumpable", calibri_7b));
            cb3.Border = CellFullBorder();
            cb3.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cb3);
            PdfPCell cb4 = new PdfPCell(new Phrase("Grade", calibri_7b));
            cb4.Border = CellFullBorder();
            cb4.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cb4);
            PdfPCell cb5 = new PdfPCell(new Phrase("Pumpable", calibri_7b));
            cb5.Border = CellFullBorder();
            cb5.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cb5);
            PdfPCell cb6 = new PdfPCell(new Phrase("Non\nPumpable", calibri_7b));
            cb6.Border = CellFullBorder();
            cb6.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cb6);

            PdfPCell cb11 = new PdfPCell(new Phrase("M-10", calibri_7));
            cb11.Border = CellFullBorder();
            cb11.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cb11);
            PdfPCell cb21 = new PdfPCell(new Phrase("75\u00B125", calibri_7));
            cb21.Border = CellFullBorder();
            cb21.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cb21);
            PdfPCell cb31 = new PdfPCell(new Phrase("50\u00B125", calibri_7));
            cb31.Border = CellFullBorder();
            cb31.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cb31);
            PdfPCell cb41 = new PdfPCell(new Phrase("M-35", calibri_7));
            cb41.Border = CellFullBorder();
            cb41.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cb41);
            PdfPCell cb51 = new PdfPCell(new Phrase("100\u00B125", calibri_7));
            cb51.Border = CellFullBorder();
            cb51.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cb51);
            PdfPCell cb61 = new PdfPCell(new Phrase("75\u00B125", calibri_7));
            cb61.Border = CellFullBorder();
            cb61.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cb61);

            PdfPCell cc11 = new PdfPCell(new Phrase("M-20", calibri_7));
            cc11.Border = CellFullBorder();
            cc11.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cc11);
            PdfPCell cc21 = new PdfPCell(new Phrase("75\u00B125", calibri_7));
            cc21.Border = CellFullBorder();
            cc21.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cc21);
            PdfPCell cc31 = new PdfPCell(new Phrase("50\u00B125", calibri_7));
            cc31.Border = CellFullBorder();
            cc31.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cc31);
            PdfPCell cc41 = new PdfPCell(new Phrase("M-35(pilling)", calibri_7));
            cc41.Border = CellFullBorder();
            cc41.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cc41);
            PdfPCell cc51 = new PdfPCell(new Phrase("175\u00B125", calibri_7));
            cc51.Border = CellFullBorder();
            cc51.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cc51);
            PdfPCell cc61 = new PdfPCell(new Phrase("150\u00B125", calibri_7));
            cc61.Border = CellFullBorder();
            cc61.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cc61);

            PdfPCell cd11 = new PdfPCell(new Phrase("M-25", calibri_7));
            cd11.Border = CellFullBorder();
            cd11.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cd11);
            PdfPCell cd21 = new PdfPCell(new Phrase("100\u00B125", calibri_7));
            cd21.Border = CellFullBorder();
            cd21.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cd21);
            PdfPCell cd31 = new PdfPCell(new Phrase("75\u00B125", calibri_7));
            cd31.Border = CellFullBorder();
            cd31.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cd31);
            PdfPCell cd41 = new PdfPCell(new Phrase("M-40", calibri_7));
            cd41.Border = CellFullBorder();
            cd41.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cd41);
            PdfPCell cd51 = new PdfPCell(new Phrase("100\u00B125", calibri_7));
            cd51.Border = CellFullBorder();
            cd51.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cd51);
            PdfPCell cd61 = new PdfPCell(new Phrase("75\u00B125", calibri_7));
            cd61.Border = CellFullBorder();
            cd61.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cd61);

            PdfPCell ce11 = new PdfPCell(new Phrase("M-30", calibri_7));
            ce11.Border = CellFullBorder();
            ce11.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(ce11);
            PdfPCell ce21 = new PdfPCell(new Phrase("100\u00B125", calibri_7));
            ce21.Border = CellFullBorder();
            ce21.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(ce21);
            PdfPCell ce31 = new PdfPCell(new Phrase("75\u00B125", calibri_7));
            ce31.Border = CellFullBorder();
            ce31.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(ce31);
            PdfPCell ce41 = new PdfPCell(new Phrase("M-45", calibri_7));
            ce41.Border = CellFullBorder();
            ce41.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(ce41);
            PdfPCell ce51 = new PdfPCell(new Phrase("100\u00B125", calibri_7));
            ce51.Border = CellFullBorder();
            ce51.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(ce51);
            PdfPCell ce61 = new PdfPCell(new Phrase("75\u00B125", calibri_7));
            ce61.Border = CellFullBorder();
            ce61.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(ce61);

            tbl2A.AddCell(new PdfPCell(tbl2B));
            #endregion ---- Left cell table ----

            #region --- right side cell ----
            PdfPCell ctbl2Aright = new PdfPCell();
            ctbl2Aright.AddElement(new Phrase("1-5m3: 01 set", calibri_7));
            ctbl2Aright.AddElement(new Phrase("6-15m3: 02 set", calibri_7));
            ctbl2Aright.AddElement(new Phrase("16-30m3: 03 set", calibri_7));
            ctbl2Aright.AddElement(new Phrase("31-50m3: 04 set", calibri_7));
            ctbl2Aright.AddElement(new Phrase(">50m3: 4+1 additional set for every 50m\u00B3", calibri_7));
            // ctbl2Aright.AddElement(new Phrase("\n", calibri_7));
            tbl2A.AddCell(ctbl2Aright);
            #endregion --- right side cell -----

            tblRoot.AddCell(new PdfPCell(tbl2A));
            #endregion

            return new PdfPCell(tblRoot);
        }

        #endregion

        #region ---- Sheet 4 ----        
        /// <summary>
        /// Pways the cell.
        /// </summary>
        /// <returns></returns>
        /// <exception cref="NotImplementedException"></exception>
        internal PdfPCell PwayCell(RFIDocumentModel objModel)
        {
            RFIDocConcrete obj = new RFIDocConcrete();

            PdfPTable tblRoot = new PdfPTable(1);
            PdfPCell croot1 = new PdfPCell(new Phrase("P.WAY:", calibri_7b));
            croot1.Border = CellFullBorder();
            croot1.HorizontalAlignment = Element.ALIGN_LEFT;
            tblRoot.AddCell(croot1);

            #region ---- tbl2 ----
            PdfPTable tbl2A = new PdfPTable(2);
            tbl2A.HorizontalAlignment = 0;
            tbl2A.WidthPercentage = 100;
            tbl2A.SetWidths(new float[] { 6, 4 });

            #region --- row headings ----
            Phrase ph1 = new Phrase("Gradiation: ", calibri_7b);
            ph1.Add(new Chunk("As per Clause no.2.3.1 in GE-01", calibri_7));
            PdfPCell c2A11 = new PdfPCell(ph1);
            c2A11.Border = CellFullBorder();
            c2A11.HorizontalAlignment = Element.ALIGN_LEFT;
            tbl2A.AddCell(c2A11);

            Phrase ph2 = new Phrase("Stack Measurement: ", calibri_7b);
            ph2.Add(new Chunk("As per Clause no. 4.1 in GE-01", calibri_7));
            PdfPCell c2A12 = new PdfPCell(ph2);
            c2A12.Border = CellFullBorder();
            c2A12.HorizontalAlignment = Element.ALIGN_LEFT;
            tbl2A.AddCell(c2A12);
            #endregion --- row headings ----

            #region ---- Left cell table ----
            //BaseFont bf = BaseFont.CreateFont("", BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
            //Font calibri_7e = new Font(bf, 7);

            PdfPTable tbl2B = new PdfPTable(3);
            tbl2B.HorizontalAlignment = 0;
            tbl2B.WidthPercentage = 100;
            tbl2B.SetWidths(new float[] { 4, 4, 2 });

            PdfPCell cb1 = new PdfPCell(new Phrase("Sieve", calibri_7b));
            cb1.Border = CellFullBorder();
            cb1.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cb1);
            PdfPCell cb2 = new PdfPCell(new Phrase("Limits", calibri_7b));
            cb2.Border = CellFullBorder();
            cb2.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cb2);
            PdfPCell cb3 = new PdfPCell(new Phrase("Frequency", calibri_7b));
            cb3.Border = CellFullBorder();
            cb3.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cb3);


            PdfPCell cb11 = new PdfPCell(new Phrase("65mm", calibri_7));
            cb11.Border = CellFullBorder();
            cb11.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cb11);
            PdfPCell cb21 = new PdfPCell(new Phrase("95-100", calibri_7));
            cb21.Border = CellFullBorder();
            cb21.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cb21);
            PdfPCell cb31 = new PdfPCell(new Phrase("one\nfor\nevery\n100m\u00B3", calibri_7));
            cb31.Border = CellFullBorder();
            cb31.Rowspan = 3;
            cb31.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cb31);

            PdfPCell cb41 = new PdfPCell(new Phrase("40mm", calibri_7));
            cb41.Border = CellFullBorder();
            cb41.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cb41);
            PdfPCell cb51 = new PdfPCell(new Phrase("40-60", calibri_7));
            cb51.Border = CellFullBorder();
            cb51.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cb51);


            PdfPCell cc11 = new PdfPCell(new Phrase("20mm", calibri_7));
            cc11.Border = CellFullBorder();
            cc11.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cc11);
            PdfPCell cc21 = new PdfPCell(new Phrase("0-2", calibri_7));
            cc21.Border = CellFullBorder();
            cc21.HorizontalAlignment = Element.ALIGN_CENTER;
            tbl2B.AddCell(cc21);



            tbl2A.AddCell(new PdfPCell(tbl2B));
            #endregion ---- Left cell table ----

            #region --- right side cell ----
            PdfPTable tOL = new PdfPTable(2);
            tOL.HorizontalAlignment = 0;
            tOL.WidthPercentage = 100;
            tOL.SetWidths(new float[] { 2, 8 });

            PdfPCell la1 = new PdfPCell(new Phrase("1. Quantity: ", calibri_7b));
            la1.Border = CellNoBorder();
            la1.HorizontalAlignment = Element.ALIGN_LEFT;
            tOL.AddCell(la1);
            PdfPCell la2 = new PdfPCell(new Phrase("Not less than 30m\u00B3", calibri_7));
            la2.Border = CellNoBorder();
            la2.HorizontalAlignment = Element.ALIGN_LEFT;
            tOL.AddCell(la2);

            PdfPCell lb1 = new PdfPCell(new Phrase("2. Height: ", calibri_7b));
            lb1.Border = CellNoBorder();
            lb1.HorizontalAlignment = Element.ALIGN_LEFT;
            tOL.AddCell(lb1);
            PdfPCell lb2 = new PdfPCell(new Phrase("1.00m to 2.00m", calibri_7));
            lb2.Border = CellNoBorder();
            lb2.HorizontalAlignment = Element.ALIGN_LEFT;
            tOL.AddCell(lb2);

            PdfPCell lc1 = new PdfPCell(new Phrase("3. Width: ", calibri_7b));
            lc1.Border = CellNoBorder();
            lc1.HorizontalAlignment = Element.ALIGN_LEFT;
            tOL.AddCell(lc1);
            PdfPCell lc2 = new PdfPCell(new Phrase("Not less than 1.00m", calibri_7));
            lc2.Border = CellNoBorder();
            lc2.HorizontalAlignment = Element.ALIGN_LEFT;
            tOL.AddCell(lc2);


            PdfPCell ctbl2Aright = new PdfPCell(tOL);
            tbl2A.AddCell(ctbl2Aright);
            #endregion --- right side cell -----

            tblRoot.AddCell(new PdfPCell(tbl2A));
            #endregion

            return new PdfPCell(tblRoot);
        }
        #endregion ---- Sheet 4 ----

        #region ---- Common sheet elements ----

        #region ---- Common header nested tabe Cell ----
        /// <summary>
        /// Gets the header cell.
        /// </summary>
        /// <returns></returns>
        internal PdfPCell GetHeaderCell(RFIDocumentModel oModel, RFIDocCommonHeader objHeader)
        {
            #region -- for demo test ----
            //objHeader.ProjectName = "CONSTRUCTION OF xyz WORK, abc WORK, PROTECTION WORK OF SLOPE OF BANK, BUILDINGS, SITE FACILITIES, GENERAL ELECTRICAL WORKS IN SECTION ";
            //objHeader.ClientName = "ClientName";
            //objHeader.PMC = "M/S CONSULTANTS";
            //objHeader.Contractor = "M/s. contractor Infrastructure";
            //objHeader.BillNo = "1";
            //objHeader.BOQItemNo = "boq1";
            //objHeader.DateOfSubmission = "02/05/2020";
            //objHeader.RFINo = "RFINo001";
            #endregion

            PdfPTable mainCellTable = new PdfPTable(1);

            PdfPCell cellTitle = new PdfPCell(new Phrase("REQUEST FOR INSPECTION", calibriTitle));
            cellTitle.PaddingBottom = 5f;
            cellTitle.Border = Rectangle.NO_BORDER;
            cellTitle.HorizontalAlignment = Element.ALIGN_CENTER;
            mainCellTable.AddCell(cellTitle);

            //---- Project Details ----
            PdfPCell ProjectCell = new PdfPCell(new Phrase("PROJECT: " + objHeader.ProjectName.Trim(), calibri_7));
            ProjectCell.PaddingBottom = 5f;
            ProjectCell.Border = Rectangle.NO_BORDER;
            ProjectCell.HorizontalAlignment = Element.ALIGN_LEFT;
            mainCellTable.AddCell(ProjectCell);

            // ---- PROJECT OTHER DETAILS ----
            #region ---- Project other detail table without border
            PdfPTable headertable1 = new PdfPTable(3);
            headertable1.DefaultCell.Border = 0;

            PdfPCell clientCell = new PdfPCell(new Phrase("Client   : " + objHeader.ClientName.Trim(), calibri_7));
            clientCell.Border = 0;
            clientCell.HorizontalAlignment = Element.ALIGN_LEFT;
            headertable1.AddCell(clientCell);

            PdfPCell pmcCell = new PdfPCell(new Phrase("PMC    : " + objHeader.ClientName.Trim(), calibri_7));
            pmcCell.Border = 0;
            pmcCell.HorizontalAlignment = Element.ALIGN_LEFT;
            headertable1.AddCell(pmcCell);

            PdfPCell contractorCell = new PdfPCell(new Phrase("Contractor : " + objHeader.ClientName.Trim(), calibri_7));
            contractorCell.Border = 0;
            contractorCell.HorizontalAlignment = Element.ALIGN_LEFT;
            headertable1.AddCell(contractorCell);

            PdfPCell table1Cell = new PdfPCell(headertable1);
            table1Cell.PaddingBottom = 5f;
            table1Cell.Border = 0;
            mainCellTable.AddCell(table1Cell);
            #endregion

            #region ---- RFI info tble ----
            PdfPTable headertable2 = new PdfPTable(4);
            headertable2.HorizontalAlignment = 0;
            headertable2.WidthPercentage = 100;
            headertable2.SetWidths(new float[] { 60f, 50f, 40f, 30f });  // then set the column's __relative__ widths

            PdfPCell rfNoCell = new PdfPCell(new Phrase("RFI No: " + objHeader.RFINo, calibri_7));
            rfNoCell.Border = CellFullBorder();
            rfNoCell.HorizontalAlignment = Element.ALIGN_LEFT;
            headertable2.AddCell(rfNoCell);

            PdfPCell DateCell = new PdfPCell(new Phrase("Date of Submission: " + objHeader.DateOfSubmission, calibri_7));
            DateCell.Border = CellFullBorder();
            DateCell.HorizontalAlignment = Element.ALIGN_LEFT;
            headertable2.AddCell(DateCell);

            PdfPCell billCell = new PdfPCell(new Phrase("Bill No: " + objHeader.BillNo, calibri_7));
            billCell.Border = CellFullBorder();
            billCell.HorizontalAlignment = Element.ALIGN_LEFT;
            headertable2.AddCell(billCell);

            PdfPCell BoqCell = new PdfPCell(new Phrase("BOQ item No: " + objHeader.BOQItemNo, calibri_7));
            BoqCell.Border = CellFullBorder();
            BoqCell.HorizontalAlignment = Element.ALIGN_LEFT;
            headertable2.AddCell(BoqCell);

            PdfPCell table2Cell = new PdfPCell(headertable2);
            mainCellTable.AddCell(table2Cell);
            #endregion

            mainCellTable.AddCell(GetCommonInstructionCell());

            return new PdfPCell(mainCellTable);
        }
        #endregion ---- Common header nested tabe Cell ----

        #region ---- common Inspection description cell ----        
        /// <summary>
        /// Gets the inspection desc cell.
        /// </summary>
        /// <param name="objModel"></param>
        /// <returns></returns>
        internal PdfPCell GetInspectionDescCell(RFIDocumentModel objModel)
        {
            RFIDocInspectionDescription objRfiDoc = new RFIDocInspectionDescription();

            objRfiDoc.SectionOrChainage = "";
            objRfiDoc.RHS_LHS = objModel.WorkSide;
            objRfiDoc.Resources = "";
            objRfiDoc.WorkDescription = "";
            objRfiDoc.InspectionDateTime = "";
            objRfiDoc.Inspection_ContarctorName = objModel.Contractor;
            objRfiDoc.Inspection_ContarctorDateTime = objModel.InspDate == null ? "" : ((DateTime)objModel.InspDate).ToString("dd-MMM-yyyy");
            objRfiDoc.Inspection_ClientPMCName = objModel.AssignToPMCName;
            objRfiDoc.Inspection_ClientPMCDateTime = objModel.InspDate == null ? "" : ((DateTime)objModel.InspDate).ToString("dd-MMM-yyyy");

            #region ---- Demo model ----
            //objRfiDoc.SectionOrChainage = "Ex Data";
            //objRfiDoc.RHS_LHS = "Ex Demo Data";
            //objRfiDoc.Resources = "Ex Demo Data";
            //objRfiDoc.WorkDescription = "Ex Demo Data";
            //objRfiDoc.InspectionDateTime = "Ex Demo Data";
            //objRfiDoc.Inspection_ContarctorName = "Ex Demo Data";
            //objRfiDoc.Inspection_ContarctorDateTime = "Ex Demo Data";
            //objRfiDoc.Inspection_ClientPMCName = "Ex Demo Data";
            //objRfiDoc.Inspection_ClientPMCDateTime = "Ex Demo Data";
            #endregion

            PdfPTable tblSh1MainT2 = new PdfPTable(2);
            tblSh1MainT2.HorizontalAlignment = 0;
            tblSh1MainT2.WidthPercentage = 100;
            tblSh1MainT2.SetWidths(new float[] { 5, 1 });

            #region ---- Leftside Cell of sh1 table2 ----
            PdfPTable tblLeftC = new PdfPTable(2);
            tblLeftC.HorizontalAlignment = 0;
            //tblLeftC.WidthPercentage = 100;
            tblLeftC.SetWidths(new float[] { 4, 3 });

            PdfPCell CtblLeftCR1C1 = new PdfPCell(new Phrase("1. Section/Chainage : " + objRfiDoc.SectionOrChainage, calibri_7));
            CtblLeftCR1C1.Border = CellFullBorder();
            CtblLeftCR1C1.HorizontalAlignment = Element.ALIGN_LEFT;
            tblLeftC.AddCell(CtblLeftCR1C1);

            PdfPCell CtblLeftCR1C2 = new PdfPCell(new Phrase("RHS/LHS : " + objRfiDoc.RHS_LHS, calibri_7));
            CtblLeftCR1C2.Border = CellFullBorder();
            CtblLeftCR1C2.HorizontalAlignment = Element.ALIGN_LEFT;
            tblLeftC.AddCell(CtblLeftCR1C2);

            PdfPCell CtblLeftCR2C1 = new PdfPCell(new Phrase("2. Brief Description of work : " + objRfiDoc.WorkDescription, calibri_7));
            CtblLeftCR2C1.Border = CellFullBorder();
            CtblLeftCR2C1.Colspan = 2;
            CtblLeftCR2C1.PaddingBottom = 30f;
            CtblLeftCR2C1.HorizontalAlignment = Element.ALIGN_LEFT;
            tblLeftC.AddCell(CtblLeftCR2C1);

            PdfPCell CtblLeftCR3C1 = new PdfPCell(new Phrase("3. Inspection Date & Time : ", calibri_7));
            CtblLeftCR3C1.Border = CellFullBorder();
            CtblLeftCR3C1.Colspan = 2;
            CtblLeftCR3C1.HorizontalAlignment = Element.ALIGN_LEFT;
            tblLeftC.AddCell(CtblLeftCR3C1);

            PdfPCell CtblLeftCR4C1 = new PdfPCell();
            CtblLeftCR4C1.AddElement(new Phrase("For contractor ", calibri_7));
            CtblLeftCR4C1.AddElement(new Phrase("\n", calibri_7));
            CtblLeftCR4C1.AddElement(new Phrase("Name & Designation : " + objRfiDoc.Inspection_ContarctorName, calibri_7));
            CtblLeftCR4C1.AddElement(new Phrase("\n", calibri_7));
            CtblLeftCR4C1.AddElement(new Phrase("Date & Time : " + objRfiDoc.Inspection_ContarctorDateTime, calibri_7));
            CtblLeftCR4C1.AddElement(new Phrase("\n", calibri_7));
            tblLeftC.AddCell(CtblLeftCR4C1);

            PdfPCell CtblLeftCR4C2 = new PdfPCell();
            CtblLeftCR4C2.AddElement(new Phrase("For Client/PMC ", calibri_7));
            CtblLeftCR4C2.AddElement(new Phrase("\n", calibri_7));
            CtblLeftCR4C2.AddElement(new Phrase("Name : " + objRfiDoc.Inspection_ClientPMCName, calibri_7));
            CtblLeftCR4C2.AddElement(new Phrase("\n", calibri_7));
            CtblLeftCR4C2.AddElement(new Phrase("Date & Time : " + objRfiDoc.Inspection_ClientPMCDateTime, calibri_7));
            CtblLeftCR4C2.AddElement(new Phrase("\n", calibri_7));
            tblLeftC.AddCell(CtblLeftCR4C2);



            // add left side cell of sheet1 table 2
            PdfPCell CLefttblSh1MainT2 = new PdfPCell(tblLeftC);
            tblSh1MainT2.AddCell(CLefttblSh1MainT2);

            #endregion ---- Leftside Cell of sh1 table2 ----

            #region ---- Rightside Cell of sh1 table2 ----
            // Add right side cell of sheet1 table 2
            PdfPCell CRighttblSh1MainT2 = new PdfPCell(new Phrase("RESOURCES", calibri_7));
            CRighttblSh1MainT2.Border = CellFullBorder();
            CRighttblSh1MainT2.HorizontalAlignment = Element.ALIGN_CENTER;
            tblSh1MainT2.AddCell(CRighttblSh1MainT2);
            #endregion ---- Rightside Cell of sh1 table2 ----

            return new PdfPCell(tblSh1MainT2);
        }
        #endregion

        #region ---- Common Footer nested table cell ----
        /// <summary>
        /// Gets the footer cell.
        /// </summary>
        /// <returns></returns>
        internal PdfPCell GetFooterCell(RFIDocumentModel objModel)
        {
            RFIDocCommonFooter objFooter = new RFIDocCommonFooter();
            switch (objModel.InspStatus)
            {
                case "Approved":
                    objFooter.Inspection_Proceed = "Yes";
                    objFooter.Inspection_Comply = "-";
                    objFooter.Inspection_Redo = "-";
                    objFooter.isApproved = "Yes";
                    objFooter.NotApproved = "-";
                    break;
                case "Revise and Resubmit":
                    objFooter.Inspection_Proceed = "-";
                    objFooter.Inspection_Comply = "Yes";
                    objFooter.Inspection_Redo = "-";
                    objFooter.isApproved = "-";
                    objFooter.NotApproved = "-";
                    break;
                case "Rejected":
                    objFooter.Inspection_Proceed = "-";
                    objFooter.Inspection_Comply = "-";
                    objFooter.Inspection_Redo = "Yes";
                    objFooter.isApproved = "-";
                    objFooter.NotApproved = "Yes";
                    break;
                default:
                    objFooter.Inspection_Proceed = "-";
                    objFooter.Inspection_Comply = "-";
                    objFooter.Inspection_Redo = "-";
                    objFooter.isApproved = "-";
                    objFooter.NotApproved = "-";
                    break;
            }

            objFooter.PMCRecommendation = "";
            objFooter.ContractorRecommendation = "";
            objFooter.Enclosures = "";
            objFooter.RemarkByClient = "";

            #region ---- Demo model ----
            //objFooter.PMCRecommendation = "";
            //objFooter.ContractorRecommendation = "";
            //objFooter.Inspection_Proceed = "YES";
            //objFooter.Inspection_Comply = "-";
            //objFooter.Inspection_Redo = "-";
            //objFooter.Enclosures = "Ex demo";
            //objFooter.isApproved = "YES";
            //objFooter.NotApproved = "-";
            //objFooter.RemarkByClient = "Ex demo";
            #endregion

            PdfPTable mainCellTable = new PdfPTable(1);

            #region ---- Recommendation table ----
            PdfPTable tblRecomendation = new PdfPTable(2);
            PdfPCell CtblLeftCR1C1 = new PdfPCell(new Phrase("Comments/Recommendation of PMC's Representative : \n" + objFooter.PMCRecommendation, calibri_7));
            CtblLeftCR1C1.Border = CellFullBorder();
            CtblLeftCR1C1.PaddingBottom = 40f;
            CtblLeftCR1C1.HorizontalAlignment = Element.ALIGN_LEFT;
            tblRecomendation.AddCell(CtblLeftCR1C1);

            PdfPCell CtblLeftCR1C2 = new PdfPCell(new Phrase("Comments of Contractor's Representative : \n" + objFooter.ContractorRecommendation, calibri_7));
            CtblLeftCR1C2.Border = CellFullBorder();
            CtblLeftCR1C2.PaddingBottom = 40f;
            CtblLeftCR1C2.HorizontalAlignment = Element.ALIGN_LEFT;
            tblRecomendation.AddCell(CtblLeftCR1C2);

            PdfPCell CellRecommendation = new PdfPCell(tblRecomendation);
            mainCellTable.AddCell(CellRecommendation);
            #endregion ---- Recommendation table ----

            #region ---- Status table ----
            PdfPTable tblStatus = new PdfPTable(2);
            tblStatus.HorizontalAlignment = 0;
            tblStatus.WidthPercentage = 100;
            tblStatus.SetWidths(new float[] { 3, 4 });

            PdfPTable tblLeftStatus = new PdfPTable(2);
            tblLeftStatus.HorizontalAlignment = 0;
            tblLeftStatus.WidthPercentage = 100;
            tblLeftStatus.SetWidths(new float[] { 4, 1 });

            PdfPCell CLsR1C1 = new PdfPCell(new Phrase("Activity inspetion & status ", calibri_7));
            CLsR1C1.Border = CellNoBorder();
            CLsR1C1.Colspan = 2;
            CLsR1C1.HorizontalAlignment = Element.ALIGN_LEFT;
            tblLeftStatus.AddCell(CLsR1C1);

            PdfPCell empC1 = new PdfPCell(new Phrase("\n", calibri_7));
            empC1.Border = CellNoBorder();
            empC1.Colspan = 2;
            tblLeftStatus.AddCell(empC1);

            PdfPCell CLsR2C1 = new PdfPCell(new Phrase("Inspected & proceed with next activity ", calibri_7));
            CLsR2C1.Border = CellNoBorder();
            CLsR2C1.HorizontalAlignment = Element.ALIGN_LEFT;
            tblLeftStatus.AddCell(CLsR2C1);
            PdfPCell CLsR2C2 = new PdfPCell(new Phrase(objFooter.Inspection_Proceed, calibri_7));
            CLsR2C2.Border = CellFullBorder();
            CLsR2C2.HorizontalAlignment = Element.ALIGN_CENTER;
            tblLeftStatus.AddCell(CLsR2C2);
            PdfPCell empC2 = new PdfPCell(new Phrase("\n", calibri_7));
            empC2.Border = CellNoBorder();
            empC2.Colspan = 2;
            tblLeftStatus.AddCell(empC2);

            PdfPCell CLsR3C1 = new PdfPCell(new Phrase("Inspected & comply as per comment & re- ", calibri_7));
            CLsR3C1.Border = CellNoBorder();
            CLsR3C1.HorizontalAlignment = Element.ALIGN_LEFT;
            tblLeftStatus.AddCell(CLsR3C1);
            PdfPCell CLsR3C2 = new PdfPCell(new Phrase(objFooter.Inspection_Comply, calibri_7));
            CLsR3C2.Border = CellFullBorder();
            CLsR3C2.HorizontalAlignment = Element.ALIGN_CENTER;
            tblLeftStatus.AddCell(CLsR3C2);
            PdfPCell empC3 = new PdfPCell(new Phrase("\n", calibri_7));
            empC3.Border = CellNoBorder();
            empC3.Colspan = 2;
            tblLeftStatus.AddCell(empC3);

            PdfPCell CLsR4C1 = new PdfPCell(new Phrase("Inspected & redo the activity and re-submit ", calibri_7));
            CLsR4C1.Border = CellNoBorder();
            CLsR4C1.HorizontalAlignment = Element.ALIGN_LEFT;
            tblLeftStatus.AddCell(CLsR4C1);
            PdfPCell CLsR4C2 = new PdfPCell(new Phrase(objFooter.Inspection_Redo, calibri_7));
            CLsR4C2.Border = CellFullBorder();
            CLsR4C2.HorizontalAlignment = Element.ALIGN_CENTER;
            tblLeftStatus.AddCell(CLsR4C2);
            PdfPCell empC4 = new PdfPCell(new Phrase("\n", calibri_7));
            empC4.Border = CellNoBorder();
            empC4.Colspan = 2;
            tblLeftStatus.AddCell(empC4);

            PdfPCell CtblLeftCR4C1 = new PdfPCell(tblLeftStatus);
            //CtblLeftCR4C1.AddElement(new Phrase("Activity inspetion & status ", calibri_7));
            //CtblLeftCR4C1.AddElement(new Phrase("\n", calibri_7));
            //CtblLeftCR4C1.AddElement(new Phrase("Inspected & proceed with next activity", calibri_7));
            //CtblLeftCR4C1.AddElement(new Phrase("\n", calibri_7));
            //CtblLeftCR4C1.AddElement(new Phrase("Inspected & comply as per comment & re-", calibri_7));
            //CtblLeftCR4C1.AddElement(new Phrase("\n", calibri_7));
            //CtblLeftCR4C1.AddElement(new Phrase("Inspected & redo the activity and re-submit", calibri_7));
            //CtblLeftCR4C1.AddElement(new Phrase("\n", calibri_7));
            tblStatus.AddCell(CtblLeftCR4C1);

            #region--- Right side status table ----
            PdfPCell CtblRightCR4C1 = new PdfPCell(new Phrase("Encloser: Level sheet/ Field density reports/ Pre-concrete check list/ Test reports/ Other if any \n" + objFooter.Enclosures, calibri_7));
            CtblRightCR4C1.Border = CellFullBorder();
            CtblRightCR4C1.HorizontalAlignment = Element.ALIGN_LEFT;
            tblStatus.AddCell(CtblRightCR4C1);
            #endregion

            PdfPCell CellStatus = new PdfPCell(tblStatus);
            mainCellTable.AddCell(CellStatus);
            #endregion ---- Status table ----

            PdfPCell emptyCell = new PdfPCell();
            emptyCell.AddElement(new Phrase("\n", calibri_7));
            mainCellTable.AddCell(emptyCell);

            #region ---- Remark table ----
            PdfPTable tblRemark = new PdfPTable(2);
            tblRemark.HorizontalAlignment = 0;
            tblRemark.WidthPercentage = 100;
            tblRemark.SetWidths(new float[] { 4, 3 });

            PdfPTable tblRemarkL = new PdfPTable(4);
            tblRemarkL.WidthPercentage = 100;
            tblRemarkL.SetWidths(new float[] { 40f, 10f, 40f, 10f });

            PdfPCell CtblLeftRCR1C1 = new PdfPCell(new Phrase("Approved", calibri_7));
            CtblLeftRCR1C1.Border = CellFullBorder();
            CtblLeftRCR1C1.HorizontalAlignment = Element.ALIGN_RIGHT;
            tblRemarkL.AddCell(CtblLeftRCR1C1);

            PdfPCell CtblLeftRCR1C2 = new PdfPCell(new Phrase(objFooter.isApproved, calibri_7));
            CtblLeftRCR1C2.Border = CellFullBorder();
            CtblLeftRCR1C2.HorizontalAlignment = Element.ALIGN_CENTER;
            tblRemarkL.AddCell(CtblLeftRCR1C2);

            PdfPCell CtblLeftRCR1C3 = new PdfPCell(new Phrase("Not\nApproved", calibri_7));
            CtblLeftRCR1C3.Border = CellFullBorder();
            CtblLeftRCR1C3.HorizontalAlignment = Element.ALIGN_RIGHT;
            tblRemarkL.AddCell(CtblLeftRCR1C3);

            PdfPCell CtblLeftRCR1C4 = new PdfPCell(new Phrase(objFooter.NotApproved, calibri_7));
            CtblLeftRCR1C4.Border = CellFullBorder();
            CtblLeftRCR1C4.HorizontalAlignment = Element.ALIGN_CENTER;
            tblRemarkL.AddCell(CtblLeftRCR1C4);

            PdfPCell CtblLeftRCR2C1 = new PdfPCell();
            CtblLeftRCR2C1.Colspan = 4;
            CtblLeftRCR2C1.HorizontalAlignment = Element.ALIGN_CENTER;
            CtblLeftRCR2C1.VerticalAlignment = Element.ALIGN_BOTTOM;
            CtblLeftRCR2C1.AddElement(new Phrase("                                                PMC's Signature with Seal", calibri_7));
            CtblLeftRCR2C1.PaddingBottom = 5f;
            tblRemarkL.AddCell(CtblLeftRCR2C1);

            PdfPCell CLeftRemark = new PdfPCell(tblRemarkL);
            tblRemark.AddCell(CLeftRemark);

            PdfPCell CrightRemark = new PdfPCell();
            CrightRemark.AddElement(new Phrase("Remarks of client Representative \n " + objFooter.RemarkByClient, calibri_7));
            CrightRemark.AddElement(new Phrase("\n", calibri_7));
            CrightRemark.AddElement(new Phrase("\n", calibri_7));
            CrightRemark.AddElement(new Phrase("\n", calibri_7));
            CrightRemark.AddElement(new Phrase("                                  Signature with Seal", calibri_7));
            CrightRemark.PaddingBottom = 5f;
            tblRemark.AddCell(CrightRemark);

            PdfPCell cellRemark = new PdfPCell(tblRemark);
            mainCellTable.AddCell(cellRemark);
            #endregion ---- Remark table ----

            return new PdfPCell(mainCellTable);
        }
        #endregion ---- Common Footer nested table cell ----

        // We request you kindly arrange for the inspection/Survey checking approval of following materials
        #region ---- common instruction line in pdf ----
        /// <summary>
        /// Gets the common instruction cell.
        /// </summary>
        /// <returns></returns>
        internal PdfPCell GetCommonInstructionCell()
        {
            PdfPCell instructionCell = new PdfPCell(new Phrase("We request you kindly arrange for the inspection/Survey checking approval of following materials", calibri_7));
            //instructionCell.Border = CellNoBorder();
            instructionCell.HorizontalAlignment = Element.ALIGN_LEFT;
            instructionCell.PaddingBottom = 3f;
            return instructionCell;
        }
        #endregion

        #region ---- Cell border type ----
        /// <summary>
        /// Cells with no border.
        /// </summary>
        /// <returns></returns>
        internal int CellNoBorder()
        {
            return Rectangle.NO_BORDER;
        }

        /// <summary>
        /// Cells with full border.
        /// </summary>
        /// <returns></returns>
        internal int CellFullBorder()
        {
            return Rectangle.LEFT_BORDER | Rectangle.RIGHT_BORDER | Rectangle.TOP_BORDER | Rectangle.BOTTOM_BORDER;
        }
        #endregion
        #endregion ---- Common sheet elements ----

        #endregion ---- MultiPage ----
    }
}