@model RVNLMIS.Models.MilestoneModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .k-editor, .k-grid, .k-menu, .k-scheduler {
        border-radius: 0px !important;
    }

    .mb-3, .my-3 {
        margin-bottom: 5px !important;
    }
</style>

<!-- [ Main Content ] start -->
@*<script src="~/Scripts/kendo.all.min.js"></script>
    <script src="~/Scripts/kendo.aspnetmvc.min.js"></script>*@

<div class="modal fade" id="modalDelete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <input type="hidden" id="hiddenId" />
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 id="ModalTitle">Confirm Delete</h4>
            </div>
            <div class="modal-body">
                <h5 class="">
                    <i class="fa fa-trash-o text-red mr-1 fa-2x"></i>Are you sure you wish to delete selected record ?
                </h5>
            </div>
            <div class="modal-footer">
                <button class="btn btn-primary delete-confirm" id="btnDeleteConfirm">Ok</button>
                <button class="btn btn-default" data-dismiss="modal"> Cancel</button>
            </div>
        </div>
    </div>
</div>



<div class="modal fade" id="createMileModal" tabindex="-1" role="dialog" aria-labelledby="createSectionModal" aria-hidden="true" data-backdrop="static">
    <div id="createMileContainer" class="modal-dialog modal-lg">

    </div>
</div>

<div class="content_wrapper">
    <div class="">
        @*<div class="page-header">

            </div>*@
        <!-- [ Main Content ] start -->
        <div class="">

            @*<div class="col-sm-3">
                    <div id="SectionForms">
                        @Html.Partial("_PartialEditSection", new RVNLMIS.Models.SectionModel())
                    </div>
                </div>*@

            <!-- [ horizontal-layout ] start -->
            <div class="">
                <div class="card">

                    <div class="card-header">

                        <div class="row">
                            <div class="col-md-7">
                                <h5>Milestone Details</h5>
                            </div>



                            <div class="col-md-5">
                                <div class="full-width">
                                    <div class="input-group input-group-sm">
                                        <input type="search" id="txtSearch" class="form-control mr-4" title="Search by Mile Code"
                                               aria-label="Small" aria-describedby="inputGroup-sizing-sm" placeholder="Search by Mile name or code"  width="30%">


                                        <button type="submit" class="btn btn-sm waves-effect waves-light btn-outline-primary mr-2" href="javascript:void()" data-url="@Url.Action("_AddEditMileStone", "Milestone")" value="Save" id="btnCreateMile" title="Add Section"><i class="fas fa-plus"></i> Add</button>

                                    </div>
                                </div>
                            </div>



                        </div>
                    </div>
                    <div class="card-body">
                        <div class="table table-condensed" id="KendoHeight">

                            @(Html.Kendo().Grid<RVNLMIS.DAC.MilestoneView>()
                            .Name("MilestoneGrid")
                            .Columns(columns =>
                            {

                            columns.Bound(c => c.PrimaMileCode).HtmlAttributes(new { style = "text-align:center" })
                            .HeaderHtmlAttributes(new { style = "text-align:center" }).Width("100").Title("Code");


                            columns.Bound(c => c.MileName).HtmlAttributes(new { style = "text-align:center", title = "#= MileName #" })
                            .HeaderHtmlAttributes(new { style = "text-align:center" }).Title("Mile Name").Width("200");



                            columns.Bound(c => c.MilePlanDate).HtmlAttributes(new { style = "text-align:center" }).Format("{0:dd-MMM-yyyy}")
                            .HeaderHtmlAttributes(new { style = "text-align:center" }).Width("100").Title("Mile Paln Date");


                            columns.Bound(c => c.ContractMonitor).HtmlAttributes(new { style = "text-align:center" })
                            .HeaderHtmlAttributes(new { style = "text-align:center" }).Width("200").Title("Contract Monitor");

                           
                            columns.Bound(c => c.Revision).HtmlAttributes(new { style = "text-align:center" })
                            .HeaderHtmlAttributes(new { style = "text-align:center" }).Title("Revision").Width("50");

                           
                            columns.Bound(c => c.ProjectName).HtmlAttributes(new { style = "text-align:left", title = "#= ProjectName #" })
                        .HeaderHtmlAttributes(new { style = "text-align:left" }).Title("Project Name").Hidden();
                            columns.Bound(c => c.PackageName).HtmlAttributes(new { style = "text-align:left", title = "#= PackageName #" })
                            .HeaderHtmlAttributes(new { style = "text-align:left" }).Title("Package Name").Hidden();

                            columns.Template(@<text></text>).Title("Action").ClientTemplate("" +
"<button  data-url='/Milestone/EditMileByMileId/#=MilestoneId#' class='EditMile btn btn-xs btn-warning has-ripple'><i class='feather icon-edit'></i></button>" + "&nbsp;" + "<button type='button' id='btnDeleteSection' class='btn btn-xs btn-danger has-ripple DeleteMile' data-key='#=MilestoneId#' Title='Delete'><i class='feather icon-trash'></i></button>").HeaderHtmlAttributes(new { style = "text-align:left" }).Width("10%");
}).Scrollable(scr => scr.Height(400))
                .Events(events => events
                .DataBound("DataBound"))
                .Sortable()
                .Resizable(resize => resize.Columns(true))
                .HtmlAttributes(new { style = "height:600px;" })
                .Groupable()
                .Pageable(pageable => pageable
                                                                                                                                                                                                    .Refresh(true)
                            .PageSizes(true)
                            .PageSizes(new List<object> { 10, 20, 50, "all" }).Refresh(true)

                )
                .PersistSelection(true)
               .DataSource(dataSource => dataSource
.Ajax()
.Group(g => g.Add(c => c.ProjectName))
.Group(g => g.Add(c => c.PackageName))
                .Model(model => model.Id(p => p.MilestoneId))
                .Read(read => read.Action("Milestone_Details", "Milestone"))
                .PageSize(20))
                .NoRecords("No Record Found")

            )
                        </div>
                    </div>

                </div>
            </div>
            <!-- [ horizontal-layout ] end -->
        </div>
    </div>
    </div>





    @section scripts{
        
        <script>

           
            $("#btnCreateMile").on("click", function () {
                var url = $(this).data("url");
                $.get(url, function (data) {
                    $('#createMileContainer').html(data);
                    $('#createMileModal').modal('show');
                    BindOnChangeEvent();
                });
            });

            function getPrjId() {
                var dID = $("#ProjectId").data("kendoDropDownList").value();
                return { id: dID };
            }

            var rowNumber = 0;
            function resetRowNumber(e) {
                rowNumber = 0;
            }
            function renderNumber(data) {
                return ++rowNumber;
            }


            $(document).ready(function () {
                $("#PrimaMileCode").val($("#secCode").val());
                $("#PackageId").change(function () {
                    var dID = $("#PackageId").val();
                    $.get("/Milestone/GenerateMileCode", { id: dID },
                        function (data) {
                            $("#PrimaMileCode").val(data);
                        });
                });
            });
            function BindOnChangeEvent() {
                $("#ProjectId").change(function () {
                    GetPackageOnProjectSelect();
                });
                $("#PackageId").change(function () {
                    var dID = $("#PackageId").val();
                    $.get("/Milestone/GenerateMileCode", { id: dID },
                        function (data) {
                            $("#PrimaMileCode").val(data);
                        });
                });
            }

            function GetPackageOnProjectSelect() {
                var projectDataSource;
                var dID = $("#ProjectId").data("kendoDropDownList").value()
                $.get("/Milestone/Get_PackageByProject", { id: dID },
                    function (data) {

                        $("#PackageId").html('');
                        projectDataSource = data;
                        $("#PackageId").data("kendoDropDownList").setDataSource(new kendo.data.DataSource({ data: projectDataSource }));
                    });
            }

            function OnMileSuccess(response) {
                if (response == "Added Successfully") {
                    ClearViewAndGrid();
                    $.notify(response, { align: "right", verticalAlign: "top", type: "success", background: "#20D67B", color: "#fff" });
                }
                else if (response == "Updated Successfully") {
                    ClearViewAndGrid();
                    $.notify(response, { align: "right", verticalAlign: "top", type: "success", background: "#20D67B", color: "#fff" });
                }
                else if (response == "Already Exists") {
                    // ClearViewAndGrid();
                    $.notify(response, { align: "right", verticalAlign: "top", type: "warning", background: "#ff9933", color: "#ffffff" });
                }
                else {
                    $('#createMileContainer').html(response);
                    BindOnChangeEvent();
                    return;
                }
            }


            function DataBound() {
                rowNumber = 0;
                $(".EditMile").on("click", function (e) {
                    e.preventDefault();
                    var url = $(this).data("url");
                    $.get(url, function (data) {
                        //  $('#SectionForms').html(data);
                        $('#createMileContainer').html(data);
                        $('#createMileModal').modal('show');
                        setTimeout(function () {
                            BindOnChangeEvent();
                        }, 500);
                    });
                });

                $(".DeleteMile").on("click", function () {
                    console.info('DeleteUser called');
                    var Id = $(this).data("key");
                    $("#hiddenId").val(Id);
                    $("#modalDelete").modal({ backdrop: 'static', keyboard: false, position: 'center' });
                });

            }
            //#region ----Deleted group---
            $("#btnDeleteConfirm").on("click", function () {
                var id = $("#hiddenId").val();
                $.ajax({
                    url: '/Milestone/Delete/' + id,
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function () {
                        //Refresh Kendo Grid
                        $("#modalDelete").modal('hide');
                        $('#MilestoneGrid').data('kendoGrid').dataSource.read();
                        $('#MilestoneGrid').data('kendoGrid').refresh();
                        $.notify('Deleted Successfully', { align: "right", verticalAlign: "top", type: "success", background: "#ff0000", color: "#fff" });
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                    }
                });
            });

            //#endregion

            function ClearViewAndGrid() {
                location.reload();
            }

            $("#txtSearch").keyup(function () {
                var selecteditem = $('#txtSearch').val();
                var kgrid = $("#MilestoneGrid").data("kendoGrid");
                selecteditem = selecteditem.toUpperCase();
                var selectedArray = selecteditem.split(" ");
                if (selecteditem) {
                    var orfilter = { logic: "or", filters: [] };
                    var andfilter = { logic: "and", filters: [] };
                    $.each(selectedArray, function (i, v) {
                        if (v.trim() == "") {
                        }
                        else {
                            $.each(selectedArray, function (i, v1) {
                                if (v1.trim() == "") {
                                }
                                else {
                                    orfilter.filters.push({ field: "PrimaMileCode", operator: "contains", value: v1 },
                                     { field: "MileName", operator: "contains", value: v1 }

                                    );
                                    andfilter.filters.push(orfilter);
                                    orfilter = { logic: "or", filters: [] };
                                }

                            });
                        }
                    });
                    kgrid.dataSource.filter(andfilter);
                }
                else {
                    kgrid.dataSource.filter({});
                }
            });


        </script>
    }







