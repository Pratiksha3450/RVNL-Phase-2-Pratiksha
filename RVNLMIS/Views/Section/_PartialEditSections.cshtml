@model RVNLMIS.Models.SectionModel
@{
    Layout = null;
}
<div class="modal-content">
    <div class="modal-header">
        <h6 class="modal-title">Add / Update Section Details</h6>
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>


    </div>
    @using (Ajax.BeginForm("AddSectionDetails", "Section", null, new AjaxOptions { HttpMethod = "Post", OnSuccess = "OnSectionSuccess" }, new { @class = "form", @id = "Sectionform" }))
    {

        <div class="modal-body">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(mode => Model.SectionId)
            @Html.Hidden("secCode", (string)@ViewBag.Sectioncode)
            <div class="row">



                <div class="col-md-6" id="prjContainer">
                    <div class="form-group mb-3">
                        <label class="col-form-label-sm-user text-black-50" for="txtUserName">Project   @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })</label>

                        @*@Html.DropDownListFor(model => model.ProjectId, ViewBag.ProjectList as SelectList, "Select Project", new { @class = "form-control form-control-sm" })*@
                        @(Html.Kendo().DropDownListFor(model => model.ProjectId).OptionLabel("Select Project").Popup(p => p.AppendTo("#prjContainer")).Filter("contains").HtmlAttributes(new { @class = "form-control form-control-sm" }).BindTo(ViewBag.ProjectList as SelectList)
                        )
                    </div>
                </div>
                <div class="col-md-6" id="Pkgcontainer">
                    <div class="form-group mb-3">
                        <label class="col-form-label-sm-user text-black-50">
                            Package
                            @Html.ValidationMessageFor(model => model.PackageId, "", new { @class = "text-danger" })
                        </label>

                        @*@Html.DropDownListFor(model => model.PackageId, ViewBag.PackageList as SelectList, "Select Package", new { @class = "form-control form-control-sm" })*@
                        @(Html.Kendo().DropDownListFor(model => model.PackageId).Popup(p => p.AppendTo("#Pkgcontainer"))
                                 .Name("PackageId")
                                 .DataTextField("PackageName")
                                 .DataValueField("PackageId")
                                 .HtmlAttributes(new { style = "width:100%" })
                                 .Filter("contains").OptionLabel("Select Package")
                                 .DataSource(source =>
                                 {
                                     source.Read(read =>
                                     {
                                         read.Action("Get_PackageByProject", "Section").Data("getPrjId");//, new { id = 0 });
                                     })
                                          .ServerFiltering(true);
                                 })
                        )
                    </div>
                </div>


                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label class="col-form-label-sm-user text-black-50" for="txtSectionCode">Section Code (Ex: P01S1)@Html.ValidationMessageFor(model => model.SectionCode, "", new { @class = "text-danger" })</label>
                        @Html.EditorFor(model => model.SectionCode, new { htmlAttributes = new { @class = "form-control ", @type = "text", @placeholder = "Ex: P01S1", @readonly = "readonly" } })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label class="col-form-label-sm-user text-black-50" for="txtSectionName">Section Name @Html.ValidationMessageFor(model => model.SectionName, "", new { @class = "text-danger" })</label>
                        @Html.EditorFor(model => model.SectionName, new { htmlAttributes = new { @class = "form-control", @type = "text", @placeholder = "Enter Section name" } })
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label class="col-form-label-sm-user text-black-50" for="txtSectionStart">
                            Section Start @Html.ValidationMessageFor(model => model.SectionStarts, "", new { @class = "text-danger" })
                        </label>
                        @Html.EditorFor(model => model.SectionStarts, new { htmlAttributes = new { @class = "form-control", onkeydown = "return false",@type = "date" } })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label class="col-form-label-sm-user text-black-50" for="txtSectionFinish">
                            Section Finish @Html.ValidationMessageFor(model => model.SectionFinishs, "", new { @class = "text-danger" })
                        </label>
                        @Html.EditorFor(model => model.SectionFinishs, new { htmlAttributes = new { @class = "form-control", onkeydown = "return false",@type = "date" } })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label class="col-form-label-sm-user text-black-50" for="txtStartChaining">
                            Start Chainage @Html.ValidationMessageFor(model => model.StartChaining, "", new { @class = "text-danger" })
                        </label>
                        @Html.EditorFor(model => model.StartChaining, new { htmlAttributes = new { @class = "form-control", @type = "text", @placeholder = "Ex: 00+11", @maxlength = "12", onkeypress = "return Validate(event);", onpaste = "return false" } })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label class="col-form-label-sm-user text-black-50" for="txtEndChaining">
                            End Chainage @Html.ValidationMessageFor(model => model.EndChaining, "", new { @class = "text-danger" })
                        </label>
                        @Html.EditorFor(model => model.EndChaining, new { htmlAttributes = new { @class = "form-control", @type = "text", @placeholder = "Ex: 00+11", @maxlength = "12", onkeypress = "return Validate(event);", onpaste = "return false" } })
                    </div>
                </div>
            </div>

        </div>
        <div class="modal-footer">
            <div class="row">
                <div class="col-lg-12">

                    <button type="submit" class="btn btn-sm btn-theme pull-right">Save</button>
                </div>
            </div>
        </div>
    }

</div>