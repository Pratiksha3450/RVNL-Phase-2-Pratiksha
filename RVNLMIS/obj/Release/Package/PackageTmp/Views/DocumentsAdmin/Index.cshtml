@model IEnumerable<RVNLMIS.Models.DocumentModel>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutMain.cshtml";
}
<style type="text/css">
    /*#userlogs .card {
        margin-bottom: 10px;
    }*/

    .user_icon {
        height: 40px;
        width: 40px;
        padding: 12px;
        font-weight: 800;
        font-size: 16px;
        border-radius: 50%;
    }

    .DivImage {
        width: 500px;
    }

    body {
        overflow-x: hidden;
    }

    .pcoded-main-container {
        min-height: 85vh;
    }
</style>



<div id="userlogs">

    <!-- page contents -->

    <div class="card mb-2">
        <div class="card-body p-3">
            <div class="row">
                <div class="col-md-2" style="text-align:right">
                    <h6>Select User : </h6>
                </div>
                <div class="col-md-2">
                    @(Html.Kendo().DropDownList().Popup(p => p.AppendTo("#container"))
                            .Name("ddlUsers")
                            .DataTextField("UserName")
                            .DataValueField("UserId")
                            .HtmlAttributes(new { style = "width:100%", @class = "form-control form-control-sm" })
                            .Filter("contains").OptionLabel("Select User")
                            .DataSource(source =>
                            {
                            source.Read(read =>
                            {
                            read.Action("GetUserList", "DocumentsAdmin");
                            })
                            .ServerFiltering(true);
                            })
                       )
                </div>
                <div class="col-md-1" style="text-align:right">
                    <h6>From : </h6>
                </div>
                <div class="col-md-2">
                    <input type="date" class="form-control datepicker2" Value=@DateTime.Now.ToString("yyyy-MM-dd") id="txtFromDate">
                </div>
                <div class="col-md-1" style="text-align:right">
                    <h6 class="text-right">To : </h6>
                </div>
                <div class="col-md-2">

                    <input type="date" class="form-control datepicker2" Value=@DateTime.Now.ToString("yyyy-MM-dd") id="txtToDate">
                </div>
                <div class="col-md-2">
                    <button class="btn btn-sm btn_theme" id="btnSearch"> <i class="fas fa-search mr-1"></i> Search </button>
                    @if (Model.Any())
                    {
                        <button class="btn btn-sm btn_theme" id="btnDownload"> <i class="fas fa-download mr-1"></i> Download </button>

                    }
                    else
                    {
                        <button class="btn btn-sm btn_theme" style="visibility:hidden" id="btnDownload"> <i class="fas fa-download mr-1"></i> Download </button>
                    }


                </div>
            </div>
        </div>
    </div>
    <div id="DivDocListing">
        <div class="ticket-block">
            <div class="row">

                <div class="col">
                    <div class="card hd-body mb-2" style="background : #f9f0e0;">
                        <div class="row align-items-center">
                            <div class="col-2 left-icon border-right">
                                <div class="card-body">
                                    <b class="ml-5 pl-4">Date Added</b>

                                </div>
                            </div>
                            <div class="col-2 col-auto pr-0 left-icon border-right">
                                <div class="card-body pl-0 pr-0 pt-2 pb-2">

                                    <b class="pl-3">Added By</b>
                                </div>
                            </div>

                            <div class="col-2 border-right pr-0">
                                <div class="card-body inner-center">
                                    <b class="text-right">For</b>
                                </div>
                            </div>


                            <div class="col-5 border-right pr-0">
                                <div class="card-body inner-center">
                                    <b class="text-right">Document Name </b>
                                </div>
                            </div>
                            <div class="col-1 border-right pr-0">
                                <div class="card-body inner-center">
                                    <b class="ml-0 pl-0">File Size</b>
                                </div>
                            </div>





                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div id="DivLogs">
            @if (Model != null)
            {

                foreach (var item in Model)
                {
                    <div class="ticket-block">
                        <div class="row">

                            <div class="col">
                                <div class="card hd-body mb-2">
                                    <div class="row align-items-center">
                                        <div class="col-2 left-icon border-right">
                                            <div class="card-body">
                                                <b class="float-right ml-3 text-magenta">@Html.DisplayFor(modelItem => item.DocTime)</b>
                                                <b class="float-right">@Html.DisplayFor(modelItem => item.DocDate)</b>
                                            </div>
                                        </div>
                                        <div class="col-2 col-auto pr-0 left-icon border-right">
                                            <div class="card-body">

                                                <span class="text-right">@Html.DisplayFor(modelItem => item.Name)</span>
                                            </div>
                                        </div>

                                        <div class="col-2 border-right pr-0">
                                            <div class="card-body inner-center">
                                                <span class="text-right"> @Html.DisplayFor(modelItem => item.DocumnetType)</span>
                                            </div>
                                        </div>
                                        <div class="col-5 border-right pr-0">
                                            <div class="card-body inner-center">
                                                <div class="ticket-type-icon private mt-1 mb-1">
                                                    @if (item.Extention.ToString() == ".pdf")
                                                    {
                                                        <img src="~/Content/images/pdfIcn.png" />
                                                    }
                                                    else if (item.Extention.ToString() == ".xls" || item.Extention.ToString() == "xlsx")
                                                    {
                                                        <img src="~/Content/images/excelIcn.png" />
                                                    }
                                                    else if (item.Extention.ToString() == ".jpg" || item.Extention.ToString() == ".png" || item.Extention.ToString() == "jpeg" || item.Extention.ToString() == ".gif")
                                                    {
                                                        <img src="~/Content/images/imageIcn.png" />
                                                    }
                                                    else if (item.Extention.ToString() == ".doc" || item.Extention.ToString() == ".docx")
                                                    {
                                                        <img src="~/Content/images/wordIcn.png" />
                                                    }
                                                    else if (item.Extention.ToString() == ".rar" || item.Extention.ToString() == ".zip")
                                                    {
                                                        <img src="~/Content/images/rarImg.png" />
                                                    }
                                                    <a href=' @Html.DisplayFor(modelItem => item.FileFullName)' target="_blank" download="" title="Click here to Download the file">  @Html.DisplayFor(modelItem => item.FileName)</a>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-1 border-right pr-0">
                                            <div class="card-body inner-center">
                                                <div class="ticket-type-icon private mt-1 mb-1">

                                                    @Html.DisplayFor(modelItem => item.FileSize)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                }
            }

        </div>
    </div>
    <div id="DivImage" class="container text-center" style="background-color:white; height:550px!important; width:100%!important; display:none;">
        <br />
        <img src="~/Content/assetsNew/images/vector/nodata.jpg" class="img-fluid DivImage" alt="No Recods found" />
    </div>
</div>


@section scripts{


    <script>
        $("#DivImage").hide();
        (function () {
            if ($('#layout-sidenav').hasClass('sidenav-horizontal') || window.layoutHelpers.isSmallScreen()) {
                return;
            }
            try {
                window.layoutHelpers._getSetting("Rtl")
                window.layoutHelpers.setCollapsed(
                    localStorage.getItem('layoutCollapsed') === 'true',
                    false
                );
            } catch (e) { }
        })();
        $(function () {
            $('#layout-sidenav').each(function () {
                new SideNav(this, {
                    orientation: $(this).hasClass('sidenav-horizontal') ? 'horizontal' : 'vertical'
                });
            });
            $('body').on('click', '.layout-sidenav-toggle', function (e) {
                e.preventDefault();
                window.layoutHelpers.toggleCollapsed();
                if (!window.layoutHelpers.isSmallScreen()) {
                    try {
                        localStorage.setItem('layoutCollapsed', String(window.layoutHelpers.isCollapsed()));
                    } catch (e) { }
                }
            });
        });
        $(document).ready(function () {
            $("#pcoded").pcodedmenu({
                themelayout: 'horizontal',
                MenuTrigger: 'hover',
                SubMenuTrigger: 'hover',
            });
        });
    </script>

    <!-- /Horizontal Menu -->
    <!--  -->
    <script>
        $(window).on('load', function () {
            $('#tinymce-editor').trumbowyg({
                svgPath: '~/Content/assets/css/plugins/icons.svg',
                btns: [
                    ['viewHTML'],
                    ['undo', 'redo'],
                    ['formatting'],
                    ['strong', 'em', 'del'],
                    ['superscript', 'subscript'],
                    ['link'],
                    ['insertImage'],
                    ['unorderedList', 'orderedList'],
                    ['horizontalRule'],
                    ['removeformat'],
                    ['fullscreen']
                ]
            });
        });
        $(document).ready(function () {
            $(".show-timeline").click(function () {
                $(".q-view").addClass("active");
            });
            $(".overlay").click(function () {
                $(".q-view").removeClass("active");
            });
        });

        $(document).ready(function () {
            $(document).on('click', '[data-toggle="lightbox"]', function (event) {
                event.preventDefault();
                $(this).ekkoLightbox();
            });
        });

        $(document).ready(function () {
            $("#DivImage").hide();


            function formatDate(date) {
                var d = new Date(date),
                    month = '' + (d.getMonth() + 1),
                    day = '' + d.getDate(),
                    year = d.getFullYear();

                if (month.length < 2)
                    month = '0' + month;
                if (day.length < 2)
                    day = '0' + day;

                return [year, month, day].join('-');
            }


            var d = $("#txtFromDate").val();
            var ToD = new Date();
            var startDate = moment(d).clone().subtract(30, 'days');
            debugger;
            var currMonth = ToD.getMonth();
            var currentDate = ToD.getDate();
            var currYear = ToD.getFullYear();

            var endDate = new Date(currYear, currMonth, currentDate);
            $('#txtFromDate').val(formatDate(startDate));
              //  $('#txtFromDate').attr('min', formatDate(startDate));
                $('#txtToDate').attr('max', formatDate(endDate));



            var lstCount = '@ViewBag.ListData';
            if (lstCount > 0) {
                $("#DivDocListing").show();
                $("#DivImage").hide();


            }
            else {
                $("#DivDocListing").hide();
                $("#DivImage").show();
            }

            $("#btnSearch").click(function () {
                var formData = new FormData();
                formData.append("fromDate", $("#txtFromDate").val());
                formData.append("toDate", $("#txtToDate").val());
                formData.append("UserId", $("#ddlUsers").val());
                
                $.ajax({
                    url: '/DocumentsAdmin/GetDocumentDetails',
                    type: "POST",
                    cache: false,
                    contentType: false,
                    processData: false,
                    data: formData,
                    success: function (response) {
                        if ($.trim(response)) {
                            $("#DivLogs").html(response);
                            $("#btnDownload").css("visibility", "visible");
                            $("#DivDocListing").show();
                            $("#DivImage").hide();

                        }
                        else {
                            $("#DivLogs").html('');
                            $("#btnDownload").css("visibility", "none");
                            $.notify("No Records Found!", { align: "right", verticalAlign: "top", type: "danger", background: "#D8210F", color: "white", });
                            $("#DivDocListing").hide();
                            $("#DivImage").show();
                        }

                    }

                });
            });


            $("#btnDownload").click(function () {
                var FromDate =  $("#txtFromDate").val();
                var ToDate = $("#txtToDate").val();
                var UserId = $("#ddlUsers").val();
               
            $.ajax(
            {
                url: '@Url.Action("DownloadFiles", "DocumentsAdmin")',
                contentType: 'application/json; charset=utf-8',
                    datatype: 'json',
                    type: "GET",
                    data: { fromDate: FromDate, toDate: ToDate, UserId: UserId, mode: 'action' },
                    success: function (result) {
                        if (result.fileName != "") {

                            window.location.href = "@Url.RouteUrl(new
                                               {
                                                   Controller = "DocumentsAdmin", Action = "DownloadFiles" })/?fromDate=" + result.fromDate + "&toDate=" + result.toDate + "&UserId=" + result.UserId + "&mode=download";
                        }
                        else {
                            $.notify("No Files Found!", { align: "right", verticalAlign: "top", type: "danger", background: "#D8210F", color: "white", });
                        }
                }
            });
        });


      });
    </script>
    <!-- / -->
    <script src="~/Content/assets/js/analytics.js"></script>


    <!-- Show hide div on radio selection -->
    <script>

        function show1() {
            document.getElementById('div0').style.display = 'block';
            document.getElementById('div1').style.display = 'block';
            document.getElementById('div2').style.display = 'none';
            document.getElementById('div3').style.display = 'none';
        }
        function show2() {
            document.getElementById('div0').style.display = 'none';
            document.getElementById('div1').style.display = 'none';
            document.getElementById('div2').style.display = 'block';
            document.getElementById('div3').style.display = 'none';
        }
        function show3() {
            document.getElementById('div0').style.display = 'none';
            document.getElementById('div1').style.display = 'none';
            document.getElementById('div2').style.display = 'none';
            document.getElementById('div3').style.display = 'block';
        }
    </script>
    <!-- /Show hide div on radio selection -->
    <!-- Show hide div on ckeckbox selection -->
    <script>
        function show_enclosureform() {

            var customCheck1 = document.getElementById("customCheck1");
            var enclosureform = document.getElementById("enclosureform");

            if (customCheck1.checked) {
                enclosureform.style.display = "block";
            } else {
                enclosureform.style.display = "none";
            }
        }


        function show_inspectionform() {

            var customCheck2 = document.getElementById("addinspectiondetails");
            var inspectionform = document.getElementById("inspectionform");

            if (customCheck2.checked) {
                inspectionform.style.display = "block";
            } else {
                inspectionform.style.display = "none";
            }
        }
    </script>
    <script>
        //script to highlight current parent menu
        $(document).ready(function () {

            //Highlight parent menu : nav-item
            $('#liAdmin').addClass('nav-item pcoded-hasmenu active');


            //highlight parent menu by overriding pcoded-trigger script
            $(".nav-item").hover(
                function () {
                    $('#liAdmin').addClass('nav-item pcoded-hasmenu active');
                }, function () {
                    $('#liAdmin').addClass('nav-item pcoded-hasmenu active');
                }
            );


            //remove active class from other parent menus
            $('#liKpi').removeClass('active');
        });
    </script>

}
