@model RVNLMIS.Models.AutoCadViewerModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var instanceUrl = System.Configuration.ConfigurationManager.AppSettings["ServerPath"] as string;
    var CadUrl = System.Configuration.ConfigurationManager.AppSettings["CadUrl"] as string;
}
<style>
    iframe.testFrame {
        /*position: absolute;*/
        width: 100% !important;
        min-height: 600px;
    }

    .powered {
        display: none;
    }
</style>

<div class="content_wrapper">
    <div class="col-md-12">
        <div class="row">

            <div class="col-md-12 pl-1 pr-1">
                <div class="card">
                    <div class="card-header">
                        <div class="row">
                            <div class="col-md-2"> <h5> Autocad Doc Viewer </h5></div>
                            <div class="col-md-2">
                                <h5 class="float-right"> Select Package</h5>
                              
                            </div>
                            <div class="col-md-4">
                                <div class="col-xl-12 col-md-12">
                                    <div class="form-group">

                                        <div class="input-group input-group-sm " id="pkgContainer">
                                            @(Html.Kendo().DropDownListFor(m => m.PackageId).Popup(p => p.AppendTo("#pkgContainer"))
                                                                    .Name("drpPackage")
                                                                    .DataTextField("PackageName")
                                                                    .DataValueField("PackageId")
                                                                    .HtmlAttributes(new { style = "", @class = "form-control" })
                                                                    .Filter("contains").OptionLabel("Select Package")
                                                                    .DataSource(source =>
                                                                    {
                                                                        source.Read(read =>
                                                                    {
                                                                        read.Action("ServerFiltering_GetProducts", "Procurement");
                                                                    })
                                                                        .ServerFiltering(true);
                                                                    })
                                        )
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <button class="btn btn-sm btn-theme" id="btnGetCadDiagram"> Straight Line View </button>
                            </div>
                            <div class="col-md-2">
                                <h6>  <a class="text-muted" target="_blank" id="fileSelected"> <span class="btn btn-xs btn-info"> View in full screen</i></span></a>  </h6>
                            </div>
                        </div>
                        
                    </div>
                    <div class="card-body" id="Card2">
                        <div class="pl-1 pr1">
                            @*<iframe src="//beta.sharecad.org/cadframe/load?url=https://dev.primabi.com/uploads/test123.dxf" scrolling="no" class="testFrame" id="frame1"></iframe>*@
                            <iframe src='@(CadUrl)' class="testFrame" id="frame1"></iframe>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


</div>
<script>
    $(window).resize(function () {
        $('#Card1').height($(window).height() - 195);
        $('#Card2').height($(window).height() - 195);
    });
    $(window).trigger('resize');


    function getPkgId() {
            var dID = $("#drpPackage").data("kendoDropDownList").value();
            return { id: dID };
    }
     function GetPackageId() {
                return { pkgId: $("#drpPackages").val() }
            }

    $(window).trigger('resize');
     //var host = "https://beta.sharecad.org/", frame = "cadframe/load?url=";
     var host = '@(CadUrl)', uframe = "?url=";


        var reloadIframe = function (frame, src) {
            frame.src = src ? src : host + uframe;
            //$("#frame1").contents().find("#cadEditorX").text('lalalala');
         }


    $(document).ready(function () {

        $(function () {
            $("#btnGetCadDiagram").click(function () {
                $('#btnGetCadDiagram').attr('disabled', 'disabled');

                $("#fileSelected").text( "");
                var AutoCadViewerModel = {};
                AutoCadViewerModel.PackageId = $("#drpPackage").data("kendoDropDownList").value();
                AutoCadViewerModel.SectionId = 0;
                AutoCadViewerModel.EntityId = 0;
                AutoCadViewerModel.StartChainage = "";
                AutoCadViewerModel.EndChainage = "";
                console.log(AutoCadViewerModel);
                $.ajax({
                    type: "POST",
                    url: "/StraightLinePlot/LoadStraightLinePlot",
                    data: JSON.stringify(AutoCadViewerModel) ,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        $('#btnGetCadDiagram').removeAttr('disabled');
                        $('#btnGetCurveDiagram').removeAttr('disabled');
                        if (response == "0") {
                            $.notify('Technical Error, Please try again', { align: "right", verticalAlign: "top", type: "warning", background: "#ff9933", color: "#ffffff" });
                        }
                        if (response == "1") {
                            $.notify('Please select package!', { align: "right", verticalAlign: "top", type: "warning", background: "#ff9933", color: "#ffffff" });
                        }
                        else if (response=="Invalid Chainage") {
                            $.notify('Chainage you entered are invalid, Please enter valid one!', { align: "right", verticalAlign: "top", type: "warning", background: "#ff9933", color: "#ffffff" });
                        } else if (response =="nullChainage") {
                            $.notify('Start & end chainage must be filled!', { align: "right", verticalAlign: "top", type: "warning", background: "#ff9933", color: "#ffffff" });
                        }
                        else if (response=="Exception") {
                            $.notify('Technical Error, Please try again', { align: "right", verticalAlign: "top", type: "warning", background: "#ff9933", color: "#ffffff" });
                        }
                        else {
                            // $("#fileSelected").text(response.FileName);
                           // var packageid = response.FileName;
                            var urlBase = '@(instanceUrl+"/Uploads/StripChart/")' + response.PackageId+"/";
                            console.log(urlBase);
                            var src = host + uframe + urlBase + response.FileName;
                            $("#fileSelected").show();
                            $("#fileSelected").prop("href", src);
                            reloadIframe($("#frame1")[0], src);
                        }
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });
            });
        });

    });

</script>