@model RVNLMIS.Models.DataIssueModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<script src="~/Scripts/kendo.all.min.js"></script>
<script src="~/Scripts/kendo.aspnetmvc.min.js"></script>
<style>
    .k-editor, .k-grid, .k-menu, .k-scheduler {
        border-radius: 0px !important;
        font-size: smaller !important;
    }

    .col-form-label-sm-user {
        padding-top: calc(0.25rem + 1px);
        padding-bottom: calc(0.25rem + 1px);
        font-size: 12px;
        line-height: 1.5 !important;
    }

    .modal-xl {
        width: 95%!important;
    }

    .card {
        box-shadow: 0 2px 10px -1px rgba(69, 90, 100, 0.3);
        margin-bottom: 15px !important;
        transition: box-shadow 0.2s ease-in-out;
    }
     /*.card .card-block, .card .card-body {
        padding: 20px 20px;
    }*/
</style>
<div class="modal fade" id="UpdateStatusModel" tabindex="-1" role="dialog" aria-labelledby="UpdateStatusModel" aria-hidden="true" data-backdrop="static">
    <div id="UpdateStatusContainer" class="modal-dialog modal-xl "></div>
</div>
<div class="content_wrapper">
    <div class="row">


        <div class="col-sm-12 col-md-12 col-lg-3 pr-1">
            <div id="UserForms">
                @Html.Partial("_PartialAddIssue", new RVNLMIS.Models.DataIssueModel())
            </div>
        </div>
        <!-- [ horizontal-layout ] start -->
        <div class="col-sm-12 col-md-12 col-lg-9 pl-1">
            <div class="card">
                <div class="card-header">

                    <div class="row">
                        <div class="col-sm-12 col-md-8">
                            <h5>Data Issue Details </h5>
                            <p class="col-form-label-sm-user">
                            <span class='text-warning'><i class='fa fa-exclamation-triangle'></i></span> Assigned | 
                            <span class='text-info'><i class='fa fa-exclamation-triangle'></i></span> Resolved by User |
                            <span class='text-danger'><i class='fa fa-exclamation-triangle'></i></span> Reassigned | 
                            <span class='text-success'><i class='fa fa-check-circle'></i></span>  Resolved and Closed</p>
                        </div>
                        <div class="col-sm-12 col-md-4">
                            <div class="input-group input-group-sm">
                                <input type="search" id="searching" class="form-control" placeholder="Search by keywords" aria-label="Small" aria-describedby="inputGroup-sizing-sm" />
                            </div>

                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="table-condensed" id="KendoHeight" >

                        @(Html.Kendo().Grid<RVNLMIS.Models.DataIssueModel>()
                                      .Name("dataMissGrid")
                                      //.Filterable()
                                      .Columns(column =>
                                      {
                                      column.Template(t => { }).Title("#").ClientTemplate("#= renderNumber(data) #").Width("1%");
                                      column.Template(t => { }).HtmlAttributes(new { style = "text-align:center" }).Title("Status").HeaderHtmlAttributes(new { title = "Status" })
                                          .HtmlAttributes(new { title = "#=Status#" }).HeaderHtmlAttributes(new { style = "text-align:center" }).ClientTemplate("#= checkStatus(data) #").Width("1.2%");
                                      column.Bound(c => c.PackageCode).HtmlAttributes(new { style = "text-align:right" }).HeaderHtmlAttributes(new { title = "#=PackageCode#" })
                                                      .HeaderHtmlAttributes(new { style = "text-align:center" }).Width("1.5%").Title("PckgCode");
                                      column.Bound(c => c.DataTicket).HtmlAttributes(new { style = "text-align:left" })
                                          .HeaderHtmlAttributes(new { style = "text-align:center" }).Width("3%").Title("Ticket");
                                      column.Bound(c => c.ShortDescription).HtmlAttributes(new { style = "text-align:left" }).HtmlAttributes(new { title = "#= ShortDescription #" })
                                              .HeaderHtmlAttributes(new { style = "text-align:center" }).Width("2.8%").Title("Short Desc");
                                      column.Bound(c => c.Description).HtmlAttributes(new { style = "text-align:left" })
                                                  .HeaderHtmlAttributes(new { style = "text-align:center" }).HtmlAttributes(new { title = "#= Description #" }).Width("5%").Title("Description");
                                      //column.Bound(c => c.Status).HtmlAttributes(new { style = "text-align:right" }).HeaderHtmlAttributes(new { title = "#=Status#" }).HeaderHtmlAttributes(new { style = "text-align:center" }).Width("1.5%").Title("Status");
                                      column.Bound(c => c.CreatedOn).Format("{0: dd/MM/yyyy }").HtmlAttributes(new { style = "text-align:right" })
                                                  .HeaderHtmlAttributes(new { style = "text-align:center" }).Width("2%").Title("CreatedOn");
                                      column.Template(@<text></text>)
              .Title("Details")
              .ClientTemplate("" +
              "#if(StatusId!=4){#" +
              "<button data-url='/AssignDataIssue/GetDataIssueById/#=IssueId#' class='getIssueById btn btn-xs btn-warning' title='Update'><i class='feather icon-edit'></i></button>" +
              "#} else{# " +
              "<span class='text text-success'> Closed </span>" +
              " #}#")
              .HeaderHtmlAttributes(new { style = "text-align:center" }).Width("1%");

              //column.Command(command => command.Custom("ViewDetails").Click("showDetails")).HeaderHtmlAttributes(new { style = "text-align:center" }).Width("4%").Title("Details");
        }).Scrollable(scr => scr.Height(595))
      //.ToolBar(tools => { tools.Excel(); tools.Pdf(); })
      .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn).ShowIndexes(true))
      .Pageable(pageable => pageable.Refresh(true).PageSizes(true).ButtonCount(5).PageSizes(new List<object> { "all", 80, 90, 100 }).Refresh(true))
      .PersistSelection(true)

      .DataSource(dataSource => dataSource
      .Ajax()
      .Aggregates(aggregates =>
      {
      //aggregates.Add(p => p.GrantTotal).Min().Max().Count();
      //aggregates.Add(p => p.UnitsOnOrder).Average();
      aggregates.Add(p => p.PackageCode).Count();
      // aggregates.Add(p => p.GrantTotal).Sum();
      })
      //.Group(g => g.Add(c => c.CompanyName))
      .Model(model => model.Id(u => u.IssueId))
      .Read(read => read.Action("GetIssueList", "AssignDataIssue"))
      .PageSize(60))
      .Events(events => events.DataBound("dataBound"))
      .Groupable().Resizable(resize => resize.Columns(true))

                        )

                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(window).resize(function () {
            $('#KendoHeight').height($(window).height() - 235);
            $('#dataMissGrid').height($(window).height() - 238);
        });
        $(window).trigger('resize');
        var rowNumber = 0;
        function resetRowNumber(e) {
            rowNumber = 0;
        }
        function renderNumber(data) {
            return ++rowNumber;
        }

        function dataBound() {
            rowNumber = 0;

            $(".getIssueById").on("click", function (e) {
                e.preventDefault();
                var url = $(this).data("url");
                console.log(url);
                $.get(url, function (data) {
                    console.log(data);
                    $('#UpdateStatusContainer').html(data);
                    $('#UpdateStatusModel').modal('show');
                    setTimeout(function () {
                    }, 500);
                });
            });
        }

        function checkStatus(data) {
            var _Status = data.StatusId;
            var endDate = data.Status;
            console.log(_Status);
            if (_Status == 1) {
                return "<p style='padding-top:3px' class='text-warning'><i class='fa fa-exclamation-triangle'></i></p>";
            }
            else if (_Status == 2) {
                return "<p style='padding-top:3px' class='text-info'><i class='fa fa-exclamation-triangle'></i></p>";
            }
            else if (_Status == 3) {
                return "<p style='padding-top:3px' class='text-danger'><i class='fa fa-exclamation-triangle'></i></p>";
            }
            else {
                //return "<p style='padding-top:3px' class='text-danger'><i class='fa fa-minus-circle'></i></p>";
                return "<p style='padding-top:3px' class='text-success'><i class='fa fa-check-circle'></i></p>";

            }
        }

        function OnUpdateSuccess(data) {
            if (data == "0") {

                $.notify('Technical Error, Please try again', { align: "right", verticalAlign: "top", type: "warning", background: "#ff9933", color: "#ffffff" });
            }
            else if (data == "1") {
                $('#UpdateStatusModel').modal('hide');
                $('#UpdateStatusContainer').html("");

                $.notify('Status Updated Successfully', { align: "right", verticalAlign: "top", type: "success", background: "#0eed73", color: "#fff" });
                $('#dataMissGrid').data('kendoGrid').dataSource.read();
                $('#dataMissGrid').data('kendoGrid').refresh();             
            }
            else if (data=="2") {
                $.notify('Please Add remark to Update Ticket', { align: "right", verticalAlign: "top", type: "warning", background: "#ff9933", color: "#ffffff" });
            }
        }

        $("#searching").keyup(function () {
            var selecteditem = $('#searching').val();
            var kgrid = $("#dataMissGrid").data("kendoGrid");
            selecteditem = selecteditem.toUpperCase();
            var selectedArray = selecteditem.split(" ");
            if (selecteditem) {
                //kgrid.dataSource.filter({ field: "UserName", operator: "eq", value: selecteditem });
                var orfilter = { logic: "or", filters: [] };
                var andfilter = { logic: "and", filters: [] };
                $.each(selectedArray, function (i, v) {
                    if (v.trim() == "") {
                    }
                    else {
                        $.each(selectedArray, function (i, v1) {
                            if (v1.trim() == "") {
                            }
                            else {
                                orfilter.filters.push({ field: "PackageCode", operator: "contains", value: v1 },
                                    { field: "DataTicket", operator: "contains", value: v1 },
                                    { field: "Status", operator: "contains", value: v1 },
                                    { field: "ShortDescription", operator: "contains", value: v1 }

                                );
                                andfilter.filters.push(orfilter);
                                orfilter = { logic: "or", filters: [] };
                            }

                        });
                    }
                });
                kgrid.dataSource.filter(andfilter);
            }
            else {
                kgrid.dataSource.filter({});
            }

        });

    </script>

}