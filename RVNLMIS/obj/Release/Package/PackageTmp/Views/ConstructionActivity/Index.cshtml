@using System.Linq;
@model RVNLMIS.Models.ConstActivityViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var instanceUrl = System.Configuration.ConfigurationManager.AppSettings["ServerPath"] as string;
}

@*<script src="~/Scripts/kendo.all.min.js"></script>
    <script src="~/Scripts/kendo.aspnetmvc.min.js"></script>*@
<style>
    .k-button {
        border: 1px solid #4680ff;
        border-radius: 0px;
    }

    /*#KendoHeight{
        height:400px!important;
    }*/

</style>
<div class="modal fade" id="modalDelete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="myModalLabel">Confirm Delete</h5>
                <button id="btnCloseDelete" type="button" class="close btn-sm " data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

            </div>
            <div class="modal-body">
                <input type="hidden" id="hdnIdToDelete">
                <p class="success-message">Are you sure you wish to delete selected record ?</p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-sm btn-success delete-confirm" id="btnDeleteConfirm"><i class="fa fa-check mr-2"></i>Ok</button>
                <button class="btn btn-danger btn-sm" data-dismiss="modal"><i class="fa fa-times mr-2"></i>Cancel</button>
            </div>

        </div>
    </div>
</div>

<div class="content_wrapper">
    <div class="construction_activity">
        @*<div class="page-header">

            </div>*@
        @Html.HiddenFor(model => model.EntityActId)
        <!-- [ Main Content ] start -->



        <div class="row mb-2" id="divInfo">
            @Html.Partial("_ConstructionInfo", @Model)
        </div>


        <div class="row">
            <div class="col-md-4 pr-1">
                <!-- [ horizontal-layout ] start -->
                <div class="" id="divEditConstAct">
                    @Html.Partial("_AddEditConstActTransaction", new RVNLMIS.Models.ConstActivityViewModel())
                </div>


            </div>

            <div class="col-md-8 pl-1">
                <div class="">
                    <div class="card" id="
                         ">
                        <div class="card-header">
                            <h5>Existing Records</h5>
                        </div>
                        <div class="card-body" id="CardHeight">
                            <div class="" id="KendoHeight" style="height:auto!important;">

                                @(Html.Kendo().Grid<RVNLMIS.Models.ConstActivityViewModel>()
                                                        .Name("ExistingConstActGrid")
                                                        .Columns(columns =>
                                                        {
                                                            columns.Bound(c => c.TransactionDate).Format("{0:dd-MMM-yyyy}").HtmlAttributes(new { style = "text-align:center" })
                                                                            .HeaderHtmlAttributes(new { style = "text-align:center" }).Width(110);
                                                            columns.Bound(c => c.RevisedQty).HtmlAttributes(new { style = "text-align:right" })
                                                                            .HeaderHtmlAttributes(new { style = "text-align:center" });
                                                            columns.Bound(c => c.CompletedQty).HtmlAttributes(new { style = "text-align:right" })
                                                                            .HeaderHtmlAttributes(new { style = "text-align:center" });
                                                            columns.Bound(c => c.TargetDate).Format("{0:dd-MMM-yyyy}").HtmlAttributes(new { style = "text-align:center" })
                                                                            .HeaderHtmlAttributes(new { style = "text-align:center" }).Width(130);
                                                            columns.Bound(c => c.Remark).HtmlAttributes(new { style = "text-align:center" })
                                                                            .HeaderHtmlAttributes(new { style = "text-align:center" }).Width("20%");
                                                            columns.Template(@<text></text>).Title("Action").ClientTemplate("<button type='button' class='btn btn-xs btn-warning  has-ripple btnEditConsTran' data-url='/ConstructionActivity/LoadEditConsTransView/#=ConsTranId#' Title='Edit Transaction'><i class='feather icon-edit'></i></button>&nbsp;" +
                "<button type='button' class='btn btn-xs btn-danger  has-ripple btnDelete' data-key='#=ConsTranId#' Title='Delete Transaction'><i class='feather icon-trash'></i></button>&nbsp;" +
                "#if(AttachFilePath!=null){#<a href='/Procurement/DownloadDoc?path=#=AttachFilePath#&name=#=AttachFileName#' class='btnDownload btn btn-xs btn-success has-ripple'>" +
                "<i class='feather icon-download'></i></a>#}#").HeaderHtmlAttributes(new { style = "text-align:left" }).Width("12%");
                                        columns.Command(command => command.Custom("ViewDetails").Visible("showCommand").Click("showDetails"))
                                                                                        .HeaderHtmlAttributes(new { style = "text-align:center" }).Title("Details");

                                    }).Scrollable(scr => scr.Height(400))
.Pageable()
.Events(e => e.DataBound("onRowBound"))
.NoRecords("No Data Found.")
.Sortable()
.Resizable(resize => resize.Columns(true))
.Pageable(pageable => pageable
.Refresh(true)
.PageSizes(true)
.ButtonCount(5)
.PageSizes(new List<object> { 10, 20, 50, "all" }).Refresh(true))
.PersistSelection(true)
.DataSource(dataSource => dataSource
.Ajax()
//.Model(model => model.Id(u => u.PackMatId))
.Read(read => read.Action("Read_ExistingConstAct", "ConstructionActivity").Data("GetConstActId"))
.PageSize(15)))

                            </div>
                        </div>
                    </div>


                </div>
            </div>

        </div>



    </div>
</div>


@(Html.Kendo().Window().Name("Details")
            .Title("Document Preview")
            .Visible(false)
            .Modal(true)
            .Draggable(true)
            .Width(1000)
            .Height(635)
)
<style>
    .pdfview_popup {
        overflow: hidden;
        width: 100%
    }

    .k-window {
        overflow: hidden;
        border: 4px solid red;
    }

        .k-window > .k-window-titlebar {
            background: linear-gradient(to right, #5757c5, #00c18d) !important;
            color: #fff;
        }
</style>

<script type="text/x-kendo-template" id="template">
    <div id="details-container">
        <div class="row">
            <div class="col-sm-12" style="width: 500px">
                <div class="form-group">
                    <div class="col-sm-12">
                        <a class="label label-info" href="@instanceUrl#= AttachFilePath #" target="_blank"> <i class="fa fa-hand-point-right"></i> Click here if file not shown below</a>
                    </div>
                </div>
                <object data="@instanceUrl#= AttachFilePath #" type="application/pdf" width="100%" height="560px">
                    <embed src="https://drive.google.com/viewerng/viewer?url=@instanceUrl#= AttachFilePath #&embedded=true" width="100%" height="560px"></embed>
                </object>
            </div>
        </div>
    </div>
</script>

<script type="text/javascript">
    var detailsTemplate = kendo.template($("#template").html());

    function showDetails(e) {
        //e.preventDefault();

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var wnd = $("#Details").data("kendoWindow");

        wnd.content(detailsTemplate(dataItem));
        wnd.center().open();
    }
</script>

@section Scripts{
    <script>
        $(window).resize(function () {
            //$('#KendoHeight').height($(window).height() - 376);
            //$('#ExistingConstActGrid').height($(window).height() - 379);

            //$('#divEditConstAct').height($(window).height() - 385);

        });
        $(window).trigger('resize');
        function GetConstActId() {
            return { consActId: $("#EntityActId").val() }
        }

        function onRowBound() {
            $(".btnEditConsTran").click(function () {
                var url = $(this).data("url");
                $.get(url, function (data) {
                    $("#divEditConstAct").html(data);
                    BindClickEvent();
                    RefreshInfoSection();

                    $("#CompletedQty").keyup(function () {
                        $("#errCompQty").css('display', 'none');
                        var compQty = $(this).val();
                        //console.log(compQty);
                        var balCompQty = GetZeroIfNaN($("#lblBalComp").html());
                        //console.log(balCompQty);
                        var tempCompVal = GetZeroIfNaN($("#tempComp").val());
                        //console.log(tempCompVal);
                        if (parseFloat(compQty) > parseFloat(tempCompVal)) {
                            var newBal = (parseFloat(tempCompVal) - parseFloat(compQty));
                            //console.log(newBal);
                            if (parseFloat(balCompQty) < parseFloat(Math.abs(newBal))) {
                                $("#errCompQty").css('display', 'block');
                            }
                        }
                    });
                });
            });

            $(".btnDelete").on("click", function () {
                var Id = $(this).data("key");
                $("#hdnIdToDelete").val(Id);
                $("#modalDelete").modal({ backdrop: 'static', keyboard: false, position: 'center' });
            });
        }

        function showCommand(dataItem) {
            //console.log("determining to hide or show" + dataItem);
            // show the Edit button for the item with Status='New'
            if (dataItem.AttachFilePath != null) {
                return true;
            }
            else {
                return false;
            }
        }

        //function LoadPartialView(e) {
        //    var TransactionDate = e.target.value;
        //    var tranDate = new Date(document.getElementById('StrTransDate').value);
        //    console.log(TransactionDate);
        //    if (TransactionDate != "") {
        //        var today = new Date();
        //        if (tranDate > today) {
        //            $("#errTrans").css("display", "block");
        //        }
        //        else {
        //            $("#errTrans").css("display", "none");
        //            $.ajax({
        //                url: '/ConstructionActivity/AddEditConstActByDate',
        //                type: "POST",
        //                data: JSON.stringify({ 'transactionDate': TransactionDate, 'entActId': $("#EntityActId").val() }),
        //                contentType: "application/json; charset=utf-8",
        //                dataType: "text",
        //                success: function (data) {
        //                    $("#divEditConstAct").html(data);
        //                    //$("#btnPartialSubmit").css("display", "block");
        //                    $("#btnPartialSubmit").show();
        //                    BindClickEvent();
        //                },
        //                error: function (xhr, ajaxOptions, thrownError) {
        //                    $.notify('Error loading view', { align: "right", verticalAlign: "top", type: "danger", background: "#20D67B", color: "red" });
        //                }
        //            });
        //        }
        //    }
        //}

        function CheckTargetDate() {
            var targetDate = new Date(document.getElementById('StrTargetDate').value);
            var today = new Date();
            var year = targetDate.getFullYear();

            if (year.toString().length == 4 && year >= 2000) {
                $("#errTargetFormat").css("display", "none");
                if (targetDate < today) {
                    $("#errTarget").css("display", "block");
                }
                else {
                    $("#errTarget").css("display", "none");
                }
            }
            else {
                $("#errTarget").css("display", "none");
                $("#errTargetFormat").css("display", "block");
            }
        }

        function CheckTransDate() {
            $(".field-validation-error ").text('');
            var tranDate = new Date(document.getElementById('StrTransDate').value);
            var today = new Date();
            var year = tranDate.getFullYear();
            console.log(year.toString().length);
            if (year.toString().length == 4 && year >= 2000) {
                $("#errTransFormat").css("display", "none");
                if (tranDate > today) {
                    $("#errTrans").css("display", "block");
                    //$("#btnPartialDUSubmit").attr("disabled", true);
                }
                else {
                    $("#errTrans").css("display", "none");
                    //$('#btnPartialDUSubmit').removeAttr("disabled");
                }
            }
            else {
                $("#errTrans").css("display", "none");
                $("#errTransFormat").css("display", "block");
            }
        }

        $(document).ready(function () {
            BindClickEvent();
            BindQtyValidationAdd();
            $("#btnDeleteConfirm").on("click", function () {
                var id = $("#hdnIdToDelete").val();

                $.ajax({
                    url: '/ConstructionActivity/DeleteTransaction/' + id,
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function () {
                        //Refresh Kendo Grid
                        RefreshInfoSection();
                        $("#modalDelete").modal('hide');
                        $.notify('Deleted Successfully', { align: "right", verticalAlign: "top", type: "success", background: "#20D67B", color: "#fff" });
                        $('#ExistingConstActGrid').data('kendoGrid').dataSource.read();
                        $('#ExistingConstActGrid').data('kendoGrid').refresh();
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        //ShowErrorMessage('Error deleting Project!');
                    }
                });
            });
        });

        function BindClickEvent() {
            bs_input_file();
            $("#entityActvity").val($("#EntityActId").val());
            //$('#editProcPartial').on('#btnPartialSubmit','click', function (e) {
            $("#btnPartialSubmit").click(function () {
                if ($('#errTarget').css('display') == 'block' || $('#errTrans').css('display') == 'block' || $('#errCompQty').css('display') == 'block') {
                    return false;
                }
                else {
                    $(".se-pre-con").show();
                    //$("#entityActvity").val($("#EntityActId").val());
                    //alert($("#entityActvity").val());
                    var data = new FormData($('#ConstrTransForm')[0]);
                    console.log(data);
                    $.ajax({
                        url: '/ConstructionActivity/SubmitConstAct',
                        type: "POST",
                        data: data,
                        processData: false,
                        contentType: false,
                        success: function (response) {
                            $(".se-pre-con").hide();
                            if (response.includes('successfully')) {
                                $.notify(response, { align: "right", verticalAlign: "top", type: "success", background: "#20D67B", color: "#fff" });
                                ClearPartialView();
                                ////Refresh Kendo Grid
                                $('#ExistingConstActGrid').data('kendoGrid').dataSource.read();
                                $('#ExistingConstActGrid').data('kendoGrid').refresh();
                                RefreshInfoSection();

                            }
                            else if (response == "0") {
                                //$.notify("File Extension Is InValid - Only Upload jpeg/png/jpg File", { align: "right", verticalAlign: "top", type: "danger", background: "#ff0000", color: "#fff" });
                                $("#errFile").css("display", "block");
                            }
                            else {
                                $("#divEditConstAct").html(response);
                                BindClickEvent();
                                BindQtyValidationAdd();
                            }
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            // alert(xhr.error);
                        }
                    });
                }
            });


        }

        function BindQtyValidationAdd() {
            $("#RevisedQty").change(function () {
                var hdnBalComp = GetZeroIfNaN($("#hdnBalComp").val());

                var revisedQty = GetZeroIfNaN($(this).val());
                var newBalComp = (parseFloat(hdnBalComp) + parseFloat(revisedQty));
                console.log(newBalComp);
                $("#lblBalComp").html(newBalComp);

                var compQty = $("#CompletedQty").val();
                var balCompQty = GetZeroIfNaN($("#lblBalComp").html());
                if (parseFloat(compQty) > parseFloat(balCompQty)) {
                    $("#errCompQty").css('display', 'block');
                }
                else {
                    $("#errCompQty").css('display', 'none');
                }
            });

            $("#CompletedQty").keyup(function () {
                $("#errCompQty").css('display', 'none');
                var compQty = $(this).val();
                var balCompQty = GetZeroIfNaN($("#lblBalComp").html());
                //var revised = GetZeroIfNaN($("#RevisedQty").val());
                //var newBal = (parseFloat(balCompQty) + parseFloat(revised));
                if (parseFloat(compQty) > parseFloat(balCompQty)) {
                    $("#errCompQty").css('display', 'block');
                }
            });
        }

        function GetZeroIfNaN(value) {
            if (isNaN(parseFloat(value))) {
                return 0;
            }
            else {
                return value;
            }
        }


        function RefreshInfoSection() {
            $.ajax({
                url: '/ConstructionActivity/RefreshInfoSection',
                type: "POST",
                data: JSON.stringify({ 'entActId': $("#EntityActId").val() }),
                contentType: "application/json; charset=utf-8",
                dataType: "text",
                success: function (data) {
                    $("#divInfo").html(data);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    $.notify('Error loading view', { align: "right", verticalAlign: "top", type: "danger", background: "#20D67B", color: "red" });
                }
            });
        }
        //function OnPartialSuccess(response) {
        //    if (response.includes('successfully')) {
        //        $.notify(response, { align: "right", verticalAlign: "top", type: "success", background: "#20D67B", color: "#fff" });
        //        ClearPartialView();
        //        ////Refresh Kendo Grid
        //        $('#ExistingConstActGrid').data('kendoGrid').dataSource.read();
        //        $('#ExistingConstActGrid').data('kendoGrid').refresh();
        //    }
        //    else {
        //        $("#divEditConstAct").html(response);
        //        $("#btnPartialSubmit").show();
        //    }
        //}

        function ClearPartialView() {
            $("#ConsTranId").val("0");
            $("#StrTransDate").val("");
            $("#StrTargetDate").val("");
            $("#RevisedQty").val("");
            $("#CompletedQty").val("");
            $("#Remark").val("");
            $("#txtFileinput").val("");
            $("#AttachmentFile").val('');
            $("#openAttach").text("");
            // $("#btnPartialSubmit").css("display", "none");
        }

        function bs_input_file() {
            $(".input-file").before(
                function () {
                    if (!$(this).prev().hasClass('input-ghost')) {
                        var element = $("<input type='file' id='AttachmentFile' name='AttachmentFile' class='input-ghost' style='visibility:hidden; height:0'>");
                        // element.attr("name", $(this).attr("name"));
                        element.change(function () {
                            element.next(element).find('input').val((element.val()).split('\\').pop());
                            $("#errFile").css("display", "none");
                        });
                        $(this).find("button.btn-choose").click(function () {
                            element.click();
                        });
                        $(this).find("button.btn-reset").click(function () {
                            element.val(null);
                            $(this).parents(".input-file").find('input').val('');
                        });
                        $(this).find('input').css("cursor", "pointer");
                        $(this).find('input').mousedown(function () {
                            $(this).parents('.input-file').prev().click();
                            return false;
                        });
                        return element;
                    }
                }
            );
        }
    </script>
}   